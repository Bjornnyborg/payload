{"version":3,"file":"sanitize.js","names":["sanitizeClientFeatures","features","sanitized","enabledFeatures","enabledFormats","markdownTransformers","nodes","plugins","providers","slashMenu","dynamicGroups","groups","toolbarFixed","toolbarInline","size","forEach","feature","length","concat","enableFormats","push","node","plugin","i","clientProps","sanitizedClientFeatureProps","Component","key","position","group","foundGroup","find","sanitizedGroup","items","filter","optionGroup","transformer","allNodes","allTransformers","sort","a","b","order","sanitizeClientEditorConfig","resolvedClientFeatureMap","lexical","admin","resolvedFeatureMap"],"sources":["../../../../src/lexical/config/client/sanitize.ts"],"sourcesContent":["'use client'\n\nimport type { EditorConfig as LexicalEditorConfig } from 'lexical'\n\nimport type {\n  ResolvedClientFeatureMap,\n  SanitizedClientFeatures,\n} from '../../../features/typesClient.js'\nimport type { LexicalFieldAdminClientProps } from '../../../types.js'\nimport type { SanitizedClientEditorConfig } from '../types.js'\n\nexport const sanitizeClientFeatures = (\n  features: ResolvedClientFeatureMap,\n): SanitizedClientFeatures => {\n  const sanitized: SanitizedClientFeatures = {\n    enabledFeatures: [],\n    enabledFormats: [],\n    markdownTransformers: [],\n    nodes: [],\n    plugins: [],\n    providers: [],\n    slashMenu: {\n      dynamicGroups: [],\n      groups: [],\n    },\n    toolbarFixed: {\n      groups: [],\n    },\n    toolbarInline: {\n      groups: [],\n    },\n  }\n\n  if (!features?.size) {\n    return sanitized\n  }\n\n  features.forEach((feature) => {\n    if (feature.providers?.length) {\n      sanitized.providers = sanitized.providers.concat(feature.providers)\n    }\n\n    if (feature.enableFormats?.length) {\n      sanitized.enabledFormats.push(...feature.enableFormats)\n    }\n\n    if (feature.nodes?.length) {\n      // Important: do not use concat\n      for (const node of feature.nodes) {\n        sanitized.nodes.push(node)\n      }\n    }\n    if (feature.plugins?.length) {\n      feature.plugins.forEach((plugin, i) => {\n        sanitized.plugins?.push({\n          clientProps: feature.sanitizedClientFeatureProps,\n          Component: plugin.Component as any, // Appeases strict: true\n          key: feature.key + i,\n          position: plugin.position,\n        })\n      })\n    }\n\n    if (feature.toolbarInline?.groups?.length) {\n      for (const group of feature.toolbarInline.groups) {\n        // 1. find the group with the same key or create new one\n        let foundGroup = sanitized.toolbarInline.groups.find(\n          (sanitizedGroup) => sanitizedGroup.key === group.key,\n        )\n        if (!foundGroup) {\n          foundGroup = {\n            ...group,\n            items: [],\n          }\n        } else {\n          sanitized.toolbarInline.groups = sanitized.toolbarInline.groups.filter(\n            (sanitizedGroup) => sanitizedGroup.key !== group.key,\n          )\n        }\n\n        // 2. Add options to group options array and add to sanitized.slashMenu.groupsWithOptions\n        if (group?.items?.length) {\n          foundGroup.items = foundGroup.items.concat(group.items)\n        }\n        sanitized.toolbarInline?.groups.push(foundGroup)\n      }\n    }\n\n    if (feature.toolbarFixed?.groups?.length) {\n      for (const group of feature.toolbarFixed.groups) {\n        // 1. find the group with the same key or create new one\n        let foundGroup = sanitized.toolbarFixed.groups.find(\n          (sanitizedGroup) => sanitizedGroup.key === group.key,\n        )\n        if (!foundGroup) {\n          foundGroup = {\n            ...group,\n            items: [],\n          }\n        } else {\n          sanitized.toolbarFixed.groups = sanitized.toolbarFixed.groups.filter(\n            (sanitizedGroup) => sanitizedGroup.key !== group.key,\n          )\n        }\n\n        // 2. Add options to group options array and add to sanitized.slashMenu.groupsWithOptions\n        if (group?.items?.length) {\n          foundGroup.items = foundGroup.items.concat(group.items)\n        }\n        sanitized.toolbarFixed?.groups.push(foundGroup)\n      }\n    }\n\n    if (feature.slashMenu?.groups) {\n      if (feature.slashMenu.dynamicGroups?.length) {\n        sanitized.slashMenu.dynamicGroups = sanitized.slashMenu.dynamicGroups.concat(\n          feature.slashMenu.dynamicGroups,\n        )\n      }\n\n      for (const optionGroup of feature.slashMenu.groups) {\n        // 1. find the group with the same name or create new one\n        let group = sanitized.slashMenu.groups.find((group) => group.key === optionGroup.key)\n        if (!group) {\n          group = {\n            ...optionGroup,\n            items: [],\n          }\n        } else {\n          sanitized.slashMenu.groups = sanitized.slashMenu.groups.filter(\n            (group) => group.key !== optionGroup.key,\n          )\n        }\n\n        // 2. Add options to group options array and add to sanitized.slashMenu.groupsWithOptions\n        if (optionGroup?.items?.length) {\n          group.items = group.items.concat(optionGroup.items)\n        }\n        sanitized.slashMenu.groups.push(group)\n      }\n    }\n\n    if (feature.markdownTransformers?.length) {\n      // Important: do not use concat\n      for (const transformer of feature.markdownTransformers) {\n        if (typeof transformer === 'function') {\n          sanitized.markdownTransformers.push(\n            transformer({\n              allNodes: sanitized.nodes,\n              allTransformers: sanitized.markdownTransformers,\n            }),\n          )\n        } else {\n          sanitized.markdownTransformers.push(transformer)\n        }\n      }\n    }\n    sanitized.enabledFeatures.push(feature.key)\n  })\n\n  // Sort sanitized.toolbarInline.groups by order property\n  sanitized.toolbarInline.groups.sort((a, b) => {\n    if (a.order && b.order) {\n      return a.order - b.order\n    } else if (a.order) {\n      return -1\n    } else if (b.order) {\n      return 1\n    } else {\n      return 0\n    }\n  })\n  // Sort sanitized.toolbarFixed.groups by order property\n  sanitized.toolbarFixed.groups.sort((a, b) => {\n    if (a.order && b.order) {\n      return a.order - b.order\n    } else if (a.order) {\n      return -1\n    } else if (b.order) {\n      return 1\n    } else {\n      return 0\n    }\n  })\n\n  // Sort sanitized.toolbarInline.groups.[group].entries by order property\n  for (const group of sanitized.toolbarInline.groups) {\n    group.items.sort((a, b) => {\n      if (a.order && b.order) {\n        return a.order - b.order\n      } else if (a.order) {\n        return -1\n      } else if (b.order) {\n        return 1\n      } else {\n        return 0\n      }\n    })\n  }\n\n  // Sort sanitized.toolbarFixed.groups.[group].entries by order property\n  for (const group of sanitized.toolbarFixed.groups) {\n    group.items.sort((a, b) => {\n      if (a.order && b.order) {\n        return a.order - b.order\n      } else if (a.order) {\n        return -1\n      } else if (b.order) {\n        return 1\n      } else {\n        return 0\n      }\n    })\n  }\n\n  return sanitized\n}\n\nexport function sanitizeClientEditorConfig(\n  resolvedClientFeatureMap: ResolvedClientFeatureMap,\n  lexical?: LexicalEditorConfig,\n  admin?: LexicalFieldAdminClientProps,\n): SanitizedClientEditorConfig {\n  return {\n    admin,\n    features: sanitizeClientFeatures(resolvedClientFeatureMap),\n    lexical: lexical!,\n    resolvedFeatureMap: resolvedClientFeatureMap,\n  }\n}\n"],"mappings":"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","ignoreList":[]}