{"version":3,"file":"index.js","names":["getTranslation","FieldDiffLabel","React","convertLexicalToHTMLAsync","getPayloadPopulateFn","LinkDiffHTMLConverterAsync","ListItemDiffHTMLConverterAsync","RelationshipDiffHTMLConverterAsync","UnknownDiffHTMLConverterAsync","UploadDiffHTMLConverterAsync","HtmlDiff","baseClass","LexicalDiffComponent","args","comparisonValue","field","i18n","locale","versionValue","converters","defaultConverters","req","payloadPopulateFn","currentDepth","depth","comparisonHTML","data","populate","versionHTML","diffHTML","oldHTML","newHTML","getSideBySideContents","_jsxs","className","_jsx","label","dangerouslySetInnerHTML","__html"],"sources":["../../../src/field/Diff/index.tsx"],"sourcesContent":["import type { SerializedEditorState } from 'lexical'\nimport type { RichTextFieldDiffServerComponent } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { FieldDiffLabel } from '@payloadcms/ui/rsc'\nimport React from 'react'\n\nimport './htmlDiff/index.scss'\nimport './index.scss'\nimport '../bundled.css'\n\nimport type { HTMLConvertersFunctionAsync } from '../../features/converters/lexicalToHtml/async/types.js'\n\nimport { convertLexicalToHTMLAsync } from '../../features/converters/lexicalToHtml/async/index.js'\nimport { getPayloadPopulateFn } from '../../features/converters/utilities/payloadPopulateFn.js'\nimport { LinkDiffHTMLConverterAsync } from './converters/link.js'\nimport { ListItemDiffHTMLConverterAsync } from './converters/listitem/index.js'\nimport { RelationshipDiffHTMLConverterAsync } from './converters/relationship/index.js'\nimport { UnknownDiffHTMLConverterAsync } from './converters/unknown/index.js'\nimport { UploadDiffHTMLConverterAsync } from './converters/upload/index.js'\nimport { HtmlDiff } from './htmlDiff/index.js'\nconst baseClass = 'lexical-diff'\n\nexport const LexicalDiffComponent: RichTextFieldDiffServerComponent = async (args) => {\n  const { comparisonValue, field, i18n, locale, versionValue } = args\n\n  const converters: HTMLConvertersFunctionAsync = ({ defaultConverters }) => ({\n    ...defaultConverters,\n    ...LinkDiffHTMLConverterAsync({}),\n    ...ListItemDiffHTMLConverterAsync,\n    ...UploadDiffHTMLConverterAsync({ i18n: args.i18n, req: args.req }),\n    ...RelationshipDiffHTMLConverterAsync({ i18n: args.i18n, req: args.req }),\n    ...UnknownDiffHTMLConverterAsync({ i18n: args.i18n, req: args.req }),\n  })\n\n  const payloadPopulateFn = await getPayloadPopulateFn({\n    currentDepth: 0,\n    depth: 1,\n    req: args.req,\n  })\n  const comparisonHTML = await convertLexicalToHTMLAsync({\n    converters,\n    data: comparisonValue as SerializedEditorState,\n    populate: payloadPopulateFn,\n  })\n\n  const versionHTML = await convertLexicalToHTMLAsync({\n    converters,\n    data: versionValue as SerializedEditorState,\n    populate: payloadPopulateFn,\n  })\n\n  const diffHTML = new HtmlDiff(comparisonHTML, versionHTML)\n\n  const [oldHTML, newHTML] = diffHTML.getSideBySideContents()\n\n  return (\n    <div className={baseClass}>\n      <FieldDiffLabel>\n        {locale && <span className={`${baseClass}__locale-label`}>{locale}</span>}\n        {'label' in field &&\n          typeof field.label !== 'function' &&\n          getTranslation(field.label || '', i18n)}\n      </FieldDiffLabel>\n      <div className={`${baseClass}__diff-container`}>\n        {oldHTML && (\n          <div className={`${baseClass}__diff-old`} dangerouslySetInnerHTML={{ __html: oldHTML }} />\n        )}\n        {newHTML && (\n          <div className={`${baseClass}__diff-new`} dangerouslySetInnerHTML={{ __html: newHTML }} />\n        )}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAGA,SAASA,cAAc,QAAQ;AAC/B,SAASC,cAAc,QAAQ;AAC/B,OAAOC,KAAA,MAAW;AAIlB,OAAO;AAIP,SAASC,yBAAyB,QAAQ;AAC1C,SAASC,oBAAoB,QAAQ;AACrC,SAASC,0BAA0B,QAAQ;AAC3C,SAASC,8BAA8B,QAAQ;AAC/C,SAASC,kCAAkC,QAAQ;AACnD,SAASC,6BAA6B,QAAQ;AAC9C,SAASC,4BAA4B,QAAQ;AAC7C,SAASC,QAAQ,QAAQ;AACzB,MAAMC,SAAA,GAAY;AAElB,OAAO,MAAMC,oBAAA,GAAyD,MAAOC,IAAA;EAC3E,MAAM;IAAEC,eAAe;IAAEC,KAAK;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAY,CAAE,GAAGL,IAAA;EAE/D,MAAMM,UAAA,GAA0CA,CAAC;IAAEC;EAAiB,CAAE,MAAM;IAC1E,GAAGA,iBAAiB;IACpB,GAAGf,0BAAA,CAA2B,CAAC,EAAE;IACjC,GAAGC,8BAA8B;IACjC,GAAGG,4BAAA,CAA6B;MAAEO,IAAA,EAAMH,IAAA,CAAKG,IAAI;MAAEK,GAAA,EAAKR,IAAA,CAAKQ;IAAI,EAAE;IACnE,GAAGd,kCAAA,CAAmC;MAAES,IAAA,EAAMH,IAAA,CAAKG,IAAI;MAAEK,GAAA,EAAKR,IAAA,CAAKQ;IAAI,EAAE;IACzE,GAAGb,6BAAA,CAA8B;MAAEQ,IAAA,EAAMH,IAAA,CAAKG,IAAI;MAAEK,GAAA,EAAKR,IAAA,CAAKQ;IAAI;EACpE;EAEA,MAAMC,iBAAA,GAAoB,MAAMlB,oBAAA,CAAqB;IACnDmB,YAAA,EAAc;IACdC,KAAA,EAAO;IACPH,GAAA,EAAKR,IAAA,CAAKQ;EACZ;EACA,MAAMI,cAAA,GAAiB,MAAMtB,yBAAA,CAA0B;IACrDgB,UAAA;IACAO,IAAA,EAAMZ,eAAA;IACNa,QAAA,EAAUL;EACZ;EAEA,MAAMM,WAAA,GAAc,MAAMzB,yBAAA,CAA0B;IAClDgB,UAAA;IACAO,IAAA,EAAMR,YAAA;IACNS,QAAA,EAAUL;EACZ;EAEA,MAAMO,QAAA,GAAW,IAAInB,QAAA,CAASe,cAAA,EAAgBG,WAAA;EAE9C,MAAM,CAACE,OAAA,EAASC,OAAA,CAAQ,GAAGF,QAAA,CAASG,qBAAqB;EAEzD,oBACEC,KAAA,CAAC;IAAIC,SAAA,EAAWvB,SAAA;4BACdsB,KAAA,CAAChC,cAAA;iBACEgB,MAAA,iBAAUkB,IAAA,CAAC;QAAKD,SAAA,EAAW,GAAGvB,SAAA,gBAAyB;kBAAGM;UAC1D,WAAWF,KAAA,IACV,OAAOA,KAAA,CAAMqB,KAAK,KAAK,cACvBpC,cAAA,CAAee,KAAA,CAAMqB,KAAK,IAAI,IAAIpB,IAAA;qBAEtCiB,KAAA,CAAC;MAAIC,SAAA,EAAW,GAAGvB,SAAA,kBAA2B;iBAC3CmB,OAAA,iBACCK,IAAA,CAAC;QAAID,SAAA,EAAW,GAAGvB,SAAA,YAAqB;QAAE0B,uBAAA,EAAyB;UAAEC,MAAA,EAAQR;QAAQ;UAEtFC,OAAA,iBACCI,IAAA,CAAC;QAAID,SAAA,EAAW,GAAGvB,SAAA,YAAqB;QAAE0B,uBAAA,EAAyB;UAAEC,MAAA,EAAQP;QAAQ;;;;AAK/F","ignoreList":[]}