{"version":3,"sources":["../../src/utils/getRangeFromHeader.ts"],"sourcesContent":["import type { BlockBlobClient } from '@azure/storage-blob'\n\nimport parseRange from 'range-parser'\n\nexport const getRangeFromHeader = async (\n  blockBlobClient: BlockBlobClient,\n  rangeHeader?: string,\n): Promise<{ end: number | undefined; start: number }> => {\n  const fullRange = { end: undefined, start: 0 }\n\n  if (!rangeHeader) {\n    return fullRange\n  }\n\n  const size = await blockBlobClient.getProperties().then((props) => props.contentLength)\n  if (size === undefined) {\n    return fullRange\n  }\n\n  const range = parseRange(size, rangeHeader)\n  if (range === -1 || range === -2 || range.type !== 'bytes' || range.length !== 1) {\n    return fullRange\n  }\n\n  return range[0] ?? fullRange\n}\n"],"names":["parseRange","getRangeFromHeader","blockBlobClient","rangeHeader","fullRange","end","undefined","start","size","getProperties","then","props","contentLength","range","type","length"],"mappings":"AAEA,OAAOA,gBAAgB,eAAc;AAErC,OAAO,MAAMC,qBAAqB,OAChCC,iBACAC;IAEA,MAAMC,YAAY;QAAEC,KAAKC;QAAWC,OAAO;IAAE;IAE7C,IAAI,CAACJ,aAAa;QAChB,OAAOC;IACT;IAEA,MAAMI,OAAO,MAAMN,gBAAgBO,aAAa,GAAGC,IAAI,CAAC,CAACC,QAAUA,MAAMC,aAAa;IACtF,IAAIJ,SAASF,WAAW;QACtB,OAAOF;IACT;IAEA,MAAMS,QAAQb,WAAWQ,MAAML;IAC/B,IAAIU,UAAU,CAAC,KAAKA,UAAU,CAAC,KAAKA,MAAMC,IAAI,KAAK,WAAWD,MAAME,MAAM,KAAK,GAAG;QAChF,OAAOX;IACT;IAEA,OAAOS,KAAK,CAAC,EAAE,IAAIT;AACrB,EAAC"}