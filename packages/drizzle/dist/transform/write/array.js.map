{"version":3,"sources":["../../../src/transform/write/array.ts"],"sourcesContent":["import type { FlattenedArrayField } from 'payload'\n\nimport { fieldShouldBeLocalized } from 'payload/shared'\n\nimport type { DrizzleAdapter } from '../../types.js'\nimport type { ArrayRowToInsert, BlockRowToInsert, RelationshipToDelete } from './types.js'\n\nimport { isArrayOfRows } from '../../utilities/isArrayOfRows.js'\nimport { traverseFields } from './traverseFields.js'\n\ntype Args = {\n  adapter: DrizzleAdapter\n  arrayTableName: string\n  baseTableName: string\n  blocks: {\n    [blockType: string]: BlockRowToInsert[]\n  }\n  blocksToDelete: Set<string>\n  data: unknown\n  field: FlattenedArrayField\n  locale?: string\n  numbers: Record<string, unknown>[]\n  parentIsLocalized: boolean\n  path: string\n  relationships: Record<string, unknown>[]\n  relationshipsToDelete: RelationshipToDelete[]\n  selects: {\n    [tableName: string]: Record<string, unknown>[]\n  }\n  texts: Record<string, unknown>[]\n  /**\n   * Set to a locale code if this set of fields is traversed within a\n   * localized array or block field\n   */\n  withinArrayOrBlockLocale?: string\n}\n\nexport const transformArray = ({\n  adapter,\n  arrayTableName,\n  baseTableName,\n  blocks,\n  blocksToDelete,\n  data,\n  field,\n  locale,\n  numbers,\n  parentIsLocalized,\n  path,\n  relationships,\n  relationshipsToDelete,\n  selects,\n  texts,\n  withinArrayOrBlockLocale,\n}: Args) => {\n  const newRows: ArrayRowToInsert[] = []\n\n  const hasUUID = adapter.tables[arrayTableName]._uuid\n\n  if (isArrayOfRows(data)) {\n    data.forEach((arrayRow, i) => {\n      const newRow: ArrayRowToInsert = {\n        arrays: {},\n        locales: {},\n        row: {\n          _order: i + 1,\n        },\n      }\n\n      // If we have declared a _uuid field on arrays,\n      // that means the ID has to be unique,\n      // and our ids within arrays are not unique.\n      // So move the ID to a uuid field for storage\n      // and allow the database to generate a serial id automatically\n      if (hasUUID) {\n        newRow.row._uuid = arrayRow.id\n        delete arrayRow.id\n      }\n\n      if (locale) {\n        newRow.locales[locale] = {\n          _locale: locale,\n        }\n      }\n\n      if (fieldShouldBeLocalized({ field, parentIsLocalized }) && locale) {\n        newRow.row._locale = locale\n      }\n\n      if (withinArrayOrBlockLocale) {\n        newRow.row._locale = withinArrayOrBlockLocale\n      }\n\n      traverseFields({\n        adapter,\n        arrays: newRow.arrays,\n        baseTableName,\n        blocks,\n        blocksToDelete,\n        columnPrefix: '',\n        data: arrayRow,\n        fieldPrefix: '',\n        fields: field.flattenedFields,\n        insideArrayOrBlock: true,\n        locales: newRow.locales,\n        numbers,\n        parentIsLocalized: parentIsLocalized || field.localized,\n        parentTableName: arrayTableName,\n        path: `${path || ''}${field.name}.${i}.`,\n        relationships,\n        relationshipsToDelete,\n        row: newRow.row,\n        selects,\n        texts,\n        withinArrayOrBlockLocale,\n      })\n\n      newRows.push(newRow)\n    })\n  }\n\n  return newRows\n}\n"],"names":["fieldShouldBeLocalized","isArrayOfRows","traverseFields","transformArray","adapter","arrayTableName","baseTableName","blocks","blocksToDelete","data","field","locale","numbers","parentIsLocalized","path","relationships","relationshipsToDelete","selects","texts","withinArrayOrBlockLocale","newRows","hasUUID","tables","_uuid","forEach","arrayRow","i","newRow","arrays","locales","row","_order","id","_locale","columnPrefix","fieldPrefix","fields","flattenedFields","insideArrayOrBlock","localized","parentTableName","name","push"],"mappings":"AAEA,SAASA,sBAAsB,QAAQ,iBAAgB;AAKvD,SAASC,aAAa,QAAQ,mCAAkC;AAChE,SAASC,cAAc,QAAQ,sBAAqB;AA6BpD,OAAO,MAAMC,iBAAiB,CAAC,EAC7BC,OAAO,EACPC,cAAc,EACdC,aAAa,EACbC,MAAM,EACNC,cAAc,EACdC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,OAAO,EACPC,iBAAiB,EACjBC,IAAI,EACJC,aAAa,EACbC,qBAAqB,EACrBC,OAAO,EACPC,KAAK,EACLC,wBAAwB,EACnB;IACL,MAAMC,UAA8B,EAAE;IAEtC,MAAMC,UAAUjB,QAAQkB,MAAM,CAACjB,eAAe,CAACkB,KAAK;IAEpD,IAAItB,cAAcQ,OAAO;QACvBA,KAAKe,OAAO,CAAC,CAACC,UAAUC;YACtB,MAAMC,SAA2B;gBAC/BC,QAAQ,CAAC;gBACTC,SAAS,CAAC;gBACVC,KAAK;oBACHC,QAAQL,IAAI;gBACd;YACF;YAEA,+CAA+C;YAC/C,sCAAsC;YACtC,4CAA4C;YAC5C,6CAA6C;YAC7C,+DAA+D;YAC/D,IAAIL,SAAS;gBACXM,OAAOG,GAAG,CAACP,KAAK,GAAGE,SAASO,EAAE;gBAC9B,OAAOP,SAASO,EAAE;YACpB;YAEA,IAAIrB,QAAQ;gBACVgB,OAAOE,OAAO,CAAClB,OAAO,GAAG;oBACvBsB,SAAStB;gBACX;YACF;YAEA,IAAIX,uBAAuB;gBAAEU;gBAAOG;YAAkB,MAAMF,QAAQ;gBAClEgB,OAAOG,GAAG,CAACG,OAAO,GAAGtB;YACvB;YAEA,IAAIQ,0BAA0B;gBAC5BQ,OAAOG,GAAG,CAACG,OAAO,GAAGd;YACvB;YAEAjB,eAAe;gBACbE;gBACAwB,QAAQD,OAAOC,MAAM;gBACrBtB;gBACAC;gBACAC;gBACA0B,cAAc;gBACdzB,MAAMgB;gBACNU,aAAa;gBACbC,QAAQ1B,MAAM2B,eAAe;gBAC7BC,oBAAoB;gBACpBT,SAASF,OAAOE,OAAO;gBACvBjB;gBACAC,mBAAmBA,qBAAqBH,MAAM6B,SAAS;gBACvDC,iBAAiBnC;gBACjBS,MAAM,GAAGA,QAAQ,KAAKJ,MAAM+B,IAAI,CAAC,CAAC,EAAEf,EAAE,CAAC,CAAC;gBACxCX;gBACAC;gBACAc,KAAKH,OAAOG,GAAG;gBACfb;gBACAC;gBACAC;YACF;YAEAC,QAAQsB,IAAI,CAACf;QACf;IACF;IAEA,OAAOP;AACT,EAAC"}