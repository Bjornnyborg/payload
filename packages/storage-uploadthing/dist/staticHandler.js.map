{"version":3,"sources":["../src/staticHandler.ts"],"sourcesContent":["import type { StaticHandler } from '@payloadcms/plugin-cloud-storage/types'\nimport type { Where } from 'payload'\nimport type { UTApi } from 'uploadthing/server'\n\nimport { getKeyFromFilename } from './utilities.js'\n\ntype Args = {\n  utApi: UTApi\n}\n\nexport const getHandler = ({ utApi }: Args): StaticHandler => {\n  return async (req, { doc, params: { clientUploadContext, collection, filename } }) => {\n    try {\n      let key: string\n\n      if (\n        clientUploadContext &&\n        typeof clientUploadContext === 'object' &&\n        'key' in clientUploadContext &&\n        typeof clientUploadContext.key === 'string'\n      ) {\n        key = clientUploadContext.key\n      } else {\n        const collectionConfig = req.payload.collections[collection]?.config\n        let retrievedDoc = doc\n\n        if (!retrievedDoc) {\n          const or: Where[] = [\n            {\n              filename: {\n                equals: filename,\n              },\n            },\n          ]\n\n          if (collectionConfig.upload.imageSizes) {\n            collectionConfig.upload.imageSizes.forEach(({ name }) => {\n              or.push({\n                [`sizes.${name}.filename`]: {\n                  equals: filename,\n                },\n              })\n            })\n          }\n\n          const result = await req.payload.db.findOne({\n            collection,\n            req,\n            where: { or },\n          })\n\n          if (result) {\n            retrievedDoc = result\n          }\n        }\n\n        if (!retrievedDoc) {\n          return new Response(null, { status: 404, statusText: 'Not Found' })\n        }\n\n        key = getKeyFromFilename(retrievedDoc, filename)\n      }\n\n      if (!key) {\n        return new Response(null, { status: 404, statusText: 'Not Found' })\n      }\n\n      const { url: signedURL } = await utApi.getSignedURL(key)\n\n      if (!signedURL) {\n        return new Response(null, { status: 404, statusText: 'Not Found' })\n      }\n\n      const response = await fetch(signedURL)\n\n      if (!response.ok) {\n        return new Response(null, { status: 404, statusText: 'Not Found' })\n      }\n\n      const blob = await response.blob()\n\n      const etagFromHeaders = req.headers.get('etag') || req.headers.get('if-none-match')\n      const objectEtag = response.headers.get('etag')\n\n      if (etagFromHeaders && etagFromHeaders === objectEtag) {\n        return new Response(null, {\n          headers: new Headers({\n            'Content-Length': String(blob.size),\n            'Content-Type': blob.type,\n            ETag: objectEtag,\n          }),\n          status: 304,\n        })\n      }\n\n      return new Response(blob, {\n        headers: new Headers({\n          'Content-Length': String(blob.size),\n          'Content-Type': blob.type,\n          ETag: objectEtag,\n        }),\n        status: 200,\n      })\n    } catch (err) {\n      req.payload.logger.error({ err, msg: 'Unexpected error in staticHandler' })\n      return new Response('Internal Server Error', { status: 500 })\n    }\n  }\n}\n"],"names":["getKeyFromFilename","getHandler","utApi","req","doc","params","clientUploadContext","collection","filename","key","collectionConfig","payload","collections","config","retrievedDoc","or","equals","upload","imageSizes","forEach","name","push","result","db","findOne","where","Response","status","statusText","url","signedURL","getSignedURL","response","fetch","ok","blob","etagFromHeaders","headers","get","objectEtag","Headers","String","size","type","ETag","err","logger","error","msg"],"mappings":"AAIA,SAASA,kBAAkB,QAAQ,iBAAgB;AAMnD,OAAO,MAAMC,aAAa,CAAC,EAAEC,KAAK,EAAQ;IACxC,OAAO,OAAOC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,UAAU,EAAEC,QAAQ,EAAE,EAAE;QAC/E,IAAI;YACF,IAAIC;YAEJ,IACEH,uBACA,OAAOA,wBAAwB,YAC/B,SAASA,uBACT,OAAOA,oBAAoBG,GAAG,KAAK,UACnC;gBACAA,MAAMH,oBAAoBG,GAAG;YAC/B,OAAO;gBACL,MAAMC,mBAAmBP,IAAIQ,OAAO,CAACC,WAAW,CAACL,WAAW,EAAEM;gBAC9D,IAAIC,eAAeV;gBAEnB,IAAI,CAACU,cAAc;oBACjB,MAAMC,KAAc;wBAClB;4BACEP,UAAU;gCACRQ,QAAQR;4BACV;wBACF;qBACD;oBAED,IAAIE,iBAAiBO,MAAM,CAACC,UAAU,EAAE;wBACtCR,iBAAiBO,MAAM,CAACC,UAAU,CAACC,OAAO,CAAC,CAAC,EAAEC,IAAI,EAAE;4BAClDL,GAAGM,IAAI,CAAC;gCACN,CAAC,CAAC,MAAM,EAAED,KAAK,SAAS,CAAC,CAAC,EAAE;oCAC1BJ,QAAQR;gCACV;4BACF;wBACF;oBACF;oBAEA,MAAMc,SAAS,MAAMnB,IAAIQ,OAAO,CAACY,EAAE,CAACC,OAAO,CAAC;wBAC1CjB;wBACAJ;wBACAsB,OAAO;4BAAEV;wBAAG;oBACd;oBAEA,IAAIO,QAAQ;wBACVR,eAAeQ;oBACjB;gBACF;gBAEA,IAAI,CAACR,cAAc;oBACjB,OAAO,IAAIY,SAAS,MAAM;wBAAEC,QAAQ;wBAAKC,YAAY;oBAAY;gBACnE;gBAEAnB,MAAMT,mBAAmBc,cAAcN;YACzC;YAEA,IAAI,CAACC,KAAK;gBACR,OAAO,IAAIiB,SAAS,MAAM;oBAAEC,QAAQ;oBAAKC,YAAY;gBAAY;YACnE;YAEA,MAAM,EAAEC,KAAKC,SAAS,EAAE,GAAG,MAAM5B,MAAM6B,YAAY,CAACtB;YAEpD,IAAI,CAACqB,WAAW;gBACd,OAAO,IAAIJ,SAAS,MAAM;oBAAEC,QAAQ;oBAAKC,YAAY;gBAAY;YACnE;YAEA,MAAMI,WAAW,MAAMC,MAAMH;YAE7B,IAAI,CAACE,SAASE,EAAE,EAAE;gBAChB,OAAO,IAAIR,SAAS,MAAM;oBAAEC,QAAQ;oBAAKC,YAAY;gBAAY;YACnE;YAEA,MAAMO,OAAO,MAAMH,SAASG,IAAI;YAEhC,MAAMC,kBAAkBjC,IAAIkC,OAAO,CAACC,GAAG,CAAC,WAAWnC,IAAIkC,OAAO,CAACC,GAAG,CAAC;YACnE,MAAMC,aAAaP,SAASK,OAAO,CAACC,GAAG,CAAC;YAExC,IAAIF,mBAAmBA,oBAAoBG,YAAY;gBACrD,OAAO,IAAIb,SAAS,MAAM;oBACxBW,SAAS,IAAIG,QAAQ;wBACnB,kBAAkBC,OAAON,KAAKO,IAAI;wBAClC,gBAAgBP,KAAKQ,IAAI;wBACzBC,MAAML;oBACR;oBACAZ,QAAQ;gBACV;YACF;YAEA,OAAO,IAAID,SAASS,MAAM;gBACxBE,SAAS,IAAIG,QAAQ;oBACnB,kBAAkBC,OAAON,KAAKO,IAAI;oBAClC,gBAAgBP,KAAKQ,IAAI;oBACzBC,MAAML;gBACR;gBACAZ,QAAQ;YACV;QACF,EAAE,OAAOkB,KAAK;YACZ1C,IAAIQ,OAAO,CAACmC,MAAM,CAACC,KAAK,CAAC;gBAAEF;gBAAKG,KAAK;YAAoC;YACzE,OAAO,IAAItB,SAAS,yBAAyB;gBAAEC,QAAQ;YAAI;QAC7D;IACF;AACF,EAAC"}