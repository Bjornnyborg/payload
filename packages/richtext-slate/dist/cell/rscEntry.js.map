{"version":3,"sources":["../../src/cell/rscEntry.tsx"],"sourcesContent":["import type { DefaultServerCellComponentProps, Payload } from 'payload'\n\nimport { getTranslation, type I18nClient } from '@payloadcms/translations'\nimport { Link } from '@payloadcms/ui'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nexport const RscEntrySlateCell: React.FC<\n  {\n    i18n: I18nClient\n    payload: Payload\n  } & DefaultServerCellComponentProps\n> = (props) => {\n  const {\n    cellData,\n    className: classNameFromProps,\n    collectionConfig,\n    field: { admin },\n    field,\n    i18n,\n    link,\n    onClick: onClickFromProps,\n    payload,\n    rowData,\n  } = props\n\n  const classNameFromConfigContext = admin && 'className' in admin ? admin.className : undefined\n\n  const className =\n    classNameFromProps ||\n    (field.admin && 'className' in field.admin ? field.admin.className : null) ||\n    classNameFromConfigContext\n  const adminRoute = payload.config.routes.admin\n\n  const onClick = onClickFromProps\n\n  let WrapElement: React.ComponentType<any> | string = 'span'\n\n  const wrapElementProps: {\n    className?: string\n    href?: string\n    onClick?: () => void\n    prefetch?: false\n    type?: 'button'\n  } = {\n    className,\n  }\n\n  if (link) {\n    wrapElementProps.prefetch = false\n    WrapElement = Link\n    wrapElementProps.href = collectionConfig?.slug\n      ? formatAdminURL({\n          adminRoute,\n          path: `/collections/${collectionConfig?.slug}/${rowData.id}`,\n        })\n      : ''\n  }\n\n  if (typeof onClick === 'function') {\n    WrapElement = 'button'\n    wrapElementProps.type = 'button'\n    wrapElementProps.onClick = () => {\n      onClick({\n        cellData,\n        collectionSlug: collectionConfig?.slug,\n        rowData,\n      })\n    }\n  }\n\n  let textContent = ''\n\n  if (cellData) {\n    textContent = cellData?.map((i) => i?.children?.map((c) => c.text)).join(' ')\n  }\n\n  if (!cellData || !textContent?.length) {\n    textContent = i18n.t('general:noLabel', {\n      label: getTranslation(('label' in field ? field.label : null) || 'data', i18n),\n    })\n  }\n\n  return <WrapElement {...wrapElementProps}>{textContent}</WrapElement>\n}\n"],"names":["getTranslation","Link","formatAdminURL","React","RscEntrySlateCell","props","cellData","className","classNameFromProps","collectionConfig","field","admin","i18n","link","onClick","onClickFromProps","payload","rowData","classNameFromConfigContext","undefined","adminRoute","config","routes","WrapElement","wrapElementProps","prefetch","href","slug","path","id","type","collectionSlug","textContent","map","i","children","c","text","join","length","t","label"],"mappings":";AAEA,SAASA,cAAc,QAAyB,2BAA0B;AAC1E,SAASC,IAAI,QAAQ,iBAAgB;AACrC,SAASC,cAAc,QAAQ,iBAAgB;AAC/C,OAAOC,WAAW,QAAO;AAEzB,OAAO,MAAMC,oBAKT,CAACC;IACH,MAAM,EACJC,QAAQ,EACRC,WAAWC,kBAAkB,EAC7BC,gBAAgB,EAChBC,OAAO,EAAEC,KAAK,EAAE,EAChBD,KAAK,EACLE,IAAI,EACJC,IAAI,EACJC,SAASC,gBAAgB,EACzBC,OAAO,EACPC,OAAO,EACR,GAAGZ;IAEJ,MAAMa,6BAA6BP,SAAS,eAAeA,QAAQA,MAAMJ,SAAS,GAAGY;IAErF,MAAMZ,YACJC,sBACCE,CAAAA,MAAMC,KAAK,IAAI,eAAeD,MAAMC,KAAK,GAAGD,MAAMC,KAAK,CAACJ,SAAS,GAAG,IAAG,KACxEW;IACF,MAAME,aAAaJ,QAAQK,MAAM,CAACC,MAAM,CAACX,KAAK;IAE9C,MAAMG,UAAUC;IAEhB,IAAIQ,cAAiD;IAErD,MAAMC,mBAMF;QACFjB;IACF;IAEA,IAAIM,MAAM;QACRW,iBAAiBC,QAAQ,GAAG;QAC5BF,cAActB;QACduB,iBAAiBE,IAAI,GAAGjB,kBAAkBkB,OACtCzB,eAAe;YACbkB;YACAQ,MAAM,CAAC,aAAa,EAAEnB,kBAAkBkB,KAAK,CAAC,EAAEV,QAAQY,EAAE,EAAE;QAC9D,KACA;IACN;IAEA,IAAI,OAAOf,YAAY,YAAY;QACjCS,cAAc;QACdC,iBAAiBM,IAAI,GAAG;QACxBN,iBAAiBV,OAAO,GAAG;YACzBA,QAAQ;gBACNR;gBACAyB,gBAAgBtB,kBAAkBkB;gBAClCV;YACF;QACF;IACF;IAEA,IAAIe,cAAc;IAElB,IAAI1B,UAAU;QACZ0B,cAAc1B,UAAU2B,IAAI,CAACC,IAAMA,GAAGC,UAAUF,IAAI,CAACG,IAAMA,EAAEC,IAAI,GAAGC,KAAK;IAC3E;IAEA,IAAI,CAAChC,YAAY,CAAC0B,aAAaO,QAAQ;QACrCP,cAAcpB,KAAK4B,CAAC,CAAC,mBAAmB;YACtCC,OAAOzC,eAAe,AAAC,CAAA,WAAWU,QAAQA,MAAM+B,KAAK,GAAG,IAAG,KAAM,QAAQ7B;QAC3E;IACF;IAEA,qBAAO,KAACW;QAAa,GAAGC,gBAAgB;kBAAGQ;;AAC7C,EAAC"}