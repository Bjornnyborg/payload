{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["import type { Config, RichTextAdapterProvider } from 'payload'\n\nimport { sanitizeFields, withNullableJSONSchemaType } from 'payload'\n\nimport type { AdapterArguments } from './types.js'\n\nimport { richTextRelationshipPromise } from './data/richTextRelationshipPromise.js'\nimport { richTextValidate } from './data/validation.js'\nimport { elements as elementTypes } from './field/elements/index.js'\nimport { transformExtraFields } from './field/elements/link/utilities.js'\nimport { defaultLeaves as leafTypes } from './field/leaves/index.js'\nimport { getGenerateSchemaMap } from './generateSchemaMap.js'\n\nexport function slateEditor(\n  args: AdapterArguments,\n): RichTextAdapterProvider<any[], AdapterArguments, any> {\n  return async ({ config }) => {\n    const validRelationships = config.collections.map((c) => c.slug) || []\n\n    if (!args.admin) {\n      args.admin = {}\n    }\n    if (!args.admin.link) {\n      args.admin.link = {}\n    }\n    if (!args.admin.link.fields) {\n      args.admin.link.fields = []\n    }\n    args.admin.link.fields = await sanitizeFields({\n      config: config as unknown as Config,\n      fields: transformExtraFields(args.admin?.link?.fields, config),\n      parentIsLocalized: false,\n      validRelationships,\n    })\n\n    if (args?.admin?.upload?.collections) {\n      for (const collection of Object.keys(args.admin.upload.collections)) {\n        if (args?.admin?.upload?.collections[collection]?.fields) {\n          args.admin.upload.collections[collection].fields = await sanitizeFields({\n            config: config as unknown as Config,\n            fields: args.admin?.upload?.collections[collection]?.fields,\n            parentIsLocalized: false,\n            validRelationships,\n          })\n        }\n      }\n    }\n\n    return {\n      CellComponent: '@payloadcms/richtext-slate/rsc#RscEntrySlateCell',\n      FieldComponent: {\n        path: '@payloadcms/richtext-slate/rsc#RscEntrySlateField',\n        serverProps: {\n          args,\n        },\n      },\n      generateImportMap: ({ addToImportMap }) => {\n        addToImportMap('@payloadcms/richtext-slate/rsc#RscEntrySlateCell')\n        addToImportMap('@payloadcms/richtext-slate/rsc#RscEntrySlateField')\n        Object.values(leafTypes).forEach((leaf) => {\n          if (leaf.Button) {\n            addToImportMap(leaf.Button)\n          }\n          if (leaf.Leaf) {\n            addToImportMap(leaf.Leaf)\n          }\n          if (Array.isArray(leaf.plugins) && leaf.plugins?.length) {\n            addToImportMap(leaf.plugins)\n          }\n        })\n        args?.admin?.leaves?.forEach((leaf) => {\n          if (typeof leaf === 'object') {\n            if (leaf.Button) {\n              addToImportMap(leaf.Button)\n            }\n            if (leaf.Leaf) {\n              addToImportMap(leaf.Leaf)\n            }\n            if (Array.isArray(leaf.plugins) && leaf.plugins?.length) {\n              addToImportMap(leaf.plugins)\n            }\n          }\n        })\n\n        Object.values(elementTypes).forEach((element) => {\n          if (element.Button) {\n            addToImportMap(element.Button)\n          }\n          if (element.Element) {\n            addToImportMap(element.Element)\n          }\n          if (Array.isArray(element.plugins) && element.plugins?.length) {\n            addToImportMap(element.plugins)\n          }\n        })\n\n        args?.admin?.elements?.forEach((element) => {\n          if (typeof element === 'object') {\n            if (element.Button) {\n              addToImportMap(element.Button)\n            }\n            if (element.Element) {\n              addToImportMap(element.Element)\n            }\n            if (Array.isArray(element.plugins) && element.plugins?.length) {\n              addToImportMap(element.plugins)\n            }\n          }\n        })\n      },\n      generateSchemaMap: getGenerateSchemaMap(args),\n      graphQLPopulationPromises({\n        context,\n        currentDepth,\n        depth,\n        draft,\n        field,\n        fieldPromises,\n        findMany,\n        flattenLocales,\n        overrideAccess,\n        parentIsLocalized,\n        populationPromises,\n        req,\n        showHiddenFields,\n        siblingDoc,\n      }) {\n        if (\n          field.admin?.elements?.includes('relationship') ||\n          field.admin?.elements?.includes('upload') ||\n          field.admin?.elements?.includes('link') ||\n          !field?.admin?.elements\n        ) {\n          richTextRelationshipPromise({\n            context,\n            currentDepth,\n            depth,\n            draft,\n            field,\n            fieldPromises,\n            findMany,\n            flattenLocales,\n            overrideAccess,\n            parentIsLocalized,\n            populationPromises,\n            req,\n            showHiddenFields,\n            siblingDoc,\n          })\n        }\n      },\n      hooks: {\n        afterRead: [\n          ({\n            context: _context,\n            currentDepth,\n            depth,\n            draft,\n            field: _field,\n            fieldPromises,\n            findMany,\n            flattenLocales,\n            overrideAccess,\n            parentIsLocalized,\n            populate,\n            populationPromises,\n            req,\n            showHiddenFields,\n            siblingData,\n          }) => {\n            const context: any = _context\n            const field = _field as any\n            if (\n              field.admin?.elements?.includes('relationship') ||\n              field.admin?.elements?.includes('upload') ||\n              field.admin?.elements?.includes('link') ||\n              !field?.admin?.elements\n            ) {\n              richTextRelationshipPromise({\n                context,\n                currentDepth,\n                depth,\n                draft,\n                field,\n                fieldPromises,\n                findMany,\n                flattenLocales,\n                overrideAccess,\n                parentIsLocalized,\n                populateArg: populate,\n                populationPromises,\n                req,\n                showHiddenFields,\n                siblingDoc: siblingData,\n              })\n            }\n          },\n        ],\n      },\n      outputSchema: ({ isRequired }) => {\n        return {\n          type: withNullableJSONSchemaType('array', isRequired),\n          items: {\n            type: 'object',\n          },\n        }\n      },\n      validate: richTextValidate,\n    }\n  }\n}\n\nexport type {\n  AdapterArguments,\n  ElementNode,\n  RichTextCustomElement,\n  RichTextCustomLeaf,\n  RichTextElement,\n  RichTextLeaf,\n  RichTextPlugin,\n  RichTextPluginComponent,\n  SlateFieldProps,\n  TextNode,\n} from './types.js'\n\nexport { nodeIsTextNode } from './types.js'\n"],"names":["sanitizeFields","withNullableJSONSchemaType","richTextRelationshipPromise","richTextValidate","elements","elementTypes","transformExtraFields","defaultLeaves","leafTypes","getGenerateSchemaMap","slateEditor","args","config","validRelationships","collections","map","c","slug","admin","link","fields","parentIsLocalized","upload","collection","Object","keys","CellComponent","FieldComponent","path","serverProps","generateImportMap","addToImportMap","values","forEach","leaf","Button","Leaf","Array","isArray","plugins","length","leaves","element","Element","generateSchemaMap","graphQLPopulationPromises","context","currentDepth","depth","draft","field","fieldPromises","findMany","flattenLocales","overrideAccess","populationPromises","req","showHiddenFields","siblingDoc","includes","hooks","afterRead","_context","_field","populate","siblingData","populateArg","outputSchema","isRequired","type","items","validate","nodeIsTextNode"],"mappings":"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"}