{"version":3,"sources":["../src/generateSchemaMap.ts"],"sourcesContent":["import type { Field, RichTextAdapter } from 'payload'\n\nimport { traverseFields } from '@payloadcms/ui/utilities/buildFieldSchemaMap/traverseFields'\n\nimport type { AdapterArguments, RichTextCustomElement } from './types.js'\n\nimport { elements as elementTypes } from './field/elements/index.js'\nimport { linkFieldsSchemaPath } from './field/elements/link/shared.js'\nimport { uploadFieldsSchemaPath } from './field/elements/upload/shared.js'\n\nexport const getGenerateSchemaMap =\n  (args: AdapterArguments): RichTextAdapter['generateSchemaMap'] =>\n  ({ config, i18n, schemaMap, schemaPath }) => {\n    ;(args?.admin?.elements || Object.values(elementTypes)).forEach((el) => {\n      let element: RichTextCustomElement\n\n      if (typeof el === 'object' && el !== null) {\n        element = el\n      } else if (typeof el === 'string' && elementTypes[el]) {\n        element = elementTypes[el]\n      }\n\n      if (element) {\n        switch (element.name) {\n          case 'link': {\n            if (args.admin?.link?.fields) {\n              schemaMap.set(`${schemaPath}.${linkFieldsSchemaPath}`, {\n                fields: args.admin?.link?.fields as Field[],\n              })\n\n              // generate schema map entries for sub-fields using traverseFields\n              traverseFields({\n                config,\n                fields: args.admin?.link?.fields as Field[],\n                i18n,\n                parentIndexPath: '',\n                parentSchemaPath: `${schemaPath}.${linkFieldsSchemaPath}`,\n                schemaMap,\n              })\n            }\n\n            break\n          }\n\n          case 'relationship':\n            break\n\n          case 'upload': {\n            const uploadEnabledCollections = config.collections.filter(\n              ({ admin: { enableRichTextRelationship, hidden }, upload }) => {\n                if (hidden === true) {\n                  return false\n                }\n\n                return enableRichTextRelationship && Boolean(upload) === true\n              },\n            )\n\n            uploadEnabledCollections.forEach((collection) => {\n              if (args?.admin?.upload?.collections[collection.slug]?.fields) {\n                schemaMap.set(`${schemaPath}.${uploadFieldsSchemaPath}.${collection.slug}`, {\n                  fields: args?.admin?.upload?.collections[collection.slug]?.fields,\n                })\n\n                // generate schema map entries for sub-fields using traverseFields\n                traverseFields({\n                  config,\n                  fields: args?.admin?.upload?.collections[collection.slug]?.fields,\n                  i18n,\n                  parentIndexPath: '',\n                  parentSchemaPath: `${schemaPath}.${uploadFieldsSchemaPath}.${collection.slug}`,\n                  schemaMap,\n                })\n              }\n            })\n\n            break\n          }\n        }\n      }\n    })\n\n    return schemaMap\n  }\n"],"names":["traverseFields","elements","elementTypes","linkFieldsSchemaPath","uploadFieldsSchemaPath","getGenerateSchemaMap","args","config","i18n","schemaMap","schemaPath","admin","Object","values","forEach","el","element","name","link","fields","set","parentIndexPath","parentSchemaPath","uploadEnabledCollections","collections","filter","enableRichTextRelationship","hidden","upload","Boolean","collection","slug"],"mappings":"AAEA,SAASA,cAAc,QAAQ,8DAA6D;AAI5F,SAASC,YAAYC,YAAY,QAAQ,4BAA2B;AACpE,SAASC,oBAAoB,QAAQ,kCAAiC;AACtE,SAASC,sBAAsB,QAAQ,oCAAmC;AAE1E,OAAO,MAAMC,uBACX,CAACC,OACD,CAAC,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAE;;QACpCJ,CAAAA,MAAMK,OAAOV,YAAYW,OAAOC,MAAM,CAACX,aAAY,EAAGY,OAAO,CAAC,CAACC;YAC/D,IAAIC;YAEJ,IAAI,OAAOD,OAAO,YAAYA,OAAO,MAAM;gBACzCC,UAAUD;YACZ,OAAO,IAAI,OAAOA,OAAO,YAAYb,YAAY,CAACa,GAAG,EAAE;gBACrDC,UAAUd,YAAY,CAACa,GAAG;YAC5B;YAEA,IAAIC,SAAS;gBACX,OAAQA,QAAQC,IAAI;oBAClB,KAAK;wBAAQ;4BACX,IAAIX,KAAKK,KAAK,EAAEO,MAAMC,QAAQ;gCAC5BV,UAAUW,GAAG,CAAC,GAAGV,WAAW,CAAC,EAAEP,sBAAsB,EAAE;oCACrDgB,QAAQb,KAAKK,KAAK,EAAEO,MAAMC;gCAC5B;gCAEA,kEAAkE;gCAClEnB,eAAe;oCACbO;oCACAY,QAAQb,KAAKK,KAAK,EAAEO,MAAMC;oCAC1BX;oCACAa,iBAAiB;oCACjBC,kBAAkB,GAAGZ,WAAW,CAAC,EAAEP,sBAAsB;oCACzDM;gCACF;4BACF;4BAEA;wBACF;oBAEA,KAAK;wBACH;oBAEF,KAAK;wBAAU;4BACb,MAAMc,2BAA2BhB,OAAOiB,WAAW,CAACC,MAAM,CACxD,CAAC,EAAEd,OAAO,EAAEe,0BAA0B,EAAEC,MAAM,EAAE,EAAEC,MAAM,EAAE;gCACxD,IAAID,WAAW,MAAM;oCACnB,OAAO;gCACT;gCAEA,OAAOD,8BAA8BG,QAAQD,YAAY;4BAC3D;4BAGFL,yBAAyBT,OAAO,CAAC,CAACgB;gCAChC,IAAIxB,MAAMK,OAAOiB,QAAQJ,WAAW,CAACM,WAAWC,IAAI,CAAC,EAAEZ,QAAQ;oCAC7DV,UAAUW,GAAG,CAAC,GAAGV,WAAW,CAAC,EAAEN,uBAAuB,CAAC,EAAE0B,WAAWC,IAAI,EAAE,EAAE;wCAC1EZ,QAAQb,MAAMK,OAAOiB,QAAQJ,WAAW,CAACM,WAAWC,IAAI,CAAC,EAAEZ;oCAC7D;oCAEA,kEAAkE;oCAClEnB,eAAe;wCACbO;wCACAY,QAAQb,MAAMK,OAAOiB,QAAQJ,WAAW,CAACM,WAAWC,IAAI,CAAC,EAAEZ;wCAC3DX;wCACAa,iBAAiB;wCACjBC,kBAAkB,GAAGZ,WAAW,CAAC,EAAEN,uBAAuB,CAAC,EAAE0B,WAAWC,IAAI,EAAE;wCAC9EtB;oCACF;gCACF;4BACF;4BAEA;wBACF;gBACF;YACF;QACF;QAEA,OAAOA;IACT,EAAC"}