{"version":3,"sources":["../../src/field/index.tsx"],"sourcesContent":["'use client'\n\nimport { ShimmerEffect, useClientFunctions } from '@payloadcms/ui'\nimport React, { lazy, Suspense, useEffect, useState } from 'react'\n\nimport type { RichTextPlugin, SlateFieldProps } from '../types.js'\nimport type { EnabledFeatures } from './types.js'\n\nimport { SlatePropsProvider } from '../utilities/SlatePropsProvider.js'\nimport { createFeatureMap } from './createFeatureMap.js'\n\nconst RichTextEditor = lazy(() =>\n  import('./RichText.js').then((module) => ({\n    default: module.RichText,\n  })),\n)\n\nexport const RichTextField: React.FC<SlateFieldProps> = (props) => {\n  const { componentMap, schemaPath } = props\n\n  const clientFunctions = useClientFunctions()\n  const [hasLoadedPlugins, setHasLoadedPlugins] = useState(false)\n\n  const [features] = useState<EnabledFeatures>(() => {\n    return createFeatureMap(new Map(Object.entries(componentMap)))\n  })\n\n  const [plugins, setPlugins] = useState<RichTextPlugin[]>([])\n\n  useEffect(() => {\n    if (!hasLoadedPlugins) {\n      const plugins: RichTextPlugin[] = []\n\n      Object.entries(clientFunctions).forEach(([key, plugin]) => {\n        if (key.startsWith(`slatePlugin.${schemaPath}.`)) {\n          plugins.push(plugin)\n        }\n      })\n\n      if (plugins.length === features.plugins.length) {\n        setPlugins(plugins)\n        setHasLoadedPlugins(true)\n      }\n    }\n  }, [hasLoadedPlugins, clientFunctions, schemaPath, features.plugins.length])\n\n  if (!hasLoadedPlugins) {\n    return (\n      <SlatePropsProvider schemaPath={schemaPath}>\n        {Array.isArray(features.plugins) &&\n          features.plugins.map((Plugin, i) => {\n            return <React.Fragment key={i}>{Plugin}</React.Fragment>\n          })}\n      </SlatePropsProvider>\n    )\n  }\n\n  return (\n    <Suspense fallback={<ShimmerEffect height=\"35vh\" />}>\n      <SlatePropsProvider schemaPath={schemaPath}>\n        <RichTextEditor\n          {...props}\n          elements={features.elements}\n          leaves={features.leaves}\n          plugins={plugins}\n        />\n      </SlatePropsProvider>\n    </Suspense>\n  )\n}\n"],"names":["ShimmerEffect","useClientFunctions","React","lazy","Suspense","useEffect","useState","SlatePropsProvider","createFeatureMap","RichTextEditor","then","module","default","RichText","RichTextField","props","componentMap","schemaPath","clientFunctions","hasLoadedPlugins","setHasLoadedPlugins","features","Map","Object","entries","plugins","setPlugins","forEach","key","plugin","startsWith","push","length","Array","isArray","map","Plugin","i","Fragment","fallback","height","elements","leaves"],"mappings":"AAAA;;AAEA,SAASA,aAAa,EAAEC,kBAAkB,QAAQ,iBAAgB;AAClE,OAAOC,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,QAAO;AAKlE,SAASC,kBAAkB,QAAQ,qCAAoC;AACvE,SAASC,gBAAgB,QAAQ,wBAAuB;AAExD,MAAMC,+BAAiBN,KAAK,IAC1B,MAAM,CAAC,iBAAiBO,IAAI,CAAC,CAACC,SAAY,CAAA;YACxCC,SAASD,OAAOE,QAAQ;QAC1B,CAAA;AAGF,OAAO,MAAMC,gBAA2C,CAACC;IACvD,MAAM,EAAEC,YAAY,EAAEC,UAAU,EAAE,GAAGF;IAErC,MAAMG,kBAAkBjB;IACxB,MAAM,CAACkB,kBAAkBC,oBAAoB,GAAGd,SAAS;IAEzD,MAAM,CAACe,SAAS,GAAGf,SAA0B;QAC3C,OAAOE,iBAAiB,IAAIc,IAAIC,OAAOC,OAAO,CAACR;IACjD;IAEA,MAAM,CAACS,SAASC,WAAW,GAAGpB,SAA2B,EAAE;IAE3DD,UAAU;QACR,IAAI,CAACc,kBAAkB;YACrB,MAAMM,UAA4B,EAAE;YAEpCF,OAAOC,OAAO,CAACN,iBAAiBS,OAAO,CAAC,CAAC,CAACC,KAAKC,OAAO;gBACpD,IAAID,IAAIE,UAAU,CAAC,CAAC,YAAY,EAAEb,WAAW,CAAC,CAAC,GAAG;oBAChDQ,QAAQM,IAAI,CAACF;gBACf;YACF;YAEA,IAAIJ,QAAQO,MAAM,KAAKX,SAASI,OAAO,CAACO,MAAM,EAAE;gBAC9CN,WAAWD;gBACXL,oBAAoB;YACtB;QACF;IACF,GAAG;QAACD;QAAkBD;QAAiBD;QAAYI,SAASI,OAAO,CAACO,MAAM;KAAC;IAE3E,IAAI,CAACb,kBAAkB;QACrB,qBACE,KAACZ;YAAmBU,YAAYA;sBAC7BgB,MAAMC,OAAO,CAACb,SAASI,OAAO,KAC7BJ,SAASI,OAAO,CAACU,GAAG,CAAC,CAACC,QAAQC;gBAC5B,qBAAO,KAACnC,MAAMoC,QAAQ;8BAAUF;mBAAJC;YAC9B;;IAGR;IAEA,qBACE,KAACjC;QAASmC,wBAAU,KAACvC;YAAcwC,QAAO;;kBACxC,cAAA,KAACjC;YAAmBU,YAAYA;sBAC9B,cAAA,KAACR;gBACE,GAAGM,KAAK;gBACT0B,UAAUpB,SAASoB,QAAQ;gBAC3BC,QAAQrB,SAASqB,MAAM;gBACvBjB,SAASA;;;;AAKnB,EAAC"}