{"version":3,"sources":["../../../src/field/providers/LeafProvider.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nimport type { LoadedSlateFieldProps } from '../types.js'\n\ntype LeafContextType = {\n  attributes: Record<string, unknown>\n  children: React.ReactNode\n  editorRef: React.RefObject<HTMLDivElement>\n  fieldProps: LoadedSlateFieldProps\n  leaf: string\n  path: string\n  schemaPath: string\n}\n\nconst LeafContext = React.createContext<LeafContextType>({\n  attributes: {},\n  children: null,\n  editorRef: null,\n  fieldProps: {} as any,\n  leaf: '',\n  path: '',\n  schemaPath: '',\n})\n\nexport const LeafProvider: React.FC<\n  {\n    result: React.ReactNode\n  } & LeafContextType\n> = (props) => {\n  const { children, result, ...rest } = props\n\n  return (\n    <LeafContext\n      value={{\n        ...rest,\n        children: result,\n      }}\n    >\n      {children}\n    </LeafContext>\n  )\n}\n\nexport const useLeaf = () => {\n  const path = React.use(LeafContext)\n  return path\n}\n"],"names":["React","LeafContext","createContext","attributes","children","editorRef","fieldProps","leaf","path","schemaPath","LeafProvider","props","result","rest","value","useLeaf","use"],"mappings":"AAAA;;AAEA,OAAOA,WAAW,QAAO;AAczB,MAAMC,4BAAcD,MAAME,aAAa,CAAkB;IACvDC,YAAY,CAAC;IACbC,UAAU;IACVC,WAAW;IACXC,YAAY,CAAC;IACbC,MAAM;IACNC,MAAM;IACNC,YAAY;AACd;AAEA,OAAO,MAAMC,eAIT,CAACC;IACH,MAAM,EAAEP,QAAQ,EAAEQ,MAAM,EAAE,GAAGC,MAAM,GAAGF;IAEtC,qBACE,KAACV;QACCa,OAAO;YACL,GAAGD,IAAI;YACPT,UAAUQ;QACZ;kBAECR;;AAGP,EAAC;AAED,OAAO,MAAMW,UAAU;IACrB,MAAMP,OAAOR,MAAMgB,GAAG,CAACf;IACvB,OAAOO;AACT,EAAC"}