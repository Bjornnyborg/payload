{"version":3,"sources":["../../../../../src/field/elements/relationship/Element/index.tsx"],"sourcesContent":["'use client'\n\nimport type { ListDrawerProps } from '@payloadcms/ui'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport {\n  Button,\n  useConfig,\n  useDocumentDrawer,\n  useListDrawer,\n  usePayloadAPI,\n  useTranslation,\n} from '@payloadcms/ui'\nimport React, { useCallback, useReducer, useState } from 'react'\nimport { Transforms } from 'slate'\nimport { ReactEditor, useFocused, useSelected, useSlateStatic } from 'slate-react'\n\nimport type { RelationshipElementType } from '../types.js'\n\nimport { useElement } from '../../../providers/ElementProvider.js'\nimport { EnabledRelationshipsCondition } from '../../EnabledRelationshipsCondition.js'\nimport './index.scss'\n\nconst baseClass = 'rich-text-relationship'\n\nconst initialParams = {\n  depth: 0,\n}\n\nconst RelationshipElementComponent: React.FC = () => {\n  const {\n    attributes,\n    children,\n    element,\n    element: { relationTo, value },\n    fieldProps,\n  } = useElement<RelationshipElementType>()\n\n  const {\n    config: {\n      collections,\n      routes: { api },\n      serverURL,\n    },\n    getEntityConfig,\n  } = useConfig()\n  const [enabledCollectionSlugs] = useState(() =>\n    collections\n      .filter(({ admin: { enableRichTextRelationship } }) => enableRichTextRelationship)\n      .map(({ slug }) => slug),\n  )\n  const [relatedCollection, setRelatedCollection] = useState(() =>\n    getEntityConfig({ collectionSlug: relationTo }),\n  )\n\n  const selected = useSelected()\n  const focused = useFocused()\n  const { i18n, t } = useTranslation()\n  const editor = useSlateStatic()\n  const [cacheBust, dispatchCacheBust] = useReducer((state) => state + 1, 0)\n  const [{ data }, { setParams }] = usePayloadAPI(\n    `${serverURL}${api}/${relatedCollection.slug}/${value?.id}`,\n    { initialParams },\n  )\n\n  const [DocumentDrawer, DocumentDrawerToggler, { closeDrawer }] = useDocumentDrawer({\n    id: value?.id,\n    collectionSlug: relatedCollection.slug,\n  })\n\n  const [ListDrawer, ListDrawerToggler, { closeDrawer: closeListDrawer }] = useListDrawer({\n    collectionSlugs: enabledCollectionSlugs,\n    selectedCollection: relatedCollection.slug,\n  })\n\n  const removeRelationship = useCallback(() => {\n    const elementPath = ReactEditor.findPath(editor, element)\n\n    Transforms.removeNodes(editor, { at: elementPath })\n  }, [editor, element])\n\n  const updateRelationship = React.useCallback(\n    ({ doc }) => {\n      const elementPath = ReactEditor.findPath(editor, element)\n\n      Transforms.setNodes(\n        editor,\n        {\n          type: 'relationship',\n          children: [{ text: ' ' }],\n          relationTo: relatedCollection.slug,\n          value: { id: doc.id },\n        },\n        { at: elementPath },\n      )\n\n      setParams({\n        ...initialParams,\n        cacheBust, // do this to get the usePayloadAPI to re-fetch the data even though the URL string hasn't changed\n      })\n\n      closeDrawer()\n      dispatchCacheBust()\n    },\n    [editor, element, relatedCollection, cacheBust, setParams, closeDrawer],\n  )\n\n  const swapRelationship = useCallback<NonNullable<ListDrawerProps['onSelect']>>(\n    ({ collectionSlug, doc }) => {\n      const elementPath = ReactEditor.findPath(editor, element)\n\n      Transforms.setNodes(\n        editor,\n        {\n          type: 'relationship',\n          children: [{ text: ' ' }],\n          relationTo: collectionSlug,\n          value: { id: doc.id },\n        },\n        { at: elementPath },\n      )\n\n      setRelatedCollection(getEntityConfig({ collectionSlug }))\n\n      setParams({\n        ...initialParams,\n        cacheBust, // do this to get the usePayloadAPI to re-fetch the data even though the URL string hasn't changed\n      })\n\n      closeListDrawer()\n      dispatchCacheBust()\n    },\n    [closeListDrawer, editor, element, cacheBust, setParams, getEntityConfig],\n  )\n\n  return (\n    <div\n      className={[baseClass, selected && focused && `${baseClass}--selected`]\n        .filter(Boolean)\n        .join(' ')}\n      contentEditable={false}\n      {...attributes}\n    >\n      <div className={`${baseClass}__wrap`}>\n        <p className={`${baseClass}__label`}>\n          {t('fields:labelRelationship', {\n            label: getTranslation(relatedCollection.labels.singular, i18n),\n          })}\n        </p>\n        <DocumentDrawerToggler className={`${baseClass}__doc-drawer-toggler`}>\n          <p className={`${baseClass}__title`}>\n            {data[relatedCollection?.admin?.useAsTitle || 'id']}\n          </p>\n        </DocumentDrawerToggler>\n      </div>\n      <div className={`${baseClass}__actions`}>\n        <ListDrawerToggler\n          className={`${baseClass}__list-drawer-toggler`}\n          disabled={fieldProps?.field?.admin?.readOnly}\n        >\n          <Button\n            buttonStyle=\"icon-label\"\n            disabled={fieldProps?.field?.admin?.readOnly}\n            el=\"div\"\n            icon=\"swap\"\n            onClick={() => {\n              // do nothing\n            }}\n            round\n            tooltip={t('fields:swapRelationship')}\n          />\n        </ListDrawerToggler>\n        <Button\n          buttonStyle=\"icon-label\"\n          className={`${baseClass}__removeButton`}\n          disabled={fieldProps?.field?.admin?.readOnly}\n          icon=\"x\"\n          onClick={(e) => {\n            e.preventDefault()\n            removeRelationship()\n          }}\n          round\n          tooltip={t('fields:removeRelationship')}\n        />\n      </div>\n      {value?.id && <DocumentDrawer onSave={updateRelationship} />}\n      <ListDrawer onSelect={swapRelationship} />\n      {children}\n    </div>\n  )\n}\n\nexport const RelationshipElement = (props: any): React.ReactNode => {\n  return (\n    <EnabledRelationshipsCondition {...props}>\n      <RelationshipElementComponent {...props} />\n    </EnabledRelationshipsCondition>\n  )\n}\n"],"names":["getTranslation","Button","useConfig","useDocumentDrawer","useListDrawer","usePayloadAPI","useTranslation","React","useCallback","useReducer","useState","Transforms","ReactEditor","useFocused","useSelected","useSlateStatic","useElement","EnabledRelationshipsCondition","baseClass","initialParams","depth","RelationshipElementComponent","attributes","children","element","relationTo","value","fieldProps","config","collections","routes","api","serverURL","getEntityConfig","enabledCollectionSlugs","filter","admin","enableRichTextRelationship","map","slug","relatedCollection","setRelatedCollection","collectionSlug","selected","focused","i18n","t","editor","cacheBust","dispatchCacheBust","state","data","setParams","id","DocumentDrawer","DocumentDrawerToggler","closeDrawer","ListDrawer","ListDrawerToggler","closeListDrawer","collectionSlugs","selectedCollection","removeRelationship","elementPath","findPath","removeNodes","at","updateRelationship","doc","setNodes","type","text","swapRelationship","div","className","Boolean","join","contentEditable","p","label","labels","singular","useAsTitle","disabled","field","readOnly","buttonStyle","el","icon","onClick","round","tooltip","e","preventDefault","onSave","onSelect","RelationshipElement","props"],"mappings":"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"}