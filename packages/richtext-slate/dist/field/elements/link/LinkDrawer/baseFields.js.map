{"version":3,"sources":["../../../../../src/field/elements/link/LinkDrawer/baseFields.ts"],"sourcesContent":["import type { Field, SanitizedConfig, User } from 'payload'\n\nexport const getBaseFields = (config: SanitizedConfig): Field[] => [\n  {\n    name: 'text',\n    type: 'text',\n    label: ({ t }) => t('fields:textToDisplay'),\n    required: true,\n  },\n  {\n    name: 'linkType',\n    type: 'radio',\n    admin: {\n      description: ({ t }) => t('fields:chooseBetweenCustomTextOrDocument'),\n    },\n    defaultValue: 'custom',\n    label: ({ t }) => t('fields:linkType'),\n    options: [\n      {\n        label: ({ t }) => t('fields:customURL'),\n        value: 'custom',\n      },\n      {\n        label: ({ t }) => t('fields:internalLink'),\n        value: 'internal',\n      },\n    ],\n    required: true,\n  },\n  {\n    name: 'url',\n    type: 'text',\n    admin: {\n      condition: ({ linkType }) => linkType !== 'internal',\n    },\n    label: ({ t }) => t('fields:enterURL'),\n    required: true,\n  },\n  {\n    name: 'doc',\n    admin: {\n      condition: ({ linkType }) => {\n        return linkType === 'internal'\n      },\n    },\n    // when admin.hidden is a function we need to dynamically call hidden with the user to know if the collection should be shown\n    type: 'relationship',\n    filterOptions: ({ relationTo, user }) => {\n      const hidden = config.collections.find(({ slug }) => slug === relationTo).admin.hidden\n      if (typeof hidden === 'function' && hidden({ user } as { user: User })) {\n        return false\n      }\n    },\n    label: ({ t }) => t('fields:chooseDocumentToLink'),\n    relationTo: config.collections\n      .filter(({ admin: { enableRichTextLink, hidden } }) => {\n        if (typeof hidden !== 'function' && hidden) {\n          return false\n        }\n        return enableRichTextLink\n      })\n      .map(({ slug }) => slug),\n    required: true,\n  },\n  {\n    name: 'newTab',\n    type: 'checkbox',\n    label: ({ t }) => t('fields:openInNewTab'),\n  },\n]\n"],"names":["getBaseFields","config","name","type","label","t","required","admin","description","defaultValue","options","value","condition","linkType","filterOptions","relationTo","user","hidden","collections","find","slug","filter","enableRichTextLink","map"],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,CAACC,SAAqC;QACjE;YACEC,MAAM;YACNC,MAAM;YACNC,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;YACpBC,UAAU;QACZ;QACA;YACEJ,MAAM;YACNC,MAAM;YACNI,OAAO;gBACLC,aAAa,CAAC,EAAEH,CAAC,EAAE,GAAKA,EAAE;YAC5B;YACAI,cAAc;YACdL,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;YACpBK,SAAS;gBACP;oBACEN,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;oBACpBM,OAAO;gBACT;gBACA;oBACEP,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;oBACpBM,OAAO;gBACT;aACD;YACDL,UAAU;QACZ;QACA;YACEJ,MAAM;YACNC,MAAM;YACNI,OAAO;gBACLK,WAAW,CAAC,EAAEC,QAAQ,EAAE,GAAKA,aAAa;YAC5C;YACAT,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;YACpBC,UAAU;QACZ;QACA;YACEJ,MAAM;YACNK,OAAO;gBACLK,WAAW,CAAC,EAAEC,QAAQ,EAAE;oBACtB,OAAOA,aAAa;gBACtB;YACF;YACA,6HAA6H;YAC7HV,MAAM;YACNW,eAAe,CAAC,EAAEC,UAAU,EAAEC,IAAI,EAAE;gBAClC,MAAMC,SAAShB,OAAOiB,WAAW,CAACC,IAAI,CAAC,CAAC,EAAEC,IAAI,EAAE,GAAKA,SAASL,YAAYR,KAAK,CAACU,MAAM;gBACtF,IAAI,OAAOA,WAAW,cAAcA,OAAO;oBAAED;gBAAK,IAAsB;oBACtE,OAAO;gBACT;YACF;YACAZ,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;YACpBU,YAAYd,OAAOiB,WAAW,CAC3BG,MAAM,CAAC,CAAC,EAAEd,OAAO,EAAEe,kBAAkB,EAAEL,MAAM,EAAE,EAAE;gBAChD,IAAI,OAAOA,WAAW,cAAcA,QAAQ;oBAC1C,OAAO;gBACT;gBACA,OAAOK;YACT,GACCC,GAAG,CAAC,CAAC,EAAEH,IAAI,EAAE,GAAKA;YACrBd,UAAU;QACZ;QACA;YACEJ,MAAM;YACNC,MAAM;YACNC,OAAO,CAAC,EAAEC,CAAC,EAAE,GAAKA,EAAE;QACtB;KACD,CAAA"}