{"version":3,"sources":["../../../../src/field/elements/link/utilities.tsx"],"sourcesContent":["import type { Field, SanitizedConfig } from 'payload'\nimport type { Editor } from 'slate'\n\nimport { Element, Range, Transforms } from 'slate'\n\nimport { getBaseFields } from './LinkDrawer/baseFields.js'\n\nexport const unwrapLink = (editor: Editor): void => {\n  Transforms.unwrapNodes(editor, { match: (n) => Element.isElement(n) && n.type === 'link' })\n}\n\nexport const wrapLink = (editor: Editor): void => {\n  const { selection } = editor\n  const isCollapsed = selection && Range.isCollapsed(selection)\n\n  const link = {\n    type: 'link',\n    children: isCollapsed ? [{ text: '' }] : [],\n    newTab: false,\n    url: undefined,\n  }\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, link)\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true })\n    Transforms.collapse(editor, { edge: 'end' })\n  }\n}\n\n/**\n * This function is run to enrich the basefields which every link has with potential, custom user-added fields.\n */\nexport function transformExtraFields(\n  customFieldSchema:\n    | ((args: { config: SanitizedConfig; defaultFields: Field[] }) => Field[])\n    | Field[],\n  config: SanitizedConfig,\n): Field[] {\n  const baseFields: Field[] = getBaseFields(config)\n\n  const fields =\n    typeof customFieldSchema === 'function'\n      ? customFieldSchema({ config, defaultFields: baseFields })\n      : baseFields\n\n  // Wrap fields which are not part of the base schema in a group named 'fields' - otherwise they will be rendered but not saved\n  const extraFields = []\n  for (let i = fields.length - 1; i >= 0; i--) {\n    const field = fields[i]\n\n    if ('name' in field) {\n      if (\n        !baseFields.find((baseField) => !('name' in baseField) || baseField.name === field.name)\n      ) {\n        if (field.name !== 'fields' && field.type !== 'group') {\n          extraFields.push(field)\n          // Remove from fields from now, as they need to be part of the fields group below\n          fields.splice(fields.indexOf(field), 1)\n        }\n      }\n    }\n  }\n\n  if ((Array.isArray(customFieldSchema) && customFieldSchema?.length) || extraFields?.length) {\n    fields.push({\n      name: 'fields',\n      type: 'group',\n      admin: {\n        style: {\n          borderBottom: 0,\n          borderTop: 0,\n          margin: 0,\n          padding: 0,\n        },\n      },\n      fields: Array.isArray(customFieldSchema)\n        ? customFieldSchema.concat(extraFields)\n        : extraFields,\n    })\n  }\n  return fields\n}\n"],"names":["Element","Range","Transforms","getBaseFields","unwrapLink","editor","unwrapNodes","match","n","isElement","type","wrapLink","selection","isCollapsed","link","children","text","newTab","url","undefined","insertNodes","wrapNodes","split","collapse","edge","transformExtraFields","customFieldSchema","config","baseFields","fields","defaultFields","extraFields","i","length","field","find","baseField","name","push","splice","indexOf","Array","isArray","admin","style","borderBottom","borderTop","margin","padding","concat"],"mappings":"AAGA,SAASA,OAAO,EAAEC,KAAK,EAAEC,UAAU,QAAQ,QAAO;AAElD,SAASC,aAAa,QAAQ,6BAA4B;AAE1D,OAAO,MAAMC,aAAa,CAACC;IACzBH,WAAWI,WAAW,CAACD,QAAQ;QAAEE,OAAO,CAACC,IAAMR,QAAQS,SAAS,CAACD,MAAMA,EAAEE,IAAI,KAAK;IAAO;AAC3F,EAAC;AAED,OAAO,MAAMC,WAAW,CAACN;IACvB,MAAM,EAAEO,SAAS,EAAE,GAAGP;IACtB,MAAMQ,cAAcD,aAAaX,MAAMY,WAAW,CAACD;IAEnD,MAAME,OAAO;QACXJ,MAAM;QACNK,UAAUF,cAAc;YAAC;gBAAEG,MAAM;YAAG;SAAE,GAAG,EAAE;QAC3CC,QAAQ;QACRC,KAAKC;IACP;IAEA,IAAIN,aAAa;QACfX,WAAWkB,WAAW,CAACf,QAAQS;IACjC,OAAO;QACLZ,WAAWmB,SAAS,CAAChB,QAAQS,MAAM;YAAEQ,OAAO;QAAK;QACjDpB,WAAWqB,QAAQ,CAAClB,QAAQ;YAAEmB,MAAM;QAAM;IAC5C;AACF,EAAC;AAED;;CAEC,GACD,OAAO,SAASC,qBACdC,iBAEW,EACXC,MAAuB;IAEvB,MAAMC,aAAsBzB,cAAcwB;IAE1C,MAAME,SACJ,OAAOH,sBAAsB,aACzBA,kBAAkB;QAAEC;QAAQG,eAAeF;IAAW,KACtDA;IAEN,8HAA8H;IAC9H,MAAMG,cAAc,EAAE;IACtB,IAAK,IAAIC,IAAIH,OAAOI,MAAM,GAAG,GAAGD,KAAK,GAAGA,IAAK;QAC3C,MAAME,QAAQL,MAAM,CAACG,EAAE;QAEvB,IAAI,UAAUE,OAAO;YACnB,IACE,CAACN,WAAWO,IAAI,CAAC,CAACC,YAAc,CAAE,CAAA,UAAUA,SAAQ,KAAMA,UAAUC,IAAI,KAAKH,MAAMG,IAAI,GACvF;gBACA,IAAIH,MAAMG,IAAI,KAAK,YAAYH,MAAMxB,IAAI,KAAK,SAAS;oBACrDqB,YAAYO,IAAI,CAACJ;oBACjB,iFAAiF;oBACjFL,OAAOU,MAAM,CAACV,OAAOW,OAAO,CAACN,QAAQ;gBACvC;YACF;QACF;IACF;IAEA,IAAI,AAACO,MAAMC,OAAO,CAAChB,sBAAsBA,mBAAmBO,UAAWF,aAAaE,QAAQ;QAC1FJ,OAAOS,IAAI,CAAC;YACVD,MAAM;YACN3B,MAAM;YACNiC,OAAO;gBACLC,OAAO;oBACLC,cAAc;oBACdC,WAAW;oBACXC,QAAQ;oBACRC,SAAS;gBACX;YACF;YACAnB,QAAQY,MAAMC,OAAO,CAAChB,qBAClBA,kBAAkBuB,MAAM,CAAClB,eACzBA;QACN;IACF;IACA,OAAOF;AACT"}