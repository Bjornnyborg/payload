{"version":3,"sources":["../../../src/field/elements/isBlockElement.ts"],"sourcesContent":["import { Editor, Element } from 'slate'\n\n/**\n * Returns true, if the provided node is an Element (optionally of a specific type)\n */\nconst isElement = (node: any, specificType?: string | string[]): node is Element => {\n  if (Editor.isEditor(node) || !Element.isElement(node)) {\n    return false\n  }\n  if (undefined === specificType) {\n    return true\n  }\n  if (typeof specificType === 'string') {\n    return node.type === specificType\n  }\n  return specificType.includes(node.type)\n}\n\n/**\n * Returns true, if the provided node is a Block Element.\n * Note: Using Editor.isBlock() is not sufficient, as since slate 0.90 it returns `true` for Text nodes and the editor as well.\n *\n * Related Issue: https://github.com/ianstormtaylor/slate/issues/5287\n */\n\nexport const isBlockElement = (editor: Editor, node: any): node is Element =>\n  Editor.isBlock(editor, node) && isElement(node)\n"],"names":["Editor","Element","isElement","node","specificType","isEditor","undefined","type","includes","isBlockElement","editor","isBlock"],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,QAAO;AAEvC;;CAEC,GACD,MAAMC,YAAY,CAACC,MAAWC;IAC5B,IAAIJ,OAAOK,QAAQ,CAACF,SAAS,CAACF,QAAQC,SAAS,CAACC,OAAO;QACrD,OAAO;IACT;IACA,IAAIG,cAAcF,cAAc;QAC9B,OAAO;IACT;IACA,IAAI,OAAOA,iBAAiB,UAAU;QACpC,OAAOD,KAAKI,IAAI,KAAKH;IACvB;IACA,OAAOA,aAAaI,QAAQ,CAACL,KAAKI,IAAI;AACxC;AAEA;;;;;CAKC,GAED,OAAO,MAAME,iBAAiB,CAACC,QAAgBP,OAC7CH,OAAOW,OAAO,CAACD,QAAQP,SAASD,UAAUC,MAAK"}