{"version":3,"sources":["../../../src/field/elements/unwrapList.ts"],"sourcesContent":["import type { Path } from 'slate'\n\nimport { Editor, Element, Transforms } from 'slate'\n\nimport { areAllChildrenElements } from './areAllChildrenElements.js'\nimport { listTypes } from './listTypes.js'\n\nexport const unwrapList = (editor: Editor, atPath: Path): void => {\n  // Remove type for any nodes that have text children -\n  // this means that the node should remain\n  Transforms.setNodes(\n    editor,\n    { type: undefined },\n    {\n      at: atPath,\n      match: (node, path) => {\n        const childrenAreAllElements = areAllChildrenElements(node)\n\n        const matches =\n          !Editor.isEditor(node) &&\n          Element.isElement(node) &&\n          !childrenAreAllElements &&\n          node.type === 'li' &&\n          path.length === atPath.length + 1\n\n        return matches\n      },\n    },\n  )\n\n  // For nodes have all element children, unwrap it instead\n  // because the li is a duplicative wrapper\n  Transforms.unwrapNodes(editor, {\n    at: atPath,\n    match: (node, path) => {\n      const childrenAreAllElements = areAllChildrenElements(node)\n\n      const matches =\n        !Editor.isEditor(node) &&\n        Element.isElement(node) &&\n        childrenAreAllElements &&\n        node.type === 'li' &&\n        path.length === atPath.length + 1\n\n      return matches\n    },\n  })\n\n  // Finally, unwrap the UL itself\n  Transforms.unwrapNodes(editor, {\n    match: (n) => Element.isElement(n) && listTypes.includes(n.type),\n    mode: 'lowest',\n  })\n}\n"],"names":["Editor","Element","Transforms","areAllChildrenElements","listTypes","unwrapList","editor","atPath","setNodes","type","undefined","at","match","node","path","childrenAreAllElements","matches","isEditor","isElement","length","unwrapNodes","n","includes","mode"],"mappings":"AAEA,SAASA,MAAM,EAAEC,OAAO,EAAEC,UAAU,QAAQ,QAAO;AAEnD,SAASC,sBAAsB,QAAQ,8BAA6B;AACpE,SAASC,SAAS,QAAQ,iBAAgB;AAE1C,OAAO,MAAMC,aAAa,CAACC,QAAgBC;IACzC,sDAAsD;IACtD,yCAAyC;IACzCL,WAAWM,QAAQ,CACjBF,QACA;QAAEG,MAAMC;IAAU,GAClB;QACEC,IAAIJ;QACJK,OAAO,CAACC,MAAMC;YACZ,MAAMC,yBAAyBZ,uBAAuBU;YAEtD,MAAMG,UACJ,CAAChB,OAAOiB,QAAQ,CAACJ,SACjBZ,QAAQiB,SAAS,CAACL,SAClB,CAACE,0BACDF,KAAKJ,IAAI,KAAK,QACdK,KAAKK,MAAM,KAAKZ,OAAOY,MAAM,GAAG;YAElC,OAAOH;QACT;IACF;IAGF,yDAAyD;IACzD,0CAA0C;IAC1Cd,WAAWkB,WAAW,CAACd,QAAQ;QAC7BK,IAAIJ;QACJK,OAAO,CAACC,MAAMC;YACZ,MAAMC,yBAAyBZ,uBAAuBU;YAEtD,MAAMG,UACJ,CAAChB,OAAOiB,QAAQ,CAACJ,SACjBZ,QAAQiB,SAAS,CAACL,SAClBE,0BACAF,KAAKJ,IAAI,KAAK,QACdK,KAAKK,MAAM,KAAKZ,OAAOY,MAAM,GAAG;YAElC,OAAOH;QACT;IACF;IAEA,gCAAgC;IAChCd,WAAWkB,WAAW,CAACd,QAAQ;QAC7BM,OAAO,CAACS,IAAMpB,QAAQiB,SAAS,CAACG,MAAMjB,UAAUkB,QAAQ,CAACD,EAAEZ,IAAI;QAC/Dc,MAAM;IACR;AACF,EAAC"}