{"version":3,"sources":["../../../src/field/elements/Button.tsx"],"sourcesContent":["'use client'\nimport type { ElementType } from 'react'\n\nimport { Tooltip } from '@payloadcms/ui'\nimport React, { useCallback, useState } from 'react'\nimport { useSlate } from 'slate-react'\n\nimport type { ButtonProps } from './types.js'\n\nimport '../buttons.scss'\nimport { useElementButton } from '../providers/ElementButtonProvider.js'\nimport { isElementActive } from './isActive.js'\nimport { toggleElement } from './toggle.js'\n\nexport const baseClass = 'rich-text__button'\n\nexport const ElementButton: React.FC<ButtonProps> = (props) => {\n  const {\n    type = 'type',\n    children,\n    className,\n    disabled: disabledFromProps,\n    el = 'button',\n    format,\n    onClick,\n    tooltip,\n  } = props\n\n  const editor = useSlate()\n  const { disabled: disabledFromContext } = useElementButton()\n  const [showTooltip, setShowTooltip] = useState(false)\n\n  const defaultOnClick = useCallback(\n    (event) => {\n      event.preventDefault()\n      setShowTooltip(false)\n      toggleElement(editor, format, type)\n    },\n    [editor, format, type],\n  )\n\n  const Tag: ElementType = el\n\n  const disabled = disabledFromProps || disabledFromContext\n\n  return (\n    <Tag\n      {...(el === 'button' && { type: 'button', disabled })}\n      className={[\n        baseClass,\n        className,\n        isElementActive(editor, format, type) && `${baseClass}__button--active`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      onClick={onClick || defaultOnClick}\n      onPointerEnter={() => setShowTooltip(true)}\n      onPointerLeave={() => setShowTooltip(false)}\n    >\n      {tooltip && <Tooltip show={showTooltip}>{tooltip}</Tooltip>}\n      {children}\n    </Tag>\n  )\n}\n"],"names":["Tooltip","React","useCallback","useState","useSlate","useElementButton","isElementActive","toggleElement","baseClass","ElementButton","props","type","children","className","disabled","disabledFromProps","el","format","onClick","tooltip","editor","disabledFromContext","showTooltip","setShowTooltip","defaultOnClick","event","preventDefault","Tag","filter","Boolean","join","onPointerEnter","onPointerLeave","show"],"mappings":"AAAA;;AAGA,SAASA,OAAO,QAAQ,iBAAgB;AACxC,OAAOC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,QAAO;AACpD,SAASC,QAAQ,QAAQ,cAAa;AAItC,OAAO,kBAAiB;AACxB,SAASC,gBAAgB,QAAQ,wCAAuC;AACxE,SAASC,eAAe,QAAQ,gBAAe;AAC/C,SAASC,aAAa,QAAQ,cAAa;AAE3C,OAAO,MAAMC,YAAY,oBAAmB;AAE5C,OAAO,MAAMC,gBAAuC,CAACC;IACnD,MAAM,EACJC,OAAO,MAAM,EACbC,QAAQ,EACRC,SAAS,EACTC,UAAUC,iBAAiB,EAC3BC,KAAK,QAAQ,EACbC,MAAM,EACNC,OAAO,EACPC,OAAO,EACR,GAAGT;IAEJ,MAAMU,SAAShB;IACf,MAAM,EAAEU,UAAUO,mBAAmB,EAAE,GAAGhB;IAC1C,MAAM,CAACiB,aAAaC,eAAe,GAAGpB,SAAS;IAE/C,MAAMqB,iBAAiBtB,YACrB,CAACuB;QACCA,MAAMC,cAAc;QACpBH,eAAe;QACfhB,cAAca,QAAQH,QAAQN;IAChC,GACA;QAACS;QAAQH;QAAQN;KAAK;IAGxB,MAAMgB,MAAmBX;IAEzB,MAAMF,WAAWC,qBAAqBM;IAEtC,qBACE,MAACM;QACE,GAAIX,OAAO,YAAY;YAAEL,MAAM;YAAUG;QAAS,CAAC;QACpDD,WAAW;YACTL;YACAK;YACAP,gBAAgBc,QAAQH,QAAQN,SAAS,GAAGH,UAAU,gBAAgB,CAAC;SACxE,CACEoB,MAAM,CAACC,SACPC,IAAI,CAAC;QACRZ,SAASA,WAAWM;QACpBO,gBAAgB,IAAMR,eAAe;QACrCS,gBAAgB,IAAMT,eAAe;;YAEpCJ,yBAAW,KAACnB;gBAAQiC,MAAMX;0BAAcH;;YACxCP;;;AAGP,EAAC"}