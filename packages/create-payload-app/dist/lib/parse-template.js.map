{"version":3,"sources":["../../src/lib/parse-template.ts"],"sourcesContent":["import * as p from '@clack/prompts'\n\nimport type { CliArgs, ProjectTemplate } from '../types.js'\n\nexport async function parseTemplate(\n  args: CliArgs,\n  validTemplates: ProjectTemplate[],\n): Promise<ProjectTemplate | undefined> {\n  if (args['--template']) {\n    const templateName = args['--template']\n    const template = validTemplates.find((t) => t.name === templateName)\n    if (!template) {\n      throw new Error('Invalid template given')\n    }\n    return template\n  }\n\n  const response = await p.select<{ label: string; value: string }[], string>({\n    message: 'Choose project template',\n    options: validTemplates.map((p) => {\n      return {\n        label: p.name,\n        value: p.name,\n      }\n    }),\n  })\n  if (p.isCancel(response)) {\n    process.exit(0)\n  }\n\n  const template = validTemplates.find((t) => t.name === response)\n\n  return template\n}\n"],"names":["p","parseTemplate","args","validTemplates","templateName","template","find","t","name","Error","response","select","message","options","map","label","value","isCancel","process","exit"],"mappings":"AAAA,YAAYA,OAAO,iBAAgB;AAInC,OAAO,eAAeC,cACpBC,IAAa,EACbC,cAAiC;IAEjC,IAAID,IAAI,CAAC,aAAa,EAAE;QACtB,MAAME,eAAeF,IAAI,CAAC,aAAa;QACvC,MAAMG,WAAWF,eAAeG,IAAI,CAAC,CAACC,IAAMA,EAAEC,IAAI,KAAKJ;QACvD,IAAI,CAACC,UAAU;YACb,MAAM,IAAII,MAAM;QAClB;QACA,OAAOJ;IACT;IAEA,MAAMK,WAAW,MAAMV,EAAEW,MAAM,CAA6C;QAC1EC,SAAS;QACTC,SAASV,eAAeW,GAAG,CAAC,CAACd;YAC3B,OAAO;gBACLe,OAAOf,EAAEQ,IAAI;gBACbQ,OAAOhB,EAAEQ,IAAI;YACf;QACF;IACF;IACA,IAAIR,EAAEiB,QAAQ,CAACP,WAAW;QACxBQ,QAAQC,IAAI,CAAC;IACf;IAEA,MAAMd,WAAWF,eAAeG,IAAI,CAAC,CAACC,IAAMA,EAAEC,IAAI,KAAKE;IAEvD,OAAOL;AACT"}