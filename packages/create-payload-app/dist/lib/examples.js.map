{"version":3,"sources":["../../src/lib/examples.ts"],"sourcesContent":["import type { ProjectExample } from '../types.js'\n\nimport { error, info } from '../utils/log.js'\n\nexport async function getExamples({ branch }: { branch: string }): Promise<ProjectExample[]> {\n  const url = `https://api.github.com/repos/payloadcms/payload/contents/examples?ref=${branch}`\n\n  const response = await fetch(url)\n\n  const examplesResponseList: { name: string; path: string }[] = await response.json()\n\n  const examples: ProjectExample[] = examplesResponseList.map((example) => ({\n    name: example.name,\n    url: `https://github.com/payloadcms/payload/examples/${example.name}#${branch}`,\n  }))\n\n  return examples\n}\n\nexport async function parseExample({\n  name,\n  branch,\n}: {\n  branch: string\n  name: string\n}): Promise<false | ProjectExample> {\n  const examples = await getExamples({ branch })\n\n  const example = examples.find((e) => e.name === name)\n\n  if (!example) {\n    error(`'${name}' is not a valid example name.`)\n    info(`Valid examples: ${examples.map((e) => e.name).join(', ')}`)\n    return false\n  }\n\n  return example\n}\n"],"names":["error","info","getExamples","branch","url","response","fetch","examplesResponseList","json","examples","map","example","name","parseExample","find","e","join"],"mappings":"AAEA,SAASA,KAAK,EAAEC,IAAI,QAAQ,kBAAiB;AAE7C,OAAO,eAAeC,YAAY,EAAEC,MAAM,EAAsB;IAC9D,MAAMC,MAAM,CAAC,sEAAsE,EAAED,QAAQ;IAE7F,MAAME,WAAW,MAAMC,MAAMF;IAE7B,MAAMG,uBAAyD,MAAMF,SAASG,IAAI;IAElF,MAAMC,WAA6BF,qBAAqBG,GAAG,CAAC,CAACC,UAAa,CAAA;YACxEC,MAAMD,QAAQC,IAAI;YAClBR,KAAK,CAAC,+CAA+C,EAAEO,QAAQC,IAAI,CAAC,CAAC,EAAET,QAAQ;QACjF,CAAA;IAEA,OAAOM;AACT;AAEA,OAAO,eAAeI,aAAa,EACjCD,IAAI,EACJT,MAAM,EAIP;IACC,MAAMM,WAAW,MAAMP,YAAY;QAAEC;IAAO;IAE5C,MAAMQ,UAAUF,SAASK,IAAI,CAAC,CAACC,IAAMA,EAAEH,IAAI,KAAKA;IAEhD,IAAI,CAACD,SAAS;QACZX,MAAM,CAAC,CAAC,EAAEY,KAAK,8BAA8B,CAAC;QAC9CX,KAAK,CAAC,gBAAgB,EAAEQ,SAASC,GAAG,CAAC,CAACK,IAAMA,EAAEH,IAAI,EAAEI,IAAI,CAAC,OAAO;QAChE,OAAO;IACT;IAEA,OAAOL;AACT"}