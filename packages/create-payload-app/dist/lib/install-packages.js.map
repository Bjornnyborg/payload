{"version":3,"sources":["../../src/lib/install-packages.ts"],"sourcesContent":["import execa from 'execa'\n\nimport type { PackageManager } from '../types.js'\n\nimport { error, warning } from '../utils/log.js'\n\nexport async function installPackages(args: {\n  packageManager: PackageManager\n  packagesToInstall: string[]\n  projectDir: string\n}) {\n  const { packageManager, packagesToInstall, projectDir } = args\n\n  let exitCode = 0\n  let stderr = ''\n\n  switch (packageManager) {\n    case 'bun':\n    case 'pnpm':\n    case 'yarn': {\n      if (packageManager === 'bun') {\n        warning('Bun support is untested.')\n      }\n      ;({ exitCode, stderr } = await execa(packageManager, ['add', ...packagesToInstall], {\n        cwd: projectDir,\n      }))\n      break\n    }\n    case 'npm': {\n      ;({ exitCode, stderr } = await execa('npm', ['install', '--save', ...packagesToInstall], {\n        cwd: projectDir,\n      }))\n      break\n    }\n  }\n\n  if (exitCode !== 0) {\n    error(`Unable to install packages. Error: ${stderr}`)\n  }\n\n  return { success: exitCode === 0 }\n}\n"],"names":["execa","error","warning","installPackages","args","packageManager","packagesToInstall","projectDir","exitCode","stderr","cwd","success"],"mappings":"AAAA,OAAOA,WAAW,QAAO;AAIzB,SAASC,KAAK,EAAEC,OAAO,QAAQ,kBAAiB;AAEhD,OAAO,eAAeC,gBAAgBC,IAIrC;IACC,MAAM,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,UAAU,EAAE,GAAGH;IAE1D,IAAII,WAAW;IACf,IAAIC,SAAS;IAEb,OAAQJ;QACN,KAAK;QACL,KAAK;QACL,KAAK;YAAQ;gBACX,IAAIA,mBAAmB,OAAO;oBAC5BH,QAAQ;gBACV;;gBACE,CAAA,EAAEM,QAAQ,EAAEC,MAAM,EAAE,GAAG,MAAMT,MAAMK,gBAAgB;oBAAC;uBAAUC;iBAAkB,EAAE;oBAClFI,KAAKH;gBACP,EAAC;gBACD;YACF;QACA,KAAK;YAAO;;gBACR,CAAA,EAAEC,QAAQ,EAAEC,MAAM,EAAE,GAAG,MAAMT,MAAM,OAAO;oBAAC;oBAAW;uBAAaM;iBAAkB,EAAE;oBACvFI,KAAKH;gBACP,EAAC;gBACD;YACF;IACF;IAEA,IAAIC,aAAa,GAAG;QAClBP,MAAM,CAAC,mCAAmC,EAAEQ,QAAQ;IACtD;IAEA,OAAO;QAAEE,SAASH,aAAa;IAAE;AACnC"}