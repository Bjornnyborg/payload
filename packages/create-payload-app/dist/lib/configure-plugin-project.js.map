{"version":3,"sources":["../../src/lib/configure-plugin-project.ts"],"sourcesContent":["import fse from 'fs-extra'\nimport path from 'path'\n\nimport { toCamelCase, toPascalCase } from '../utils/casing.js'\n\n/**\n * Configures a plugin project by updating all package name placeholders to projectName\n */\nexport const configurePluginProject = ({\n  projectDirPath,\n  projectName,\n}: {\n  projectDirPath: string\n  projectName: string\n}) => {\n  const devPayloadConfigPath = path.resolve(projectDirPath, './dev/payload.config.ts')\n  const devTsConfigPath = path.resolve(projectDirPath, './dev/tsconfig.json')\n  const indexTsPath = path.resolve(projectDirPath, './src/index.ts')\n\n  const devPayloadConfig = fse.readFileSync(devPayloadConfigPath, 'utf8')\n  const devTsConfig = fse.readFileSync(devTsConfigPath, 'utf8')\n  const indexTs = fse.readFileSync(indexTsPath, 'utf-8')\n\n  const updatedTsConfig = devTsConfig.replaceAll('plugin-package-name-placeholder', projectName)\n  let updatedIndexTs = indexTs.replaceAll('plugin-package-name-placeholder', projectName)\n\n  const pluginExportVariableName = toCamelCase(projectName)\n\n  updatedIndexTs = updatedIndexTs.replace(\n    'export const myPlugin',\n    `export const ${pluginExportVariableName}`,\n  )\n\n  updatedIndexTs = updatedIndexTs.replaceAll('MyPluginConfig', `${toPascalCase(projectName)}Config`)\n\n  let updatedPayloadConfig = devPayloadConfig.replace(\n    'plugin-package-name-placeholder',\n    projectName,\n  )\n\n  updatedPayloadConfig = updatedPayloadConfig.replaceAll('myPlugin', pluginExportVariableName)\n\n  fse.writeFileSync(devPayloadConfigPath, updatedPayloadConfig)\n  fse.writeFileSync(devTsConfigPath, updatedTsConfig)\n  fse.writeFileSync(indexTsPath, updatedIndexTs)\n}\n"],"names":["fse","path","toCamelCase","toPascalCase","configurePluginProject","projectDirPath","projectName","devPayloadConfigPath","resolve","devTsConfigPath","indexTsPath","devPayloadConfig","readFileSync","devTsConfig","indexTs","updatedTsConfig","replaceAll","updatedIndexTs","pluginExportVariableName","replace","updatedPayloadConfig","writeFileSync"],"mappings":"AAAA,OAAOA,SAAS,WAAU;AAC1B,OAAOC,UAAU,OAAM;AAEvB,SAASC,WAAW,EAAEC,YAAY,QAAQ,qBAAoB;AAE9D;;CAEC,GACD,OAAO,MAAMC,yBAAyB,CAAC,EACrCC,cAAc,EACdC,WAAW,EAIZ;IACC,MAAMC,uBAAuBN,KAAKO,OAAO,CAACH,gBAAgB;IAC1D,MAAMI,kBAAkBR,KAAKO,OAAO,CAACH,gBAAgB;IACrD,MAAMK,cAAcT,KAAKO,OAAO,CAACH,gBAAgB;IAEjD,MAAMM,mBAAmBX,IAAIY,YAAY,CAACL,sBAAsB;IAChE,MAAMM,cAAcb,IAAIY,YAAY,CAACH,iBAAiB;IACtD,MAAMK,UAAUd,IAAIY,YAAY,CAACF,aAAa;IAE9C,MAAMK,kBAAkBF,YAAYG,UAAU,CAAC,mCAAmCV;IAClF,IAAIW,iBAAiBH,QAAQE,UAAU,CAAC,mCAAmCV;IAE3E,MAAMY,2BAA2BhB,YAAYI;IAE7CW,iBAAiBA,eAAeE,OAAO,CACrC,yBACA,CAAC,aAAa,EAAED,0BAA0B;IAG5CD,iBAAiBA,eAAeD,UAAU,CAAC,kBAAkB,GAAGb,aAAaG,aAAa,MAAM,CAAC;IAEjG,IAAIc,uBAAuBT,iBAAiBQ,OAAO,CACjD,mCACAb;IAGFc,uBAAuBA,qBAAqBJ,UAAU,CAAC,YAAYE;IAEnElB,IAAIqB,aAAa,CAACd,sBAAsBa;IACxCpB,IAAIqB,aAAa,CAACZ,iBAAiBM;IACnCf,IAAIqB,aAAa,CAACX,aAAaO;AACjC,EAAC"}