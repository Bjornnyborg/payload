{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import * as p from '@clack/prompts'\nimport slugify from '@sindresorhus/slugify'\nimport arg from 'arg'\nimport chalk from 'chalk'\nimport figures from 'figures'\nimport path from 'path'\n\nimport type { CliArgs } from './types.js'\n\nimport { configurePayloadConfig } from './lib/configure-payload-config.js'\nimport { PACKAGE_VERSION } from './lib/constants.js'\nimport { createProject } from './lib/create-project.js'\nimport { parseExample } from './lib/examples.js'\nimport { generateSecret } from './lib/generate-secret.js'\nimport { getPackageManager } from './lib/get-package-manager.js'\nimport { getNextAppDetails, initNext } from './lib/init-next.js'\nimport { manageEnvFiles } from './lib/manage-env-files.js'\nimport { parseProjectName } from './lib/parse-project-name.js'\nimport { parseTemplate } from './lib/parse-template.js'\nimport { selectDb } from './lib/select-db.js'\nimport { getValidTemplates, validateTemplate } from './lib/templates.js'\nimport { updatePayloadInProject } from './lib/update-payload-in-project.js'\nimport { debug, error, info } from './utils/log.js'\nimport {\n  feedbackOutro,\n  helpMessage,\n  moveMessage,\n  successfulNextInit,\n  successMessage,\n} from './utils/messages.js'\n\nexport class Main {\n  args: CliArgs\n\n  constructor() {\n    // @ts-expect-error bad typings\n    this.args = arg(\n      {\n        '--branch': String,\n        '--db': String,\n        '--db-accept-recommended': Boolean,\n        '--db-connection-string': String,\n        '--example': String,\n        '--help': Boolean,\n        '--local-template': String,\n        '--name': String,\n        '--secret': String,\n        '--template': String,\n\n        // Next.js\n        '--init-next': Boolean, // TODO: Is this needed if we detect if inside Next.js project?\n\n        // Package manager\n        '--no-deps': Boolean,\n        '--use-bun': Boolean,\n        '--use-npm': Boolean,\n        '--use-pnpm': Boolean,\n        '--use-yarn': Boolean,\n\n        // Other\n        '--no-git': Boolean,\n\n        // Flags\n        '--beta': Boolean,\n        '--debug': Boolean,\n        '--dry-run': Boolean,\n\n        // Aliases\n        '-d': '--db',\n        '-e': '--example',\n        '-h': '--help',\n        '-n': '--name',\n        '-t': '--template',\n      },\n      { permissive: true },\n    )\n  }\n\n  async init(): Promise<void> {\n    try {\n      if (this.args['--help']) {\n        helpMessage()\n        process.exit(0)\n      }\n\n      const debugFlag = this.args['--debug']\n\n      // eslint-disable-next-line no-console\n      console.log('\\n')\n      p.intro(chalk.bgCyan(chalk.black(' create-payload-app ')))\n      p.note(\"Welcome to Payload. Let's create a project!\")\n\n      // Detect if inside Next.js project\n      const nextAppDetails = await getNextAppDetails(process.cwd())\n      const {\n        hasTopLevelLayout,\n        isPayloadInstalled,\n        isSupportedNextVersion,\n        nextAppDir,\n        nextConfigPath,\n        nextVersion,\n      } = nextAppDetails\n\n      if (nextConfigPath && !isSupportedNextVersion) {\n        p.log.warn(\n          `Next.js v${nextVersion} is unsupported. Next.js >= 15 is required to use Payload.`,\n        )\n        p.outro(feedbackOutro())\n        process.exit(0)\n      }\n\n      // Upgrade Payload in existing project\n      if (isPayloadInstalled && nextConfigPath) {\n        p.log.warn(`Payload installation detected in current project.`)\n        const shouldUpdate = await p.confirm({\n          initialValue: false,\n          message: chalk.bold(`Upgrade Payload in this project?`),\n        })\n\n        if (!p.isCancel(shouldUpdate) && shouldUpdate) {\n          const { message, success: updateSuccess } = await updatePayloadInProject(nextAppDetails)\n          if (updateSuccess) {\n            info(message)\n          } else {\n            error(message)\n          }\n        }\n\n        p.outro(feedbackOutro())\n        process.exit(0)\n      }\n\n      if (nextConfigPath) {\n        this.args['--name'] = slugify(path.basename(path.dirname(nextConfigPath)))\n      }\n\n      const projectName = await parseProjectName(this.args)\n      const projectDir = nextConfigPath\n        ? path.dirname(nextConfigPath)\n        : path.resolve(process.cwd(), slugify(projectName))\n\n      const packageManager = await getPackageManager({ cliArgs: this.args, projectDir })\n\n      if (nextConfigPath) {\n        p.log.step(\n          chalk.bold(`${chalk.bgBlack(` ${figures.triangleUp} Next.js `)} project detected!`),\n        )\n\n        const proceed = await p.confirm({\n          initialValue: true,\n          message: chalk.bold(`Install ${chalk.green('Payload')} in this project?`),\n        })\n        if (p.isCancel(proceed) || !proceed) {\n          p.outro(feedbackOutro())\n          process.exit(0)\n        }\n\n        // Check for top-level layout.tsx\n        if (nextAppDir && hasTopLevelLayout) {\n          p.log.warn(moveMessage({ nextAppDir, projectDir }))\n          p.outro(feedbackOutro())\n          process.exit(0)\n        }\n\n        const dbDetails = await selectDb(this.args, projectName)\n\n        const result = await initNext({\n          ...this.args,\n          dbType: dbDetails.type,\n          nextAppDetails,\n          packageManager,\n          projectDir,\n        })\n\n        if (result.success === false) {\n          p.outro(feedbackOutro())\n          process.exit(1)\n        }\n\n        await configurePayloadConfig({\n          dbType: dbDetails?.type,\n          projectDirOrConfigPath: {\n            payloadConfigPath: result.payloadConfigPath,\n          },\n        })\n\n        await manageEnvFiles({\n          cliArgs: this.args,\n          databaseType: dbDetails.type,\n          databaseUri: dbDetails.dbUri,\n          payloadSecret: generateSecret(),\n          projectDir,\n        })\n\n        info('Payload project successfully initialized!')\n        p.note(successfulNextInit(), chalk.bgGreen(chalk.black(' Documentation ')))\n        p.outro(feedbackOutro())\n        return\n      }\n\n      const templateArg = this.args['--template']\n      if (templateArg) {\n        const valid = validateTemplate(templateArg)\n        if (!valid) {\n          helpMessage()\n          process.exit(1)\n        }\n      }\n\n      const exampleArg = this.args['--example']\n\n      if (exampleArg) {\n        const example = await parseExample({\n          name: exampleArg,\n          branch: this.args['--branch'] ?? 'main',\n        })\n\n        if (!example) {\n          helpMessage()\n          process.exit(1)\n        }\n\n        await createProject({\n          cliArgs: this.args,\n          example,\n          packageManager,\n          projectDir,\n          projectName,\n        })\n      }\n\n      if (debugFlag) {\n        debug(`Using ${exampleArg ? 'examples' : 'templates'} from git tag: v${PACKAGE_VERSION}`)\n      }\n\n      if (!exampleArg) {\n        const validTemplates = getValidTemplates()\n        const template = await parseTemplate(this.args, validTemplates)\n        if (!template) {\n          p.log.error('Invalid template given')\n          p.outro(feedbackOutro())\n          process.exit(1)\n        }\n\n        switch (template.type) {\n          case 'plugin': {\n            await createProject({\n              cliArgs: this.args,\n              packageManager,\n              projectDir,\n              projectName,\n              template,\n            })\n            break\n          }\n          case 'starter': {\n            const dbDetails = await selectDb(this.args, projectName)\n\n            await createProject({\n              cliArgs: this.args,\n              dbDetails,\n              packageManager,\n              projectDir,\n              projectName,\n              template,\n            })\n\n            break\n          }\n        }\n      }\n\n      info('Payload project successfully created!')\n      p.log.step(chalk.bgGreen(chalk.black(' Next Steps ')))\n      p.log.message(successMessage(projectDir, packageManager))\n      p.outro(feedbackOutro())\n    } catch (err: unknown) {\n      error(err instanceof Error ? err.message : 'An error occurred')\n    }\n  }\n}\n"],"names":["p","slugify","arg","chalk","figures","path","configurePayloadConfig","PACKAGE_VERSION","createProject","parseExample","generateSecret","getPackageManager","getNextAppDetails","initNext","manageEnvFiles","parseProjectName","parseTemplate","selectDb","getValidTemplates","validateTemplate","updatePayloadInProject","debug","error","info","feedbackOutro","helpMessage","moveMessage","successfulNextInit","successMessage","Main","args","constructor","String","Boolean","permissive","init","process","exit","debugFlag","console","log","intro","bgCyan","black","note","nextAppDetails","cwd","hasTopLevelLayout","isPayloadInstalled","isSupportedNextVersion","nextAppDir","nextConfigPath","nextVersion","warn","outro","shouldUpdate","confirm","initialValue","message","bold","isCancel","success","updateSuccess","basename","dirname","projectName","projectDir","resolve","packageManager","cliArgs","step","bgBlack","triangleUp","proceed","green","dbDetails","result","dbType","type","projectDirOrConfigPath","payloadConfigPath","databaseType","databaseUri","dbUri","payloadSecret","bgGreen","templateArg","valid","exampleArg","example","name","branch","validTemplates","template","err","Error"],"mappings":"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"}