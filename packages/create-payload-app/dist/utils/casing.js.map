{"version":3,"sources":["../../src/utils/casing.ts"],"sourcesContent":["export const toCamelCase = (str: string) => {\n  const s = str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+\\d*|\\b)|[A-Z]?[a-z]+\\d*|[A-Z]|\\d+/g)\n    ?.map((x) => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())\n    .join('')\n  return (s && s.slice(0, 1).toLowerCase() + s.slice(1)) ?? ''\n}\n\nexport function toPascalCase(input: string): string {\n  return input\n    .replace(/[_-]+/g, ' ') // Replace underscores or hyphens with spaces\n    .replace(/(?:^|\\s+)(\\w)/g, (_, c) => c.toUpperCase()) // Capitalize first letter of each word\n    .replace(/\\s+/g, '') // Remove all spaces\n}\n"],"names":["toCamelCase","str","s","match","map","x","slice","toUpperCase","toLowerCase","join","toPascalCase","input","replace","_","c"],"mappings":"AAAA,OAAO,MAAMA,cAAc,CAACC;IAC1B,MAAMC,IAAID,IACPE,KAAK,CAAC,8DACLC,IAAI,CAACC,IAAMA,EAAEC,KAAK,CAAC,GAAG,GAAGC,WAAW,KAAKF,EAAEC,KAAK,CAAC,GAAGE,WAAW,IAChEC,KAAK;IACR,OAAO,AAACP,CAAAA,KAAKA,EAAEI,KAAK,CAAC,GAAG,GAAGE,WAAW,KAAKN,EAAEI,KAAK,CAAC,EAAC,KAAM;AAC5D,EAAC;AAED,OAAO,SAASI,aAAaC,KAAa;IACxC,OAAOA,MACJC,OAAO,CAAC,UAAU,KAAK,6CAA6C;KACpEA,OAAO,CAAC,kBAAkB,CAACC,GAAGC,IAAMA,EAAEP,WAAW,IAAI,uCAAuC;KAC5FK,OAAO,CAAC,QAAQ,IAAI,oBAAoB;;AAC7C"}