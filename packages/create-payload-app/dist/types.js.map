{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import type arg from 'arg'\n\nexport interface Args extends arg.Spec {\n  '--beta': BooleanConstructor\n  '--branch': StringConstructor\n  '--db': StringConstructor\n  '--db-accept-recommended': BooleanConstructor\n  '--db-connection-string': StringConstructor\n  '--debug': BooleanConstructor\n  '--dry-run': BooleanConstructor\n\n  '--example': StringConstructor\n  '--help': BooleanConstructor\n  '--init-next': BooleanConstructor\n  '--local-example': StringConstructor\n  '--local-template': StringConstructor\n  '--name': StringConstructor\n  '--no-deps': BooleanConstructor\n  '--no-git': BooleanConstructor\n  '--secret': StringConstructor\n  '--template': StringConstructor\n  '--use-bun': BooleanConstructor\n  '--use-npm': BooleanConstructor\n  '--use-pnpm': BooleanConstructor\n  '--use-yarn': BooleanConstructor\n\n  // Aliases\n\n  '-e': string\n  '-h': string\n  '-n': string\n  '-t': string\n}\n\nexport type CliArgs = arg.Result<Args>\n\nexport type ProjectTemplate = GitTemplate | PluginTemplate\n\nexport type ProjectExample = {\n  name: string\n  url: string\n}\n\n/**\n * Template that is cloned verbatim from a git repo\n * Performs .env manipulation based upon input\n */\nexport interface GitTemplate extends Template {\n  type: 'starter'\n  url: string\n}\n\n/**\n * Type specifically for the plugin template\n * No .env manipulation is done\n */\nexport interface PluginTemplate extends Template {\n  type: 'plugin'\n  url: string\n}\n\ninterface Template {\n  description?: string\n  name: string\n  type: ProjectTemplate['type']\n}\n\nexport type PackageManager = 'bun' | 'npm' | 'pnpm' | 'yarn'\n\nexport type DbType = 'mongodb' | 'postgres' | 'sqlite' | 'vercel-postgres'\n\nexport type DbDetails = {\n  dbUri: string\n  type: DbType\n}\n\nexport type EditorType = 'lexical' | 'slate'\n\nexport type NextAppDetails = {\n  hasTopLevelLayout: boolean\n  isPayloadInstalled?: boolean\n  isSrcDir: boolean\n  isSupportedNextVersion: boolean\n  nextAppDir?: string\n  nextConfigPath?: string\n  nextConfigType?: NextConfigType\n  nextVersion: null | string\n}\n\nexport type NextConfigType = 'cjs' | 'esm' | 'ts'\n\nexport type StorageAdapterType = 'localDisk' | 'payloadCloud' | 'vercelBlobStorage'\n"],"names":[],"mappings":"AA2FA,WAAmF"}