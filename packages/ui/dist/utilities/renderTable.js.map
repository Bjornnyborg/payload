{"version":3,"file":"renderTable.js","names":["getTranslation","fieldAffectsData","fieldIsHiddenOrDisabled","flattenTopLevelFields","React","RenderServerComponent","OrderableTable","Pill","SelectAll","SelectRow","SortHeader","SortRow","Table","buildColumnState","buildPolymorphicColumnState","filterFields","getInitialColumns","renderFilters","fields","importMap","reduce","acc","field","admin","components","Filter","set","name","Component","Map","renderTable","clientCollectionConfig","clientConfig","collectionConfig","collections","columnPreferences","columns","columnsFromArgs","customCellProps","docs","enableRowSelections","i18n","orderableFieldName","payload","renderRowTypes","tableAppearance","useAsTitle","columnState","collection","config","find","each","slug","some","push","filter","column","accessor","defaultColumns","columnsToUse","unshift","active","disabled","hidden","Heading","t","renderedCells","map","doc","i","_jsx","relationTo","labels","singular","_","rowData","appearance","data"],"sources":["../../src/utilities/renderTable.tsx"],"sourcesContent":["import type {\n  ClientCollectionConfig,\n  ClientConfig,\n  ClientField,\n  CollectionConfig,\n  Field,\n  ImportMap,\n  ListPreferences,\n  PaginatedDocs,\n  Payload,\n  SanitizedCollectionConfig,\n} from 'payload'\n\nimport { getTranslation, type I18nClient } from '@payloadcms/translations'\nimport { fieldAffectsData, fieldIsHiddenOrDisabled, flattenTopLevelFields } from 'payload/shared'\nimport React from 'react'\n\n// eslint-disable-next-line payload/no-imports-from-exports-dir\nimport type { Column } from '../exports/client/index.js'\n\nimport { RenderServerComponent } from '../elements/RenderServerComponent/index.js'\nimport {\n  OrderableTable,\n  Pill,\n  SelectAll,\n  SelectRow,\n  SortHeader,\n  SortRow,\n  Table,\n  // eslint-disable-next-line payload/no-imports-from-exports-dir\n} from '../exports/client/index.js'\nimport { buildColumnState } from '../providers/TableColumns/buildColumnState.js'\nimport { buildPolymorphicColumnState } from '../providers/TableColumns/buildPolymorphicColumnState.js'\nimport { filterFields } from '../providers/TableColumns/filterFields.js'\nimport { getInitialColumns } from '../providers/TableColumns/getInitialColumns.js'\n\nexport const renderFilters = (\n  fields: Field[],\n  importMap: ImportMap,\n): Map<string, React.ReactNode> =>\n  fields.reduce(\n    (acc, field) => {\n      if (fieldIsHiddenOrDisabled(field)) {\n        return acc\n      }\n\n      if ('name' in field && field.admin?.components?.Filter) {\n        acc.set(\n          field.name,\n          RenderServerComponent({\n            Component: field.admin.components?.Filter,\n            importMap,\n          }),\n        )\n      }\n\n      return acc\n    },\n    new Map() as Map<string, React.ReactNode>,\n  )\n\nexport const renderTable = ({\n  clientCollectionConfig,\n  clientConfig,\n  collectionConfig,\n  collections,\n  columnPreferences,\n  columns: columnsFromArgs,\n  customCellProps,\n  docs,\n  enableRowSelections,\n  i18n,\n  orderableFieldName,\n  payload,\n  renderRowTypes,\n  tableAppearance,\n  useAsTitle,\n}: {\n  clientCollectionConfig?: ClientCollectionConfig\n  clientConfig?: ClientConfig\n  collectionConfig?: SanitizedCollectionConfig\n  collections?: string[]\n  columnPreferences: ListPreferences['columns']\n  columns?: ListPreferences['columns']\n  customCellProps?: Record<string, any>\n  docs: PaginatedDocs['docs']\n  drawerSlug?: string\n  enableRowSelections: boolean\n  i18n: I18nClient\n  orderableFieldName: string\n  payload: Payload\n  renderRowTypes?: boolean\n  tableAppearance?: 'condensed' | 'default'\n  useAsTitle: CollectionConfig['admin']['useAsTitle']\n}): {\n  columnState: Column[]\n  Table: React.ReactNode\n} => {\n  // Ensure that columns passed as args comply with the field config, i.e. `hidden`, `disableListColumn`, etc.\n\n  let columnState: Column[]\n\n  if (collections) {\n    const fields: ClientField[] = []\n    for (const collection of collections) {\n      const config = clientConfig.collections.find((each) => each.slug === collection)\n\n      for (const field of filterFields(config.fields)) {\n        if (fieldAffectsData(field)) {\n          if (fields.some((each) => fieldAffectsData(each) && each.name === field.name)) {\n            continue\n          }\n        }\n\n        fields.push(field)\n      }\n    }\n\n    const columns = columnsFromArgs\n      ? columnsFromArgs?.filter((column) =>\n          flattenTopLevelFields(fields, true)?.some(\n            (field) => 'name' in field && field.name === column.accessor,\n          ),\n        )\n      : getInitialColumns(fields, useAsTitle, [])\n\n    columnState = buildPolymorphicColumnState({\n      columnPreferences,\n      columns,\n      enableRowSelections,\n      fields,\n      i18n,\n      // sortColumnProps,\n      customCellProps,\n      docs,\n      payload,\n      useAsTitle,\n    })\n  } else {\n    const columns = columnsFromArgs\n      ? columnsFromArgs?.filter((column) =>\n          flattenTopLevelFields(clientCollectionConfig.fields, true)?.some(\n            (field) => 'name' in field && field.name === column.accessor,\n          ),\n        )\n      : getInitialColumns(\n          filterFields(clientCollectionConfig.fields),\n          useAsTitle,\n          clientCollectionConfig?.admin?.defaultColumns,\n        )\n\n    columnState = buildColumnState({\n      clientCollectionConfig,\n      collectionConfig,\n      columnPreferences,\n      columns,\n      enableRowSelections,\n      i18n,\n      // sortColumnProps,\n      customCellProps,\n      docs,\n      payload,\n      useAsTitle,\n    })\n  }\n\n  const columnsToUse = [...columnState]\n\n  if (renderRowTypes) {\n    columnsToUse.unshift({\n      accessor: 'collection',\n      active: true,\n      field: {\n        admin: {\n          disabled: true,\n        },\n        hidden: true,\n      },\n      Heading: i18n.t('version:type'),\n      renderedCells: docs.map((doc, i) => (\n        <Pill key={i}>\n          {getTranslation(\n            collections\n              ? payload.collections[doc.relationTo].config.labels.singular\n              : clientCollectionConfig.labels.singular,\n            i18n,\n          )}\n        </Pill>\n      )),\n    } as Column)\n  }\n\n  if (enableRowSelections) {\n    columnsToUse.unshift({\n      accessor: '_select',\n      active: true,\n      field: {\n        admin: {\n          disabled: true,\n        },\n        hidden: true,\n      },\n      Heading: <SelectAll />,\n      renderedCells: docs.map((_, i) => <SelectRow key={i} rowData={docs[i]} />),\n    } as Column)\n  }\n\n  if (!orderableFieldName) {\n    return {\n      columnState,\n      // key is required since Next.js 15.2.0 to prevent React key error\n      Table: <Table appearance={tableAppearance} columns={columnsToUse} data={docs} key=\"table\" />,\n    }\n  }\n\n  columnsToUse.unshift({\n    accessor: '_dragHandle',\n    active: true,\n    field: {\n      admin: {\n        disabled: true,\n      },\n      hidden: true,\n    },\n    Heading: <SortHeader />,\n    renderedCells: docs.map((_, i) => <SortRow key={i} />),\n  } as Column)\n\n  return {\n    columnState,\n    // key is required since Next.js 15.2.0 to prevent React key error\n    Table: (\n      <OrderableTable\n        appearance={tableAppearance}\n        collection={clientCollectionConfig}\n        columns={columnsToUse}\n        data={docs}\n        key=\"table\"\n      />\n    ),\n  }\n}\n"],"mappings":"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","ignoreList":[]}