{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type {\n  Adapter,\n  ClientUploadsConfig,\n  PluginOptions as CloudStoragePluginOptions,\n  CollectionOptions,\n  GeneratedAdapter,\n} from '@payloadcms/plugin-cloud-storage/types'\nimport type { Config, Plugin, UploadCollectionSlug } from 'payload'\n\nimport { cloudStoragePlugin } from '@payloadcms/plugin-cloud-storage'\nimport { initClientUploads } from '@payloadcms/plugin-cloud-storage/utilities'\n\nimport type { VercelBlobClientUploadHandlerExtra } from './client/VercelBlobClientUploadHandler.js'\n\nimport { getGenerateUrl } from './generateURL.js'\nimport { getClientUploadRoute } from './getClientUploadRoute.js'\nimport { getHandleDelete } from './handleDelete.js'\nimport { getHandleUpload } from './handleUpload.js'\nimport { getStaticHandler } from './staticHandler.js'\n\nexport type VercelBlobStorageOptions = {\n  /**\n   * Access control level. Currently, only 'public' is supported.\n   * Vercel plans on adding support for private blobs in the future.\n   *\n   * @default 'public'\n   */\n  access?: 'public'\n\n  /**\n   * Add a random suffix to the uploaded file name in Vercel Blob storage\n   *\n   * @default false\n   */\n  addRandomSuffix?: boolean\n\n  /**\n   * Cache-Control max-age in seconds\n   *\n   * @default 365 * 24 * 60 * 60 // (1 Year)\n   */\n  cacheControlMaxAge?: number\n\n  /**\n   * Do uploads directly on the client, to bypass limits on Vercel.\n   */\n  clientUploads?: ClientUploadsConfig\n\n  /**\n   * Collections to apply the Vercel Blob adapter to\n   */\n  collections: Partial<Record<UploadCollectionSlug, Omit<CollectionOptions, 'adapter'> | true>>\n\n  /**\n   * Whether or not to enable the plugin\n   *\n   * Default: true\n   */\n  enabled?: boolean\n\n  /**\n   * Vercel Blob storage read/write token\n   *\n   * Usually process.env.BLOB_READ_WRITE_TOKEN set by Vercel\n   *\n   * If unset, the plugin will be disabled and will fallback to local storage\n   */\n  token: string | undefined\n}\n\nconst defaultUploadOptions: Partial<VercelBlobStorageOptions> = {\n  access: 'public',\n  addRandomSuffix: false,\n  cacheControlMaxAge: 60 * 60 * 24 * 365, // 1 year\n  enabled: true,\n}\n\ntype VercelBlobStoragePlugin = (vercelBlobStorageOpts: VercelBlobStorageOptions) => Plugin\n\nexport const vercelBlobStorage: VercelBlobStoragePlugin =\n  (options: VercelBlobStorageOptions) =>\n  (incomingConfig: Config): Config => {\n    // Parse storeId from token\n    const storeId = options.token\n      ?.match(/^vercel_blob_rw_([a-z\\d]+)_[a-z\\d]+$/i)?.[1]\n      ?.toLowerCase()\n\n    const isPluginDisabled = options.enabled === false || !options.token\n\n    // Don't throw if the plugin is disabled\n    if (!storeId && !isPluginDisabled) {\n      throw new Error(\n        'Invalid token format for Vercel Blob adapter. Should be vercel_blob_rw_<store_id>_<random_string>.',\n      )\n    }\n\n    const optionsWithDefaults = {\n      ...defaultUploadOptions,\n      ...options,\n    }\n\n    const baseUrl = `https://${storeId}.${optionsWithDefaults.access}.blob.vercel-storage.com`\n\n    initClientUploads<\n      VercelBlobClientUploadHandlerExtra,\n      VercelBlobStorageOptions['collections'][string]\n    >({\n      clientHandler: '@payloadcms/storage-vercel-blob/client#VercelBlobClientUploadHandler',\n      collections: options.collections,\n      config: incomingConfig,\n      enabled: !isPluginDisabled && Boolean(options.clientUploads),\n      extraClientHandlerProps: (collection) => ({\n        addRandomSuffix: !!optionsWithDefaults.addRandomSuffix,\n        baseURL: baseUrl,\n        prefix: (typeof collection === 'object' && collection.prefix) || '',\n      }),\n      serverHandler: getClientUploadRoute({\n        access:\n          typeof options.clientUploads === 'object' ? options.clientUploads.access : undefined,\n        addRandomSuffix: optionsWithDefaults.addRandomSuffix,\n        cacheControlMaxAge: options.cacheControlMaxAge,\n        token: options.token ?? '',\n      }),\n      serverHandlerPath: '/vercel-blob-client-upload-route',\n    })\n\n    // If the plugin is disabled or no token is provided, do not enable the plugin\n    if (isPluginDisabled) {\n      return incomingConfig\n    }\n\n    const adapter = vercelBlobStorageInternal({ ...optionsWithDefaults, baseUrl })\n\n    // Add adapter to each collection option object\n    const collectionsWithAdapter: CloudStoragePluginOptions['collections'] = Object.entries(\n      options.collections,\n    ).reduce(\n      (acc, [slug, collOptions]) => ({\n        ...acc,\n        [slug]: {\n          ...(collOptions === true ? {} : collOptions),\n          adapter,\n        },\n      }),\n      {} as Record<string, CollectionOptions>,\n    )\n\n    // Set disableLocalStorage: true for collections specified in the plugin options\n    const config = {\n      ...incomingConfig,\n      collections: (incomingConfig.collections || []).map((collection) => {\n        if (!collectionsWithAdapter[collection.slug]) {\n          return collection\n        }\n\n        return {\n          ...collection,\n          upload: {\n            ...(typeof collection.upload === 'object' ? collection.upload : {}),\n            disableLocalStorage: true,\n          },\n        }\n      }),\n    }\n\n    return cloudStoragePlugin({\n      collections: collectionsWithAdapter,\n    })(config)\n  }\n\nfunction vercelBlobStorageInternal(\n  options: { baseUrl: string } & VercelBlobStorageOptions,\n): Adapter {\n  return ({ collection, prefix }): GeneratedAdapter => {\n    const { access, addRandomSuffix, baseUrl, cacheControlMaxAge, clientUploads, token } = options\n\n    if (!token) {\n      throw new Error('Vercel Blob storage token is required')\n    }\n\n    return {\n      name: 'vercel-blob',\n      clientUploads,\n      generateURL: getGenerateUrl({ baseUrl, prefix }),\n      handleDelete: getHandleDelete({ baseUrl, prefix, token }),\n      handleUpload: getHandleUpload({\n        access,\n        addRandomSuffix,\n        baseUrl,\n        cacheControlMaxAge,\n        prefix,\n        token,\n      }),\n      staticHandler: getStaticHandler({ baseUrl, cacheControlMaxAge, token }, collection),\n    }\n  }\n}\n"],"names":["cloudStoragePlugin","initClientUploads","getGenerateUrl","getClientUploadRoute","getHandleDelete","getHandleUpload","getStaticHandler","defaultUploadOptions","access","addRandomSuffix","cacheControlMaxAge","enabled","vercelBlobStorage","options","incomingConfig","storeId","token","match","toLowerCase","isPluginDisabled","Error","optionsWithDefaults","baseUrl","clientHandler","collections","config","Boolean","clientUploads","extraClientHandlerProps","collection","baseURL","prefix","serverHandler","undefined","serverHandlerPath","adapter","vercelBlobStorageInternal","collectionsWithAdapter","Object","entries","reduce","acc","slug","collOptions","map","upload","disableLocalStorage","name","generateURL","handleDelete","handleUpload","staticHandler"],"mappings":"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"}