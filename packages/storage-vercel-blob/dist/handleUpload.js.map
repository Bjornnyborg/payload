{"version":3,"sources":["../src/handleUpload.ts"],"sourcesContent":["import type { HandleUpload } from '@payloadcms/plugin-cloud-storage/types'\n\nimport { put } from '@vercel/blob'\nimport path from 'path'\n\nimport type { VercelBlobStorageOptions } from './index.js'\n\ntype HandleUploadArgs = {\n  baseUrl: string\n  prefix?: string\n} & Omit<VercelBlobStorageOptions, 'collections'>\n\nexport const getHandleUpload = ({\n  access = 'public',\n  addRandomSuffix,\n  baseUrl,\n  cacheControlMaxAge,\n  prefix = '',\n  token,\n}: HandleUploadArgs): HandleUpload => {\n  return async ({ data, file: { buffer, filename, mimeType } }) => {\n    const fileKey = path.posix.join(data.prefix || prefix, filename)\n\n    const result = await put(fileKey, buffer, {\n      access,\n      addRandomSuffix,\n      cacheControlMaxAge,\n      contentType: mimeType,\n      token,\n    })\n\n    // Get filename with suffix from returned url\n    if (addRandomSuffix) {\n      data.filename = result.url.replace(`${baseUrl}/`, '')\n    }\n\n    return data\n  }\n}\n"],"names":["put","path","getHandleUpload","access","addRandomSuffix","baseUrl","cacheControlMaxAge","prefix","token","data","file","buffer","filename","mimeType","fileKey","posix","join","result","contentType","url","replace"],"mappings":"AAEA,SAASA,GAAG,QAAQ,eAAc;AAClC,OAAOC,UAAU,OAAM;AASvB,OAAO,MAAMC,kBAAkB,CAAC,EAC9BC,SAAS,QAAQ,EACjBC,eAAe,EACfC,OAAO,EACPC,kBAAkB,EAClBC,SAAS,EAAE,EACXC,KAAK,EACY;IACjB,OAAO,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,EAAE;QAC1D,MAAMC,UAAUb,KAAKc,KAAK,CAACC,IAAI,CAACP,KAAKF,MAAM,IAAIA,QAAQK;QAEvD,MAAMK,SAAS,MAAMjB,IAAIc,SAASH,QAAQ;YACxCR;YACAC;YACAE;YACAY,aAAaL;YACbL;QACF;QAEA,6CAA6C;QAC7C,IAAIJ,iBAAiB;YACnBK,KAAKG,QAAQ,GAAGK,OAAOE,GAAG,CAACC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,EAAE;QACpD;QAEA,OAAOI;IACT;AACF,EAAC"}