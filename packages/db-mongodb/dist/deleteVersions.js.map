{"version":3,"sources":["../src/deleteVersions.ts"],"sourcesContent":["import { buildVersionCollectionFields, type DeleteVersions } from 'payload'\n\nimport type { MongooseAdapter } from './index.js'\n\nimport { buildQuery } from './queries/buildQuery.js'\nimport { getCollection } from './utilities/getEntity.js'\nimport { getSession } from './utilities/getSession.js'\n\nexport const deleteVersions: DeleteVersions = async function deleteVersions(\n  this: MongooseAdapter,\n  { collection: collectionSlug, locale, req, where },\n) {\n  const { collectionConfig, Model } = getCollection({\n    adapter: this,\n    collectionSlug,\n    versions: true,\n  })\n\n  const session = await getSession(this, req)\n\n  const query = await buildQuery({\n    adapter: this,\n    fields: buildVersionCollectionFields(this.payload.config, collectionConfig, true),\n    locale,\n    where,\n  })\n\n  await Model.deleteMany(query, { session })\n}\n"],"names":["buildVersionCollectionFields","buildQuery","getCollection","getSession","deleteVersions","collection","collectionSlug","locale","req","where","collectionConfig","Model","adapter","versions","session","query","fields","payload","config","deleteMany"],"mappings":"AAAA,SAASA,4BAA4B,QAA6B,UAAS;AAI3E,SAASC,UAAU,QAAQ,0BAAyB;AACpD,SAASC,aAAa,QAAQ,2BAA0B;AACxD,SAASC,UAAU,QAAQ,4BAA2B;AAEtD,OAAO,MAAMC,iBAAiC,eAAeA,eAE3D,EAAEC,YAAYC,cAAc,EAAEC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAE;IAElD,MAAM,EAAEC,gBAAgB,EAAEC,KAAK,EAAE,GAAGT,cAAc;QAChDU,SAAS,IAAI;QACbN;QACAO,UAAU;IACZ;IAEA,MAAMC,UAAU,MAAMX,WAAW,IAAI,EAAEK;IAEvC,MAAMO,QAAQ,MAAMd,WAAW;QAC7BW,SAAS,IAAI;QACbI,QAAQhB,6BAA6B,IAAI,CAACiB,OAAO,CAACC,MAAM,EAAER,kBAAkB;QAC5EH;QACAE;IACF;IAEA,MAAME,MAAMQ,UAAU,CAACJ,OAAO;QAAED;IAAQ;AAC1C,EAAC"}