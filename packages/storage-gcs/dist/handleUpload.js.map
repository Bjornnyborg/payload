{"version":3,"sources":["../src/handleUpload.ts"],"sourcesContent":["import type { Storage } from '@google-cloud/storage'\nimport type { HandleUpload } from '@payloadcms/plugin-cloud-storage/types'\nimport type { CollectionConfig } from 'payload'\n\nimport path from 'path'\n\ninterface Args {\n  acl?: 'Private' | 'Public'\n  bucket: string\n  collection: CollectionConfig\n  getStorageClient: () => Storage\n  prefix?: string\n}\n\nexport const getHandleUpload = ({\n  acl,\n  bucket,\n  getStorageClient,\n  prefix = '',\n}: Args): HandleUpload => {\n  return async ({ data, file }) => {\n    const fileKey = path.posix.join(data.prefix || prefix, file.filename)\n\n    const gcsFile = getStorageClient().bucket(bucket).file(fileKey)\n    await gcsFile.save(file.buffer, {\n      metadata: {\n        contentType: file.mimeType,\n      },\n    })\n\n    if (acl) {\n      await gcsFile[`make${acl}`]()\n    }\n\n    return data\n  }\n}\n"],"names":["path","getHandleUpload","acl","bucket","getStorageClient","prefix","data","file","fileKey","posix","join","filename","gcsFile","save","buffer","metadata","contentType","mimeType"],"mappings":"AAIA,OAAOA,UAAU,OAAM;AAUvB,OAAO,MAAMC,kBAAkB,CAAC,EAC9BC,GAAG,EACHC,MAAM,EACNC,gBAAgB,EAChBC,SAAS,EAAE,EACN;IACL,OAAO,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE;QAC1B,MAAMC,UAAUR,KAAKS,KAAK,CAACC,IAAI,CAACJ,KAAKD,MAAM,IAAIA,QAAQE,KAAKI,QAAQ;QAEpE,MAAMC,UAAUR,mBAAmBD,MAAM,CAACA,QAAQI,IAAI,CAACC;QACvD,MAAMI,QAAQC,IAAI,CAACN,KAAKO,MAAM,EAAE;YAC9BC,UAAU;gBACRC,aAAaT,KAAKU,QAAQ;YAC5B;QACF;QAEA,IAAIf,KAAK;YACP,MAAMU,OAAO,CAAC,CAAC,IAAI,EAAEV,KAAK,CAAC;QAC7B;QAEA,OAAOI;IACT;AACF,EAAC"}