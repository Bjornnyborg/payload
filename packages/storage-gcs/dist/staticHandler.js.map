{"version":3,"sources":["../src/staticHandler.ts"],"sourcesContent":["import type { Storage } from '@google-cloud/storage'\nimport type { StaticHandler } from '@payloadcms/plugin-cloud-storage/types'\nimport type { CollectionConfig } from 'payload'\n\nimport { getFilePrefix } from '@payloadcms/plugin-cloud-storage/utilities'\nimport path from 'path'\n\ninterface Args {\n  bucket: string\n  collection: CollectionConfig\n  getStorageClient: () => Storage\n}\n\nexport const getHandler = ({ bucket, collection, getStorageClient }: Args): StaticHandler => {\n  return async (req, { params: { clientUploadContext, filename } }) => {\n    try {\n      const prefix = await getFilePrefix({ clientUploadContext, collection, filename, req })\n      const file = getStorageClient().bucket(bucket).file(path.posix.join(prefix, filename))\n\n      const [metadata] = await file.getMetadata()\n\n      const etagFromHeaders = req.headers.get('etag') || req.headers.get('if-none-match')\n      const objectEtag = metadata.etag\n\n      if (etagFromHeaders && etagFromHeaders === objectEtag) {\n        return new Response(null, {\n          headers: new Headers({\n            'Content-Length': String(metadata.size),\n            'Content-Type': String(metadata.contentType),\n            ETag: String(metadata.etag),\n          }),\n          status: 304,\n        })\n      }\n\n      // Manually create a ReadableStream for the web from a Node.js stream.\n      const readableStream = new ReadableStream({\n        start(controller) {\n          const nodeStream = file.createReadStream()\n          nodeStream.on('data', (chunk) => {\n            controller.enqueue(new Uint8Array(chunk))\n          })\n          nodeStream.on('end', () => {\n            controller.close()\n          })\n          nodeStream.on('error', (err) => {\n            controller.error(err)\n          })\n        },\n      })\n\n      return new Response(readableStream, {\n        headers: new Headers({\n          'Content-Length': String(metadata.size),\n          'Content-Type': String(metadata.contentType),\n          ETag: String(metadata.etag),\n        }),\n        status: 200,\n      })\n    } catch (err: unknown) {\n      req.payload.logger.error(err)\n      return new Response('Internal Server Error', { status: 500 })\n    }\n  }\n}\n"],"names":["getFilePrefix","path","getHandler","bucket","collection","getStorageClient","req","params","clientUploadContext","filename","prefix","file","posix","join","metadata","getMetadata","etagFromHeaders","headers","get","objectEtag","etag","Response","Headers","String","size","contentType","ETag","status","readableStream","ReadableStream","start","controller","nodeStream","createReadStream","on","chunk","enqueue","Uint8Array","close","err","error","payload","logger"],"mappings":"AAIA,SAASA,aAAa,QAAQ,6CAA4C;AAC1E,OAAOC,UAAU,OAAM;AAQvB,OAAO,MAAMC,aAAa,CAAC,EAAEC,MAAM,EAAEC,UAAU,EAAEC,gBAAgB,EAAQ;IACvE,OAAO,OAAOC,KAAK,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,QAAQ,EAAE,EAAE;QAC9D,IAAI;YACF,MAAMC,SAAS,MAAMV,cAAc;gBAAEQ;gBAAqBJ;gBAAYK;gBAAUH;YAAI;YACpF,MAAMK,OAAON,mBAAmBF,MAAM,CAACA,QAAQQ,IAAI,CAACV,KAAKW,KAAK,CAACC,IAAI,CAACH,QAAQD;YAE5E,MAAM,CAACK,SAAS,GAAG,MAAMH,KAAKI,WAAW;YAEzC,MAAMC,kBAAkBV,IAAIW,OAAO,CAACC,GAAG,CAAC,WAAWZ,IAAIW,OAAO,CAACC,GAAG,CAAC;YACnE,MAAMC,aAAaL,SAASM,IAAI;YAEhC,IAAIJ,mBAAmBA,oBAAoBG,YAAY;gBACrD,OAAO,IAAIE,SAAS,MAAM;oBACxBJ,SAAS,IAAIK,QAAQ;wBACnB,kBAAkBC,OAAOT,SAASU,IAAI;wBACtC,gBAAgBD,OAAOT,SAASW,WAAW;wBAC3CC,MAAMH,OAAOT,SAASM,IAAI;oBAC5B;oBACAO,QAAQ;gBACV;YACF;YAEA,sEAAsE;YACtE,MAAMC,iBAAiB,IAAIC,eAAe;gBACxCC,OAAMC,UAAU;oBACd,MAAMC,aAAarB,KAAKsB,gBAAgB;oBACxCD,WAAWE,EAAE,CAAC,QAAQ,CAACC;wBACrBJ,WAAWK,OAAO,CAAC,IAAIC,WAAWF;oBACpC;oBACAH,WAAWE,EAAE,CAAC,OAAO;wBACnBH,WAAWO,KAAK;oBAClB;oBACAN,WAAWE,EAAE,CAAC,SAAS,CAACK;wBACtBR,WAAWS,KAAK,CAACD;oBACnB;gBACF;YACF;YAEA,OAAO,IAAIlB,SAASO,gBAAgB;gBAClCX,SAAS,IAAIK,QAAQ;oBACnB,kBAAkBC,OAAOT,SAASU,IAAI;oBACtC,gBAAgBD,OAAOT,SAASW,WAAW;oBAC3CC,MAAMH,OAAOT,SAASM,IAAI;gBAC5B;gBACAO,QAAQ;YACV;QACF,EAAE,OAAOY,KAAc;YACrBjC,IAAImC,OAAO,CAACC,MAAM,CAACF,KAAK,CAACD;YACzB,OAAO,IAAIlB,SAAS,yBAAyB;gBAAEM,QAAQ;YAAI;QAC7D;IACF;AACF,EAAC"}