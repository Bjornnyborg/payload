{"version":3,"file":"resolveAllFilterOptions.js","names":["resolveFilterOptions","fieldHasSubFields","fieldIsHiddenOrDisabled","resolveAllFilterOptions","fields","req","result","resolvedFilterOptions","Map","Promise","all","map","field","filterOptions","options","id","undefined","blockData","data","relationTo","siblingData","user","set","name","type","tabs","tab"],"sources":["../../../src/views/List/resolveAllFilterOptions.ts"],"sourcesContent":["import type { Field, PayloadRequest, ResolvedFilterOptions } from 'payload'\n\nimport { resolveFilterOptions } from '@payloadcms/ui/rsc'\nimport { fieldHasSubFields, fieldIsHiddenOrDisabled } from 'payload/shared'\n\nexport const resolveAllFilterOptions = async ({\n  fields,\n  req,\n  result,\n}: {\n  fields: Field[]\n  req: PayloadRequest\n  result?: Map<string, ResolvedFilterOptions>\n}): Promise<Map<string, ResolvedFilterOptions>> => {\n  const resolvedFilterOptions = !result ? new Map<string, ResolvedFilterOptions>() : result\n\n  await Promise.all(\n    fields.map(async (field) => {\n      if (fieldIsHiddenOrDisabled(field)) {\n        return\n      }\n\n      if ('name' in field && 'filterOptions' in field && field.filterOptions) {\n        const options = await resolveFilterOptions(field.filterOptions, {\n          id: undefined,\n          blockData: undefined,\n          data: {}, // use empty object to prevent breaking queries when accessing properties of data\n          relationTo: field.relationTo,\n          req,\n          siblingData: {}, // use empty object to prevent breaking queries when accessing properties of data\n          user: req.user,\n        })\n\n        resolvedFilterOptions.set(field.name, options)\n      }\n\n      if (fieldHasSubFields(field)) {\n        await resolveAllFilterOptions({\n          fields: field.fields,\n          req,\n          result: resolvedFilterOptions,\n        })\n      }\n\n      if (field.type === 'tabs') {\n        await Promise.all(\n          field.tabs.map((tab) =>\n            resolveAllFilterOptions({\n              fields: tab.fields,\n              req,\n              result: resolvedFilterOptions,\n            }),\n          ),\n        )\n      }\n    }),\n  )\n\n  return resolvedFilterOptions\n}\n"],"mappings":"AAEA,SAASA,oBAAoB,QAAQ;AACrC,SAASC,iBAAiB,EAAEC,uBAAuB,QAAQ;AAE3D,OAAO,MAAMC,uBAAA,GAA0B,MAAAA,CAAO;EAC5CC,MAAM;EACNC,GAAG;EACHC;AAAM,CAKP;EACC,MAAMC,qBAAA,GAAwB,CAACD,MAAA,GAAS,IAAIE,GAAA,KAAuCF,MAAA;EAEnF,MAAMG,OAAA,CAAQC,GAAG,CACfN,MAAA,CAAOO,GAAG,CAAC,MAAOC,KAAA;IAChB,IAAIV,uBAAA,CAAwBU,KAAA,GAAQ;MAClC;IACF;IAEA,IAAI,UAAUA,KAAA,IAAS,mBAAmBA,KAAA,IAASA,KAAA,CAAMC,aAAa,EAAE;MACtE,MAAMC,OAAA,GAAU,MAAMd,oBAAA,CAAqBY,KAAA,CAAMC,aAAa,EAAE;QAC9DE,EAAA,EAAIC,SAAA;QACJC,SAAA,EAAWD,SAAA;QACXE,IAAA,EAAM,CAAC;QACPC,UAAA,EAAYP,KAAA,CAAMO,UAAU;QAC5Bd,GAAA;QACAe,WAAA,EAAa,CAAC;QACdC,IAAA,EAAMhB,GAAA,CAAIgB;MACZ;MAEAd,qBAAA,CAAsBe,GAAG,CAACV,KAAA,CAAMW,IAAI,EAAET,OAAA;IACxC;IAEA,IAAIb,iBAAA,CAAkBW,KAAA,GAAQ;MAC5B,MAAMT,uBAAA,CAAwB;QAC5BC,MAAA,EAAQQ,KAAA,CAAMR,MAAM;QACpBC,GAAA;QACAC,MAAA,EAAQC;MACV;IACF;IAEA,IAAIK,KAAA,CAAMY,IAAI,KAAK,QAAQ;MACzB,MAAMf,OAAA,CAAQC,GAAG,CACfE,KAAA,CAAMa,IAAI,CAACd,GAAG,CAAEe,GAAA,IACdvB,uBAAA,CAAwB;QACtBC,MAAA,EAAQsB,GAAA,CAAItB,MAAM;QAClBC,GAAA;QACAC,MAAA,EAAQC;MACV;IAGN;EACF;EAGF,OAAOA,qBAAA;AACT","ignoreList":[]}