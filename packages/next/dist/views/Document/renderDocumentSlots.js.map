{"version":3,"file":"renderDocumentSlots.js","names":["ViewDescription","RenderServerComponent","getDocumentPermissions","renderDocumentSlots","args","collectionConfig","globalConfig","hasSavePermission","req","components","unsavedDraftWithValidations","undefined","isPreviewEnabled","admin","preview","serverProps","i18n","payload","user","CustomPreviewButton","edit","PreviewButton","elements","Component","importMap","descriptionFromConfig","description","staticDescription","t","CustomDescription","Description","hasDescription","clientProps","collectionSlug","slug","Fallback","versions","drafts","CustomPublishButton","PublishButton","CustomSaveDraftButton","SaveDraftButton","draftsEnabled","autosave","CustomSaveButton","SaveButton","upload","Upload","renderDocumentSlotsHandler","collections","config","Error","docPermissions","data","permissions"],"sources":["../../../src/views/Document/renderDocumentSlots.tsx"],"sourcesContent":["import type {\n  DefaultServerFunctionArgs,\n  DocumentSlots,\n  PayloadRequest,\n  PreviewButtonServerPropsOnly,\n  PublishButtonServerPropsOnly,\n  SanitizedCollectionConfig,\n  SanitizedDocumentPermissions,\n  SanitizedGlobalConfig,\n  SaveButtonServerPropsOnly,\n  SaveDraftButtonServerPropsOnly,\n  ServerProps,\n  StaticDescription,\n  ViewDescriptionClientProps,\n  ViewDescriptionServerPropsOnly,\n} from 'payload'\n\nimport { ViewDescription } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\n\nimport { getDocumentPermissions } from './getDocumentPermissions.js'\n\nexport const renderDocumentSlots: (args: {\n  collectionConfig?: SanitizedCollectionConfig\n  globalConfig?: SanitizedGlobalConfig\n  hasSavePermission: boolean\n  permissions: SanitizedDocumentPermissions\n  req: PayloadRequest\n}) => DocumentSlots = (args) => {\n  const { collectionConfig, globalConfig, hasSavePermission, req } = args\n\n  const components: DocumentSlots = {} as DocumentSlots\n\n  const unsavedDraftWithValidations = undefined\n\n  const isPreviewEnabled = collectionConfig?.admin?.preview || globalConfig?.admin?.preview\n\n  const serverProps: ServerProps = {\n    i18n: req.i18n,\n    payload: req.payload,\n    user: req.user,\n    // TODO: Add remaining serverProps\n  }\n\n  const CustomPreviewButton =\n    collectionConfig?.admin?.components?.edit?.PreviewButton ||\n    globalConfig?.admin?.components?.elements?.PreviewButton\n\n  if (isPreviewEnabled && CustomPreviewButton) {\n    components.PreviewButton = RenderServerComponent({\n      Component: CustomPreviewButton,\n      importMap: req.payload.importMap,\n      serverProps: serverProps satisfies PreviewButtonServerPropsOnly,\n    })\n  }\n\n  const descriptionFromConfig =\n    collectionConfig?.admin?.description || globalConfig?.admin?.description\n\n  const staticDescription: StaticDescription =\n    typeof descriptionFromConfig === 'function'\n      ? descriptionFromConfig({ t: req.i18n.t })\n      : descriptionFromConfig\n\n  const CustomDescription =\n    collectionConfig?.admin?.components?.Description ||\n    globalConfig?.admin?.components?.elements?.Description\n\n  const hasDescription = CustomDescription || staticDescription\n\n  if (hasDescription) {\n    components.Description = RenderServerComponent({\n      clientProps: {\n        collectionSlug: collectionConfig?.slug,\n        description: staticDescription,\n      } satisfies ViewDescriptionClientProps,\n      Component: CustomDescription,\n      Fallback: ViewDescription,\n      importMap: req.payload.importMap,\n      serverProps: serverProps satisfies ViewDescriptionServerPropsOnly,\n    })\n  }\n\n  if (hasSavePermission) {\n    if (collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts) {\n      const CustomPublishButton =\n        collectionConfig?.admin?.components?.edit?.PublishButton ||\n        globalConfig?.admin?.components?.elements?.PublishButton\n\n      if (CustomPublishButton) {\n        components.PublishButton = RenderServerComponent({\n          Component: CustomPublishButton,\n          importMap: req.payload.importMap,\n          serverProps: serverProps satisfies PublishButtonServerPropsOnly,\n        })\n      }\n\n      const CustomSaveDraftButton =\n        collectionConfig?.admin?.components?.edit?.SaveDraftButton ||\n        globalConfig?.admin?.components?.elements?.SaveDraftButton\n\n      const draftsEnabled =\n        (collectionConfig?.versions?.drafts && !collectionConfig?.versions?.drafts?.autosave) ||\n        (globalConfig?.versions?.drafts && !globalConfig?.versions?.drafts?.autosave)\n\n      if ((draftsEnabled || unsavedDraftWithValidations) && CustomSaveDraftButton) {\n        components.SaveDraftButton = RenderServerComponent({\n          Component: CustomSaveDraftButton,\n          importMap: req.payload.importMap,\n          serverProps: serverProps satisfies SaveDraftButtonServerPropsOnly,\n        })\n      }\n    } else {\n      const CustomSaveButton =\n        collectionConfig?.admin?.components?.edit?.SaveButton ||\n        globalConfig?.admin?.components?.elements?.SaveButton\n\n      if (CustomSaveButton) {\n        components.SaveButton = RenderServerComponent({\n          Component: CustomSaveButton,\n          importMap: req.payload.importMap,\n          serverProps: serverProps satisfies SaveButtonServerPropsOnly,\n        })\n      }\n    }\n  }\n\n  if (collectionConfig?.upload && collectionConfig?.admin?.components?.edit?.Upload) {\n    components.Upload = RenderServerComponent({\n      Component: collectionConfig.admin.components.edit.Upload,\n      importMap: req.payload.importMap,\n      serverProps,\n    })\n  }\n\n  return components\n}\n\nexport const renderDocumentSlotsHandler = async (\n  args: { collectionSlug: string } & DefaultServerFunctionArgs,\n) => {\n  const { collectionSlug, req } = args\n\n  const collectionConfig = req.payload.collections[collectionSlug]?.config\n\n  if (!collectionConfig) {\n    throw new Error(req.t('error:incorrectCollection'))\n  }\n\n  const { docPermissions, hasSavePermission } = await getDocumentPermissions({\n    collectionConfig,\n    data: {},\n    req,\n  })\n\n  return renderDocumentSlots({\n    collectionConfig,\n    hasSavePermission,\n    permissions: docPermissions,\n    req,\n  })\n}\n"],"mappings":"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","ignoreList":[]}