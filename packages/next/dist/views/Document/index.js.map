{"version":3,"file":"index.js","names":["DocumentInfoProvider","EditDepthProvider","HydrateAuthProvider","RenderServerComponent","isEditing","getIsEditing","buildFormState","notFound","redirect","logError","formatAdminURL","React","DocumentHeader","NotFoundView","getDocPreferences","getDocumentData","getDocumentPermissions","getIsLocked","getMetaBySegment","getVersions","getViewsFromConfig","renderDocumentSlots","generateMetadata","args","renderDocument","disableActions","documentSubViewType","drawerSlug","importMap","initialData","initPageResult","overrideEntityVisibility","params","redirectAfterCreate","redirectAfterDelete","redirectAfterDuplicate","searchParams","viewType","collectionConfig","docID","idFromArgs","globalConfig","locale","permissions","req","i18n","payload","config","routes","admin","adminRoute","api","apiRoute","serverURL","user","visibleEntities","segments","Array","isArray","collectionSlug","slug","undefined","globalSlug","id","RootViewOverride","CustomView","DefaultView","ErrorView","apiURL","doc","Error","docPreferences","docPermissions","hasPublishPermission","hasSavePermission","currentEditor","isLocked","lastUpdateTime","Promise","all","data","hasPublishedDoc","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","state","formState","code","fallbackLocale","operation","renderAllFields","schemaPath","skipValidation","documentViewServerProps","routeSegments","collections","find","visibleSlug","URLSearchParams","versions","drafts","append","apiQueryParams","toString","components","views","edit","root","Component","collectionViews","globals","globalViews","shouldAutosave","autosave","validateDraftData","validate","create","collection","depth","draft","redirectURL","path","documentSlots","clientProps","Document","_jsxs","initialState","_jsx","ComponentConfig","serverProps","props","RenderedDocument","error","message","err"],"sources":["../../../src/views/Document/index.tsx"],"sourcesContent":["import type {\n  AdminViewServerProps,\n  Data,\n  DocumentViewClientProps,\n  DocumentViewServerProps,\n  DocumentViewServerPropsOnly,\n  PayloadComponent,\n} from 'payload'\n\nimport { DocumentInfoProvider, EditDepthProvider, HydrateAuthProvider } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { isEditing as getIsEditing } from '@payloadcms/ui/shared'\nimport { buildFormState } from '@payloadcms/ui/utilities/buildFormState'\nimport { notFound, redirect } from 'next/navigation.js'\nimport { logError } from 'payload'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nimport type { GenerateEditViewMetadata } from './getMetaBySegment.js'\nimport type { ViewFromConfig } from './getViewsFromConfig.js'\n\nimport { DocumentHeader } from '../../elements/DocumentHeader/index.js'\nimport { NotFoundView } from '../NotFound/index.js'\nimport { getDocPreferences } from './getDocPreferences.js'\nimport { getDocumentData } from './getDocumentData.js'\nimport { getDocumentPermissions } from './getDocumentPermissions.js'\nimport { getIsLocked } from './getIsLocked.js'\nimport { getMetaBySegment } from './getMetaBySegment.js'\nimport { getVersions } from './getVersions.js'\nimport { getViewsFromConfig } from './getViewsFromConfig.js'\nimport { renderDocumentSlots } from './renderDocumentSlots.js'\n\nexport const generateMetadata: GenerateEditViewMetadata = async (args) => getMetaBySegment(args)\n\n// This function will be responsible for rendering an Edit Document view\n// it will be called on the server for Edit page views as well as\n// called on-demand from document drawers\nexport const renderDocument = async ({\n  disableActions,\n  documentSubViewType,\n  drawerSlug,\n  importMap,\n  initialData,\n  initPageResult,\n  overrideEntityVisibility,\n  params,\n  redirectAfterCreate,\n  redirectAfterDelete,\n  redirectAfterDuplicate,\n  searchParams,\n  viewType,\n}: {\n  drawerSlug?: string\n  overrideEntityVisibility?: boolean\n  readonly redirectAfterCreate?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n} & AdminViewServerProps): Promise<{\n  data: Data\n  Document: React.ReactNode\n}> => {\n  const {\n    collectionConfig,\n    docID: idFromArgs,\n    globalConfig,\n    locale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: {\n        config,\n        config: {\n          routes: { admin: adminRoute, api: apiRoute },\n          serverURL,\n        },\n      },\n      user,\n    },\n    visibleEntities,\n  } = initPageResult\n\n  const segments = Array.isArray(params?.segments) ? params.segments : []\n  const collectionSlug = collectionConfig?.slug || undefined\n  const globalSlug = globalConfig?.slug || undefined\n  let isEditing = getIsEditing({ id: idFromArgs, collectionSlug, globalSlug })\n\n  let RootViewOverride: PayloadComponent\n  let CustomView: ViewFromConfig<DocumentViewServerProps>\n  let DefaultView: ViewFromConfig<DocumentViewServerProps>\n  let ErrorView: ViewFromConfig<AdminViewServerProps>\n\n  let apiURL: string\n\n  // Fetch the doc required for the view\n  let doc =\n    initialData ||\n    (await getDocumentData({\n      id: idFromArgs,\n      collectionSlug,\n      globalSlug,\n      locale,\n      payload,\n      req,\n      user,\n    }))\n\n  if (isEditing && !doc) {\n    throw new Error('not-found')\n  }\n\n  const [\n    docPreferences,\n    { docPermissions, hasPublishPermission, hasSavePermission },\n    { currentEditor, isLocked, lastUpdateTime },\n  ] = await Promise.all([\n    // Get document preferences\n    getDocPreferences({\n      id: idFromArgs,\n      collectionSlug,\n      globalSlug,\n      payload,\n      user,\n    }),\n\n    // Get permissions\n    getDocumentPermissions({\n      id: idFromArgs,\n      collectionConfig,\n      data: doc,\n      globalConfig,\n      req,\n    }),\n\n    // Fetch document lock state\n    getIsLocked({\n      id: idFromArgs,\n      collectionConfig,\n      globalConfig,\n      isEditing,\n      req,\n    }),\n  ])\n\n  const [\n    { hasPublishedDoc, mostRecentVersionIsAutosaved, unpublishedVersionCount, versionCount },\n    { state: formState },\n  ] = await Promise.all([\n    getVersions({\n      id: idFromArgs,\n      collectionConfig,\n      doc,\n      docPermissions,\n      globalConfig,\n      locale: locale?.code,\n      payload,\n      user,\n    }),\n    buildFormState({\n      id: idFromArgs,\n      collectionSlug,\n      data: doc,\n      docPermissions,\n      docPreferences,\n      fallbackLocale: false,\n      globalSlug,\n      locale: locale?.code,\n      operation: (collectionSlug && idFromArgs) || globalSlug ? 'update' : 'create',\n      renderAllFields: true,\n      req,\n      schemaPath: collectionSlug || globalSlug,\n      skipValidation: true,\n    }),\n  ])\n\n  const documentViewServerProps: DocumentViewServerPropsOnly = {\n    doc,\n    i18n,\n    initPageResult,\n    locale,\n    params,\n    payload,\n    permissions,\n    routeSegments: segments,\n    searchParams,\n    user,\n  }\n\n  if (collectionConfig) {\n    if (\n      !visibleEntities?.collections?.find((visibleSlug) => visibleSlug === collectionSlug) &&\n      !overrideEntityVisibility\n    ) {\n      throw new Error('not-found')\n    }\n\n    const params = new URLSearchParams()\n\n    if (collectionConfig.versions?.drafts) {\n      params.append('draft', 'true')\n    }\n\n    if (locale?.code) {\n      params.append('locale', locale.code)\n    }\n\n    const apiQueryParams = `?${params.toString()}`\n\n    apiURL = `${serverURL}${apiRoute}/${collectionSlug}/${idFromArgs}${apiQueryParams}`\n\n    RootViewOverride =\n      collectionConfig?.admin?.components?.views?.edit?.root &&\n      'Component' in collectionConfig.admin.components.views.edit.root\n        ? collectionConfig?.admin?.components?.views?.edit?.root?.Component\n        : null\n\n    if (!RootViewOverride) {\n      const collectionViews = getViewsFromConfig({\n        collectionConfig,\n        config,\n        docPermissions,\n        routeSegments: segments,\n      })\n\n      CustomView = collectionViews?.CustomView\n      DefaultView = collectionViews?.DefaultView\n      ErrorView = collectionViews?.ErrorView\n    }\n\n    if (!CustomView && !DefaultView && !RootViewOverride && !ErrorView) {\n      ErrorView = {\n        Component: NotFoundView,\n      }\n    }\n  }\n\n  if (globalConfig) {\n    if (!visibleEntities?.globals?.find((visibleSlug) => visibleSlug === globalSlug)) {\n      throw new Error('not-found')\n    }\n\n    const params = new URLSearchParams({\n      locale: locale?.code,\n    })\n\n    if (globalConfig.versions?.drafts) {\n      params.append('draft', 'true')\n    }\n\n    if (locale?.code) {\n      params.append('locale', locale.code)\n    }\n\n    const apiQueryParams = `?${params.toString()}`\n\n    apiURL = `${serverURL}${apiRoute}/${globalSlug}${apiQueryParams}`\n\n    RootViewOverride =\n      globalConfig?.admin?.components?.views?.edit?.root &&\n      'Component' in globalConfig.admin.components.views.edit.root\n        ? globalConfig?.admin?.components?.views?.edit?.root?.Component\n        : null\n\n    if (!RootViewOverride) {\n      const globalViews = getViewsFromConfig({\n        config,\n        docPermissions,\n        globalConfig,\n        routeSegments: segments,\n      })\n\n      CustomView = globalViews?.CustomView\n      DefaultView = globalViews?.DefaultView\n      ErrorView = globalViews?.ErrorView\n\n      if (!CustomView && !DefaultView && !RootViewOverride && !ErrorView) {\n        ErrorView = {\n          Component: NotFoundView,\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle case where autoSave is enabled and the document is being created\n   * => create document and redirect\n   */\n  const shouldAutosave =\n    hasSavePermission &&\n    ((collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave) ||\n      (globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave))\n\n  const validateDraftData =\n    collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.validate\n\n  let id = idFromArgs\n\n  if (shouldAutosave && !validateDraftData && !idFromArgs && collectionSlug) {\n    doc = await payload.create({\n      collection: collectionSlug,\n      data: initialData || {},\n      depth: 0,\n      draft: true,\n      fallbackLocale: false,\n      locale: locale?.code,\n      req,\n      user,\n    })\n\n    if (doc?.id) {\n      id = doc.id\n      isEditing = getIsEditing({ id: doc.id, collectionSlug, globalSlug })\n\n      if (!drawerSlug && redirectAfterCreate !== false) {\n        const redirectURL = formatAdminURL({\n          adminRoute,\n          path: `/collections/${collectionSlug}/${doc.id}`,\n          serverURL,\n        })\n\n        redirect(redirectURL)\n      }\n    } else {\n      throw new Error('not-found')\n    }\n  }\n\n  const documentSlots = renderDocumentSlots({\n    collectionConfig,\n    globalConfig,\n    hasSavePermission,\n    permissions: docPermissions,\n    req,\n  })\n\n  const clientProps: DocumentViewClientProps = {\n    formState,\n    ...documentSlots,\n    documentSubViewType,\n    viewType,\n  }\n\n  return {\n    data: doc,\n    Document: (\n      <DocumentInfoProvider\n        apiURL={apiURL}\n        collectionSlug={collectionConfig?.slug}\n        currentEditor={currentEditor}\n        disableActions={disableActions ?? false}\n        docPermissions={docPermissions}\n        globalSlug={globalConfig?.slug}\n        hasPublishedDoc={hasPublishedDoc}\n        hasPublishPermission={hasPublishPermission}\n        hasSavePermission={hasSavePermission}\n        id={id}\n        initialData={doc}\n        initialState={formState}\n        isEditing={isEditing}\n        isLocked={isLocked}\n        key={locale?.code}\n        lastUpdateTime={lastUpdateTime}\n        mostRecentVersionIsAutosaved={mostRecentVersionIsAutosaved}\n        redirectAfterCreate={redirectAfterCreate}\n        redirectAfterDelete={redirectAfterDelete}\n        redirectAfterDuplicate={redirectAfterDuplicate}\n        unpublishedVersionCount={unpublishedVersionCount}\n        versionCount={versionCount}\n      >\n        {!RootViewOverride && !drawerSlug && (\n          <DocumentHeader\n            collectionConfig={collectionConfig}\n            globalConfig={globalConfig}\n            i18n={i18n}\n            payload={payload}\n            permissions={permissions}\n          />\n        )}\n        <HydrateAuthProvider permissions={permissions} />\n        <EditDepthProvider>\n          {ErrorView\n            ? RenderServerComponent({\n                clientProps,\n                Component: ErrorView.ComponentConfig || ErrorView.Component,\n                importMap,\n                serverProps: documentViewServerProps,\n              })\n            : RenderServerComponent({\n                clientProps,\n                Component: RootViewOverride\n                  ? RootViewOverride\n                  : CustomView?.ComponentConfig || CustomView?.Component\n                    ? CustomView?.ComponentConfig || CustomView?.Component\n                    : DefaultView?.ComponentConfig || DefaultView?.Component,\n                importMap,\n                serverProps: documentViewServerProps,\n              })}\n        </EditDepthProvider>\n      </DocumentInfoProvider>\n    ),\n  }\n}\n\nexport async function Document(props: AdminViewServerProps) {\n  try {\n    const { Document: RenderedDocument } = await renderDocument(props)\n    return RenderedDocument\n  } catch (error) {\n    if (error?.message === 'NEXT_REDIRECT') {\n      throw error\n    }\n\n    logError({ err: error, payload: props.initPageResult.req.payload })\n\n    if (error.message === 'not-found') {\n      notFound()\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}