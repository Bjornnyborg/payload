{"version":3,"file":"getDocumentData.js","names":["sanitizeID","logError","getDocumentData","id","idArg","collectionSlug","globalSlug","locale","payload","req","user","resolvedData","findByID","collection","depth","draft","fallbackLocale","code","overrideAccess","query","search","searchParams","findGlobal","slug","err"],"sources":["../../../src/views/Document/getDocumentData.ts"],"sourcesContent":["import { sanitizeID } from '@payloadcms/ui/shared'\nimport {\n  type Locale,\n  logError,\n  type Payload,\n  type PayloadRequest,\n  type TypedUser,\n  type TypeWithID,\n} from 'payload'\n\ntype Args = {\n  collectionSlug?: string\n  globalSlug?: string\n  id?: number | string\n  locale?: Locale\n  payload: Payload\n  req?: PayloadRequest\n  user?: TypedUser\n}\n\nexport const getDocumentData = async ({\n  id: idArg,\n  collectionSlug,\n  globalSlug,\n  locale,\n  payload,\n  req,\n  user,\n}: Args): Promise<null | Record<string, unknown> | TypeWithID> => {\n  const id = sanitizeID(idArg)\n  let resolvedData: Record<string, unknown> | TypeWithID = null\n\n  try {\n    if (collectionSlug && id) {\n      resolvedData = await payload.findByID({\n        id,\n        collection: collectionSlug,\n        depth: 0,\n        draft: true,\n        fallbackLocale: false,\n        locale: locale?.code,\n        overrideAccess: false,\n        req: {\n          query: req?.query,\n          search: req?.search,\n          searchParams: req?.searchParams,\n        },\n        user,\n      })\n    }\n\n    if (globalSlug) {\n      resolvedData = await payload.findGlobal({\n        slug: globalSlug,\n        depth: 0,\n        draft: true,\n        fallbackLocale: false,\n        locale: locale?.code,\n        overrideAccess: false,\n        req: {\n          query: req?.query,\n          search: req?.search,\n          searchParams: req?.searchParams,\n        },\n        user,\n      })\n    }\n  } catch (err) {\n    logError({ err, payload })\n  }\n\n  return resolvedData\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ;AAC3B,SAEEC,QAAQ,QAKH;AAYP,OAAO,MAAMC,eAAA,GAAkB,MAAAA,CAAO;EACpCC,EAAA,EAAIC,KAAK;EACTC,cAAc;EACdC,UAAU;EACVC,MAAM;EACNC,OAAO;EACPC,GAAG;EACHC;AAAI,CACC;EACL,MAAMP,EAAA,GAAKH,UAAA,CAAWI,KAAA;EACtB,IAAIO,YAAA,GAAqD;EAEzD,IAAI;IACF,IAAIN,cAAA,IAAkBF,EAAA,EAAI;MACxBQ,YAAA,GAAe,MAAMH,OAAA,CAAQI,QAAQ,CAAC;QACpCT,EAAA;QACAU,UAAA,EAAYR,cAAA;QACZS,KAAA,EAAO;QACPC,KAAA,EAAO;QACPC,cAAA,EAAgB;QAChBT,MAAA,EAAQA,MAAA,EAAQU,IAAA;QAChBC,cAAA,EAAgB;QAChBT,GAAA,EAAK;UACHU,KAAA,EAAOV,GAAA,EAAKU,KAAA;UACZC,MAAA,EAAQX,GAAA,EAAKW,MAAA;UACbC,YAAA,EAAcZ,GAAA,EAAKY;QACrB;QACAX;MACF;IACF;IAEA,IAAIJ,UAAA,EAAY;MACdK,YAAA,GAAe,MAAMH,OAAA,CAAQc,UAAU,CAAC;QACtCC,IAAA,EAAMjB,UAAA;QACNQ,KAAA,EAAO;QACPC,KAAA,EAAO;QACPC,cAAA,EAAgB;QAChBT,MAAA,EAAQA,MAAA,EAAQU,IAAA;QAChBC,cAAA,EAAgB;QAChBT,GAAA,EAAK;UACHU,KAAA,EAAOV,GAAA,EAAKU,KAAA;UACZC,MAAA,EAAQX,GAAA,EAAKW,MAAA;UACbC,YAAA,EAAcZ,GAAA,EAAKY;QACrB;QACAX;MACF;IACF;EACF,EAAE,OAAOc,GAAA,EAAK;IACZvB,QAAA,CAAS;MAAEuB,GAAA;MAAKhB;IAAQ;EAC1B;EAEA,OAAOG,YAAA;AACT","ignoreList":[]}