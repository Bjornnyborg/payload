{"version":3,"file":"index.js","names":["c","_c","ChevronIcon","FieldDiffLabel","Pill","useConfig","useTranslation","fieldIsArrayType","fieldIsBlockType","React","useState","countChangedFields","countChangedFieldsInRows","baseClass","DiffCollapser","t0","$","children","comparison","field","fields","initCollapsed","t1","isIterable","t2","label","locales","parentIsLocalized","version","undefined","t","isCollapsed","setIsCollapsed","config","t3","changeCount","Error","t4","comparisonRows","t5","versionRows","Array","isArray","filter","Boolean","contentClassNames","join","t6","_jsxs","className","_jsx","onClick","type","direction","pillStyle","size","count"],"sources":["../../../../../src/views/Version/RenderFieldsToDiff/DiffCollapser/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientField } from 'payload'\n\nimport { ChevronIcon, FieldDiffLabel, Pill, useConfig, useTranslation } from '@payloadcms/ui'\nimport { fieldIsArrayType, fieldIsBlockType } from 'payload/shared'\nimport React, { useState } from 'react'\n\nimport './index.scss'\nimport { countChangedFields, countChangedFieldsInRows } from '../utilities/countChangedFields.js'\n\nconst baseClass = 'diff-collapser'\n\ntype Props =\n  | {\n      // fields collapser\n      children: React.ReactNode\n      comparison: unknown\n      field?: never\n      fields: ClientField[]\n      initCollapsed?: boolean\n      isIterable?: false\n      label: React.ReactNode\n      locales: string[] | undefined\n      parentIsLocalized: boolean\n      version: unknown\n    }\n  | {\n      // iterable collapser\n      children: React.ReactNode\n      comparison?: unknown\n      field: ClientField\n      fields?: never\n      initCollapsed?: boolean\n      isIterable: true\n      label: React.ReactNode\n      locales: string[] | undefined\n      parentIsLocalized: boolean\n      version: unknown\n    }\n\nexport const DiffCollapser: React.FC<Props> = ({\n  children,\n  comparison,\n  field,\n  fields,\n  initCollapsed = false,\n  isIterable = false,\n  label,\n  locales,\n  parentIsLocalized,\n  version,\n}) => {\n  const { t } = useTranslation()\n  const [isCollapsed, setIsCollapsed] = useState(initCollapsed)\n  const { config } = useConfig()\n\n  let changeCount = 0\n\n  if (isIterable) {\n    if (!fieldIsArrayType(field) && !fieldIsBlockType(field)) {\n      throw new Error(\n        'DiffCollapser: field must be an array or blocks field when isIterable is true',\n      )\n    }\n    const comparisonRows = comparison ?? []\n    const versionRows = version ?? []\n\n    if (!Array.isArray(comparisonRows) || !Array.isArray(versionRows)) {\n      throw new Error(\n        'DiffCollapser: comparison and version must be arrays when isIterable is true',\n      )\n    }\n\n    changeCount = countChangedFieldsInRows({\n      comparisonRows,\n      config,\n      field,\n      locales,\n      parentIsLocalized,\n      versionRows,\n    })\n  } else {\n    changeCount = countChangedFields({\n      comparison,\n      config,\n      fields,\n      locales,\n      parentIsLocalized,\n      version,\n    })\n  }\n\n  const contentClassNames = [\n    `${baseClass}__content`,\n    isCollapsed && `${baseClass}__content--is-collapsed`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  return (\n    <div className={baseClass}>\n      <FieldDiffLabel>\n        <button\n          aria-label={isCollapsed ? 'Expand' : 'Collapse'}\n          className={`${baseClass}__toggle-button`}\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          type=\"button\"\n        >\n          <ChevronIcon direction={isCollapsed ? 'right' : 'down'} />\n        </button>\n        <span className={`${baseClass}__label`}>{label}</span>\n        {changeCount > 0 && (\n          <Pill className={`${baseClass}__field-change-count`} pillStyle=\"light-gray\" size=\"small\">\n            {t('version:changedFieldsCount', { count: changeCount })}\n          </Pill>\n        )}\n      </FieldDiffLabel>\n      <div className={contentClassNames}>{children}</div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}