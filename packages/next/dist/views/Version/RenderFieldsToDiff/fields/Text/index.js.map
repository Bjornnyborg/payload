{"version":3,"file":"index.js","names":["c","_c","getTranslation","FieldDiffLabel","useTranslation","React","diffStyles","DiffViewer","baseClass","Text","t0","$","comparisonValue","diffMethod","field","locale","versionValue","i18n","placeholder","t","t1","JSON","stringify","versionToRender","t2","comparisonToRender","t3","_jsx","className","children","t4","_jsxs","label"],"sources":["../../../../../../src/views/Version/RenderFieldsToDiff/fields/Text/index.tsx"],"sourcesContent":["'use client'\nimport type { TextFieldDiffClientComponent } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { FieldDiffLabel, useTranslation } from '@payloadcms/ui'\nimport React from 'react'\n\nimport './index.scss'\nimport { diffStyles } from '../styles.js'\nimport { DiffViewer } from './DiffViewer/index.js'\n\nconst baseClass = 'text-diff'\n\nexport const Text: TextFieldDiffClientComponent = ({\n  comparisonValue,\n  diffMethod,\n  field,\n  locale,\n  versionValue,\n}) => {\n  const { i18n } = useTranslation()\n\n  let placeholder = ''\n\n  if (versionValue == comparisonValue) {\n    placeholder = `[${i18n.t('general:noValue')}]`\n  }\n\n  const versionToRender: string =\n    typeof versionValue === 'string' ? versionValue : JSON.stringify(versionValue, null, 2)\n  const comparisonToRender =\n    typeof comparisonValue === 'string' ? comparisonValue : JSON.stringify(comparisonValue, null, 2)\n\n  return (\n    <div className={baseClass}>\n      <FieldDiffLabel>\n        {locale && <span className={`${baseClass}__locale-label`}>{locale}</span>}\n        {'label' in field &&\n          typeof field.label !== 'function' &&\n          getTranslation(field.label || '', i18n)}\n      </FieldDiffLabel>\n      <DiffViewer\n        comparisonToRender={comparisonToRender}\n        diffMethod={diffMethod}\n        diffStyles={diffStyles}\n        placeholder={placeholder}\n        versionToRender={versionToRender}\n      />\n    </div>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SAASC,cAAc,QAAQ;AAC/B,SAASC,cAAc,EAAEC,cAAc,QAAQ;AAC/C,OAAOC,KAAA,MAAW;AAGlB,SAASC,UAAU,QAAQ;AAC3B,SAASC,UAAU,QAAQ;AAE3B,MAAMC,SAAA,GAAY;AAElB,OAAO,MAAMC,IAAA,GAAqCC,EAAA;EAAA,MAAAC,CAAA,GAAAV,EAAA;EAAC;IAAAW,eAAA;IAAAC,UAAA;IAAAC,KAAA;IAAAC,MAAA;IAAAC;EAAA,IAAAN,EAMlD;EACC;IAAAO;EAAA,IAAiBb,cAAA;EAEjB,IAAAc,WAAA,GAAkB;EAAA,IAEdF,YAAA,IAAgBJ,eAAA;IAClBM,WAAA,CAAAA,CAAA,CAAcA,IAAID,IAAA,CAAAE,CAAA,CAAO,qBAAqB;EAA9C;EAAA,IAAAC,EAAA;EAAA,IAAAT,CAAA,QAAAK,YAAA;IAIAI,EAAA,UAAOJ,YAAA,KAAiB,WAAWA,YAAA,GAAeK,IAAA,CAAAC,SAAA,CAAeN,YAAA,SAAoB;IAAAL,CAAA,MAAAK,YAAA;IAAAL,CAAA,MAAAS,EAAA;EAAA;IAAAA,EAAA,GAAAT,CAAA;EAAA;EADvF,MAAAY,eAAA,GACEH,EAAqF;EAAA,IAAAI,EAAA;EAAA,IAAAb,CAAA,QAAAC,eAAA;IAErFY,EAAA,UAAOZ,eAAA,KAAoB,WAAWA,eAAA,GAAkBS,IAAA,CAAAC,SAAA,CAAeV,eAAA,SAAuB;IAAAD,CAAA,MAAAC,eAAA;IAAAD,CAAA,MAAAa,EAAA;EAAA;IAAAA,EAAA,GAAAb,CAAA;EAAA;EADhG,MAAAc,kBAAA,GACED,EAA8F;EAAA,IAAAE,EAAA;EAAA,IAAAf,CAAA,QAAAI,MAAA;IAKzFW,EAAA,GAAAX,MAAA,IAAUY,IAAA,CAAC;MAAAC,SAAA,EAAgB,GAAApB,SAAA,gBAA4B;MAAAqB,QAAA,EAAGd;IAAA,C;;;;;;;;IAF/De,EAAA,GAAAC,KAAA,CAAC;MAAAH,SAAA,EAAApB,SAAA;MAAAqB,QAAA,GACCE,KAAA,CAAA5B,cAAA;QAAA0B,QAAA,GACGH,E,EACA,WAAWZ,KAAA,IACV,OAAOA,KAAA,CAAAkB,KAAA,KAAgB,cACvB9B,cAAA,CAAeY,KAAA,CAAAkB,KAAA,IAAe,IAAIf,IAAA;MAAA,C,GAEtCU,IAAA,CAAApB,UAAA;QAAAkB,kBAAA;QAAAZ,UAAA;QAAAP,UAAA;QAAAY,WAAA;QAAAK;MAAA,C;;;;;;;;;;;;;SAPFO,E;CAgBJ","ignoreList":[]}