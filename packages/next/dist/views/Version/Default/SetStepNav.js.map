{"version":3,"file":"SetStepNav.js","names":["c","_c","getTranslation","useConfig","useLocale","useStepNav","useTranslation","formatDate","fieldAffectsData","formatAdminURL","useEffect","SetStepNav","t0","$","id","collectionConfig","collectionSlug","doc","fields","globalConfig","globalSlug","config","setStepNav","i18n","t","locale","t1","t2","nav","admin","t3","routes","t4","dateFormat","adminRoute","docLabel","useAsTitle","pluralLabel","labels","plural","formattedDoc","version","titleField","find","f","fieldName","name","undefined","Boolean","localized","code","url","path","label","createdAt","date","pattern","slug"],"sources":["../../../../src/views/Version/Default/SetStepNav.tsx"],"sourcesContent":["'use client'\nimport type { StepNavItem } from '@payloadcms/ui'\nimport type { ClientCollectionConfig, ClientField, ClientGlobalConfig } from 'payload'\nimport type React from 'react'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { useConfig, useLocale, useStepNav, useTranslation } from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { fieldAffectsData, formatAdminURL } from 'payload/shared'\nimport { useEffect } from 'react'\n\nexport const SetStepNav: React.FC<{\n  readonly collectionConfig?: ClientCollectionConfig\n  readonly collectionSlug?: string\n  readonly doc: any\n  readonly fields: ClientField[]\n  readonly globalConfig?: ClientGlobalConfig\n  readonly globalSlug?: string\n  readonly id?: number | string\n}> = ({ id, collectionConfig, collectionSlug, doc, fields, globalConfig, globalSlug }) => {\n  const { config } = useConfig()\n  const { setStepNav } = useStepNav()\n  const { i18n, t } = useTranslation()\n  const locale = useLocale()\n\n  useEffect(() => {\n    let nav: StepNavItem[] = []\n\n    const {\n      admin: { dateFormat },\n      routes: { admin: adminRoute },\n    } = config\n\n    if (collectionSlug && collectionConfig) {\n      let docLabel = ''\n\n      const useAsTitle = collectionConfig?.admin?.useAsTitle || 'id'\n      const pluralLabel = collectionConfig?.labels?.plural\n      const formattedDoc = doc.version ? doc.version : doc\n\n      if (formattedDoc) {\n        if (useAsTitle !== 'id') {\n          const titleField = fields.find((f) => {\n            const fieldName = 'name' in f ? f.name : undefined\n            return Boolean(fieldAffectsData(f) && fieldName === useAsTitle)\n          })\n\n          if (titleField && formattedDoc[useAsTitle]) {\n            if ('localized' in titleField && titleField.localized) {\n              docLabel = formattedDoc[useAsTitle]?.[locale.code]\n            } else {\n              docLabel = formattedDoc[useAsTitle]\n            }\n          } else {\n            docLabel = `[${t('general:untitled')}]`\n          }\n        } else {\n          docLabel = doc.id\n        }\n      }\n\n      nav = [\n        {\n          label: getTranslation(pluralLabel, i18n),\n          url: formatAdminURL({ adminRoute, path: `/collections/${collectionSlug}` }),\n        },\n        {\n          label: docLabel,\n          url: formatAdminURL({ adminRoute, path: `/collections/${collectionSlug}/${id}` }),\n        },\n        {\n          label: 'Versions',\n          url: formatAdminURL({\n            adminRoute,\n            path: `/collections/${collectionSlug}/${id}/versions`,\n          }),\n        },\n        {\n          label: doc?.createdAt\n            ? formatDate({ date: doc.createdAt, i18n, pattern: dateFormat })\n            : '',\n        },\n      ]\n    }\n\n    if (globalSlug && globalConfig) {\n      nav = [\n        {\n          label: globalConfig.label,\n          url: formatAdminURL({\n            adminRoute,\n            path: `/globals/${globalConfig.slug}`,\n          }),\n        },\n        {\n          label: 'Versions',\n          url: formatAdminURL({\n            adminRoute,\n            path: `/globals/${globalConfig.slug}/versions`,\n          }),\n        },\n        {\n          label: doc?.createdAt\n            ? formatDate({ date: doc.createdAt, i18n, pattern: dateFormat })\n            : '',\n        },\n      ]\n    }\n\n    setStepNav(nav)\n  }, [\n    config,\n    setStepNav,\n    collectionSlug,\n    globalSlug,\n    doc,\n    id,\n    locale,\n    t,\n    i18n,\n    collectionConfig,\n    fields,\n    globalConfig,\n  ])\n\n  return null\n}\n"],"mappings":"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","ignoreList":[]}