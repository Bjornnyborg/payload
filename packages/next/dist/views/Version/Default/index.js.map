{"version":3,"file":"index.js","names":["CheckboxInput","Gutter","useConfig","useDocumentInfo","useRouteTransition","useTranslation","formatDate","usePathname","useRouter","useSearchParams","React","useEffect","useMemo","useState","Restore","SelectComparison","SelectLocales","SelectedLocalesContext","SetStepNav","baseClass","DefaultVersionView","canUpdate","doc","latestDraftVersion","latestPublishedVersion","modifiedOnly","modifiedOnlyProp","RenderedDiff","selectedLocales","selectedLocalesProp","versionID","config","getEntityConfig","availableLocales","localization","locales","map","locale","label","value","code","i18n","id","collectionSlug","globalSlug","startRouteTransition","collectionConfig","globalConfig","setSelectedLocales","compareValue","setCompareValue","router","pathname","searchParams","setModifiedOnly","onToggleModifiedOnly","current","URLSearchParams","Array","from","entries","delete","set","JSON","stringify","search","toString","query","push","admin","dateFormat","routes","api","apiRoute","serverURL","versionCreatedAt","updatedAt","date","pattern","compareBaseURL","draftsEnabled","Boolean","versions","drafts","_jsxs","className","_jsx","fields","t","version","autosave","labels","singular","originalDocID","status","_status","versionDate","checked","onToggle","baseURL","onChange","parentID","options"],"sources":["../../../../src/views/Version/Default/index.tsx"],"sourcesContent":["'use client'\nimport type { OptionObject } from 'payload'\n\nimport {\n  CheckboxInput,\n  Gutter,\n  useConfig,\n  useDocumentInfo,\n  useRouteTransition,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { usePathname, useRouter, useSearchParams } from 'next/navigation.js'\nimport React, { useEffect, useMemo, useState } from 'react'\n\nimport type { CompareOption, DefaultVersionsViewProps } from './types.js'\n\nimport Restore from '../Restore/index.js'\nimport { SelectComparison } from '../SelectComparison/index.js'\nimport './index.scss'\nimport { SelectLocales } from '../SelectLocales/index.js'\nimport { SelectedLocalesContext } from './SelectedLocalesContext.js'\nimport { SetStepNav } from './SetStepNav.js'\n\nconst baseClass = 'view-version'\n\nexport const DefaultVersionView: React.FC<DefaultVersionsViewProps> = ({\n  canUpdate,\n  doc,\n  latestDraftVersion,\n  latestPublishedVersion,\n  modifiedOnly: modifiedOnlyProp,\n  RenderedDiff,\n  selectedLocales: selectedLocalesProp,\n  versionID,\n}) => {\n  const { config, getEntityConfig } = useConfig()\n\n  const availableLocales = useMemo(\n    () =>\n      config.localization\n        ? config.localization.locales.map((locale) => ({\n            label: locale.label,\n            value: locale.code,\n          }))\n        : [],\n    [config.localization],\n  )\n\n  const { i18n } = useTranslation()\n  const { id, collectionSlug, globalSlug } = useDocumentInfo()\n  const { startRouteTransition } = useRouteTransition()\n\n  const [collectionConfig] = useState(() => getEntityConfig({ collectionSlug }))\n\n  const [globalConfig] = useState(() => getEntityConfig({ globalSlug }))\n\n  const [selectedLocales, setSelectedLocales] = useState<OptionObject[]>(selectedLocalesProp)\n\n  const [compareValue, setCompareValue] = useState<CompareOption>()\n  const router = useRouter()\n  const pathname = usePathname()\n  const searchParams = useSearchParams()\n  const [modifiedOnly, setModifiedOnly] = useState(modifiedOnlyProp)\n  function onToggleModifiedOnly() {\n    setModifiedOnly(!modifiedOnly)\n  }\n\n  useEffect(() => {\n    // If the selected comparison doc or locales change, update URL params so that version page\n    // This is so that RSC can update the version comparison state\n    const current = new URLSearchParams(Array.from(searchParams.entries()))\n\n    if (!compareValue) {\n      current.delete('compareValue')\n    } else {\n      current.set('compareValue', compareValue?.value)\n    }\n\n    if (!selectedLocales) {\n      current.delete('localeCodes')\n    } else {\n      current.set('localeCodes', JSON.stringify(selectedLocales.map((locale) => locale.value)))\n    }\n\n    if (modifiedOnly === false) {\n      current.set('modifiedOnly', 'false')\n    } else {\n      current.delete('modifiedOnly')\n    }\n\n    const search = current.toString()\n    const query = search ? `?${search}` : ''\n\n    // TODO: this transition occurs multiple times during the initial rendering phases, need to evaluate\n    startRouteTransition(() => router.push(`${pathname}${query}`))\n  }, [\n    compareValue,\n    pathname,\n    router,\n    searchParams,\n    selectedLocales,\n    modifiedOnly,\n    startRouteTransition,\n  ])\n\n  const {\n    admin: { dateFormat },\n    localization,\n    routes: { api: apiRoute },\n    serverURL,\n  } = config\n\n  const versionCreatedAt = doc?.updatedAt\n    ? formatDate({ date: doc.updatedAt, i18n, pattern: dateFormat })\n    : ''\n\n  const compareBaseURL = `${serverURL}${apiRoute}/${globalSlug ? 'globals/' : ''}${\n    collectionSlug || globalSlug\n  }/versions`\n\n  const draftsEnabled = Boolean((collectionConfig || globalConfig)?.versions.drafts)\n\n  return (\n    <main className={baseClass}>\n      <SetStepNav\n        collectionConfig={collectionConfig}\n        collectionSlug={collectionSlug}\n        doc={doc}\n        fields={(collectionConfig || globalConfig)?.fields}\n        globalConfig={globalConfig}\n        globalSlug={globalSlug}\n        id={id}\n      />\n      <Gutter className={`${baseClass}__wrap`}>\n        <div className={`${baseClass}__header-wrap`}>\n          <p className={`${baseClass}__created-at`}>\n            {i18n.t('version:versionCreatedOn', {\n              version: i18n.t(doc?.autosave ? 'version:autosavedVersion' : 'version:version'),\n            })}\n          </p>\n          <header className={`${baseClass}__header`}>\n            <h2>{versionCreatedAt}</h2>\n            {canUpdate && (\n              <Restore\n                className={`${baseClass}__restore`}\n                collectionSlug={collectionSlug}\n                globalSlug={globalSlug}\n                label={collectionConfig?.labels.singular || globalConfig?.label}\n                originalDocID={id}\n                status={doc?.version?._status}\n                versionDate={versionCreatedAt}\n                versionID={versionID}\n              />\n            )}\n            <span className={`${baseClass}__modifiedCheckBox`}>\n              <CheckboxInput\n                checked={modifiedOnly}\n                id={'modifiedOnly'}\n                label={i18n.t('version:modifiedOnly')}\n                onToggle={onToggleModifiedOnly}\n              />\n            </span>\n          </header>\n        </div>\n        <div className={`${baseClass}__controls`}>\n          <SelectComparison\n            baseURL={compareBaseURL}\n            draftsEnabled={draftsEnabled}\n            latestDraftVersion={latestDraftVersion}\n            latestPublishedVersion={latestPublishedVersion}\n            onChange={setCompareValue}\n            parentID={id}\n            value={compareValue}\n            versionID={versionID}\n          />\n          {localization && (\n            <SelectLocales\n              onChange={setSelectedLocales}\n              options={availableLocales}\n              value={selectedLocales}\n            />\n          )}\n        </div>\n        <SelectedLocalesContext\n          value={{ selectedLocales: selectedLocales.map((locale) => locale.value) }}\n        >\n          {doc?.version && RenderedDiff}\n        </SelectedLocalesContext>\n      </Gutter>\n    </main>\n  )\n}\n"],"mappings":"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","ignoreList":[]}