{"version":3,"file":"index.js","names":["RenderServerComponent","getClientConfig","notFound","redirect","formatAdminURL","React","Fragment","DefaultTemplate","MinimalTemplate","initPage","getViewFromConfig","RootPage","config","configPromise","importMap","params","paramsPromise","searchParams","searchParamsPromise","admin","routes","createFirstUser","_createFirstUserRoute","user","userSlug","adminRoute","currentRoute","path","Array","isArray","segments","join","DefaultView","documentSubViewType","initPageOptions","serverProps","templateClassName","templateType","viewType","initPageResult","dbHasUser","req","payload","db","findOne","collection","then","doc","Component","payloadComponent","redirectTo","createFirstUserRoute","collectionConfig","collections","find","slug","disableLocalStrategy","auth","clientConfig","i18n","RenderedView","clientProps","Fallback","docID","_jsxs","_jsx","className","collectionSlug","globalSlug","globalConfig","locale","permissions","viewActions","visibleEntities","globals"],"sources":["../../../src/views/Root/index.tsx"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type { Metadata } from 'next'\nimport type {\n  AdminViewClientProps,\n  AdminViewServerPropsOnly,\n  ImportMap,\n  SanitizedConfig,\n} from 'payload'\n\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { getClientConfig } from '@payloadcms/ui/utilities/getClientConfig'\nimport { notFound, redirect } from 'next/navigation.js'\nimport { formatAdminURL } from 'payload/shared'\nimport React, { Fragment } from 'react'\n\nimport { DefaultTemplate } from '../../templates/Default/index.js'\nimport { MinimalTemplate } from '../../templates/Minimal/index.js'\nimport { initPage } from '../../utilities/initPage/index.js'\nimport { getViewFromConfig } from './getViewFromConfig.js'\n\nexport type GenerateViewMetadata = (args: {\n  config: SanitizedConfig\n  i18n: I18nClient\n  isEditing?: boolean\n  params?: { [key: string]: string | string[] }\n}) => Promise<Metadata>\n\nexport const RootPage = async ({\n  config: configPromise,\n  importMap,\n  params: paramsPromise,\n  searchParams: searchParamsPromise,\n}: {\n  readonly config: Promise<SanitizedConfig>\n  readonly importMap: ImportMap\n  readonly params: Promise<{\n    segments: string[]\n  }>\n  readonly searchParams: Promise<{\n    [key: string]: string | string[]\n  }>\n}) => {\n  const config = await configPromise\n\n  const {\n    admin: {\n      routes: { createFirstUser: _createFirstUserRoute },\n      user: userSlug,\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  const params = await paramsPromise\n\n  const currentRoute = formatAdminURL({\n    adminRoute,\n    path: Array.isArray(params.segments) ? `/${params.segments.join('/')}` : null,\n  })\n\n  const segments = Array.isArray(params.segments) ? params.segments : []\n\n  const searchParams = await searchParamsPromise\n\n  const {\n    DefaultView,\n    documentSubViewType,\n    initPageOptions,\n    serverProps,\n    templateClassName,\n    templateType,\n    viewType,\n  } = getViewFromConfig({\n    adminRoute,\n    config,\n    currentRoute,\n    importMap,\n    searchParams,\n    segments,\n  })\n\n  const initPageResult = await initPage(initPageOptions)\n\n  const dbHasUser =\n    initPageResult.req.user ||\n    (await initPageResult?.req.payload.db\n      .findOne({\n        collection: userSlug,\n        req: initPageResult?.req,\n      })\n      ?.then((doc) => !!doc))\n\n  if (!DefaultView?.Component && !DefaultView?.payloadComponent) {\n    if (initPageResult?.req?.user) {\n      notFound()\n    }\n\n    if (dbHasUser) {\n      redirect(adminRoute)\n    }\n  }\n\n  if (typeof initPageResult?.redirectTo === 'string') {\n    redirect(initPageResult.redirectTo)\n  }\n\n  if (initPageResult) {\n    const createFirstUserRoute = formatAdminURL({ adminRoute, path: _createFirstUserRoute })\n\n    const collectionConfig = config.collections.find(({ slug }) => slug === userSlug)\n    const disableLocalStrategy = collectionConfig?.auth?.disableLocalStrategy\n\n    if (disableLocalStrategy && currentRoute === createFirstUserRoute) {\n      redirect(adminRoute)\n    }\n\n    if (!dbHasUser && currentRoute !== createFirstUserRoute && !disableLocalStrategy) {\n      redirect(createFirstUserRoute)\n    }\n\n    if (dbHasUser && currentRoute === createFirstUserRoute) {\n      redirect(adminRoute)\n    }\n  }\n\n  if (!DefaultView?.Component && !DefaultView?.payloadComponent && !dbHasUser) {\n    redirect(adminRoute)\n  }\n\n  const clientConfig = getClientConfig({\n    config,\n    i18n: initPageResult?.req.i18n,\n    importMap,\n  })\n\n  const RenderedView = RenderServerComponent({\n    clientProps: { clientConfig, documentSubViewType, viewType } satisfies AdminViewClientProps,\n    Component: DefaultView.payloadComponent,\n    Fallback: DefaultView.Component,\n    importMap,\n    serverProps: {\n      ...serverProps,\n      clientConfig,\n      docID: initPageResult?.docID,\n      i18n: initPageResult?.req.i18n,\n      importMap,\n      initPageResult,\n      params,\n      payload: initPageResult?.req.payload,\n      searchParams,\n    } satisfies AdminViewServerPropsOnly,\n  })\n\n  return (\n    <Fragment>\n      {!templateType && <Fragment>{RenderedView}</Fragment>}\n      {templateType === 'minimal' && (\n        <MinimalTemplate className={templateClassName}>{RenderedView}</MinimalTemplate>\n      )}\n      {templateType === 'default' && (\n        <DefaultTemplate\n          collectionSlug={initPageResult?.collectionConfig?.slug}\n          docID={initPageResult?.docID}\n          documentSubViewType={documentSubViewType}\n          globalSlug={initPageResult?.globalConfig?.slug}\n          i18n={initPageResult?.req.i18n}\n          locale={initPageResult?.locale}\n          params={params}\n          payload={initPageResult?.req.payload}\n          permissions={initPageResult?.permissions}\n          searchParams={searchParams}\n          user={initPageResult?.req.user}\n          viewActions={serverProps.viewActions}\n          viewType={viewType}\n          visibleEntities={{\n            // The reason we are not passing in initPageResult.visibleEntities directly is due to a \"Cannot assign to read only property of object '#<Object>\" error introduced in React 19\n            // which this caused as soon as initPageResult.visibleEntities is passed in\n            collections: initPageResult?.visibleEntities?.collections,\n            globals: initPageResult?.visibleEntities?.globals,\n          }}\n        >\n          {RenderedView}\n        </DefaultTemplate>\n      )}\n    </Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}