{"version":3,"file":"index.js","names":["Gutter","ListQueryProvider","SetDocumentStepNav","notFound","logError","isNumber","React","buildVersionColumns","getLatestVersion","VersionsViewClient","baseClass","VersionsView","props","initPageResult","searchParams","collectionConfig","docID","id","globalConfig","req","i18n","payload","config","t","user","collectionSlug","slug","globalSlug","limit","page","sort","localization","routes","api","apiRoute","serverURL","versionsData","limitToUse","Number","undefined","latestPublishedVersion","latestDraftVersion","admin","pagination","defaultLimit","whereQuery","and","parent","equals","versions","drafts","push","snapshot","not_equals","findVersions","collection","depth","overrideAccess","parseInt","toString","where","type","parentID","status","err","findGlobalVersions","fetchURL","publishedNewerThanDraft","updatedAt","columns","docs","pluralLabel","labels","plural","label","_jsxs","Fragment","_jsx","useAsTitle","view","className","data","defaultSort","modifySearchParams","orderableFieldName","orderable","paginationLimits","limits"],"sources":["../../../src/views/Versions/index.tsx"],"sourcesContent":["import { Gutter, ListQueryProvider, SetDocumentStepNav } from '@payloadcms/ui'\nimport { notFound } from 'next/navigation.js'\nimport { type DocumentViewServerProps, logError, type PaginatedDocs } from 'payload'\nimport { isNumber } from 'payload/shared'\nimport React from 'react'\n\nimport { buildVersionColumns } from './buildColumns.js'\nimport { getLatestVersion } from './getLatestVersion.js'\nimport { VersionsViewClient } from './index.client.js'\nimport './index.scss'\n\nexport const baseClass = 'versions'\n\nexport async function VersionsView(props: DocumentViewServerProps) {\n  const { initPageResult, searchParams } = props\n\n  const {\n    collectionConfig,\n    docID: id,\n    globalConfig,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: { config },\n      t,\n      user,\n    },\n  } = initPageResult\n\n  const collectionSlug = collectionConfig?.slug\n  const globalSlug = globalConfig?.slug\n  const { limit, page, sort } = searchParams\n\n  const {\n    localization,\n    routes: { api: apiRoute },\n    serverURL,\n  } = config\n\n  let versionsData: PaginatedDocs\n  let limitToUse = isNumber(limit) ? Number(limit) : undefined\n  let latestPublishedVersion = null\n  let latestDraftVersion = null\n\n  if (collectionSlug) {\n    limitToUse = limitToUse || collectionConfig.admin.pagination.defaultLimit\n    const whereQuery: {\n      and: Array<{ parent?: { equals: number | string }; snapshot?: { not_equals: boolean } }>\n    } = {\n      and: [\n        {\n          parent: {\n            equals: id,\n          },\n        },\n      ],\n    }\n\n    if (localization && collectionConfig?.versions?.drafts) {\n      whereQuery.and.push({\n        snapshot: {\n          not_equals: true,\n        },\n      })\n    }\n\n    try {\n      versionsData = await payload.findVersions({\n        collection: collectionSlug,\n        depth: 0,\n        limit: limitToUse,\n        overrideAccess: false,\n        page: page ? parseInt(page.toString(), 10) : undefined,\n        req,\n        sort: sort as string,\n        user,\n        where: whereQuery,\n      })\n      if (collectionConfig?.versions?.drafts) {\n        latestDraftVersion = await getLatestVersion({\n          slug: collectionSlug,\n          type: 'collection',\n          parentID: id,\n          payload,\n          status: 'draft',\n        })\n        latestPublishedVersion = await getLatestVersion({\n          slug: collectionSlug,\n          type: 'collection',\n          parentID: id,\n          payload,\n          status: 'published',\n        })\n      }\n    } catch (err) {\n      logError({ err, payload })\n    }\n  }\n\n  if (globalSlug) {\n    limitToUse = limitToUse || 10\n    const whereQuery =\n      localization && globalConfig?.versions?.drafts\n        ? {\n            snapshot: {\n              not_equals: true,\n            },\n          }\n        : {}\n\n    try {\n      versionsData = await payload.findGlobalVersions({\n        slug: globalSlug,\n        depth: 0,\n        limit: limitToUse,\n        overrideAccess: false,\n        page: page ? parseInt(page as string, 10) : undefined,\n        req,\n        sort: sort as string,\n        user,\n        where: whereQuery,\n      })\n\n      if (globalConfig?.versions?.drafts) {\n        latestDraftVersion = await getLatestVersion({\n          slug: globalSlug,\n          type: 'global',\n          payload,\n          status: 'draft',\n        })\n        latestPublishedVersion = await getLatestVersion({\n          slug: globalSlug,\n          type: 'global',\n          payload,\n          status: 'published',\n        })\n      }\n    } catch (err) {\n      logError({ err, payload })\n    }\n\n    if (!versionsData) {\n      return notFound()\n    }\n  }\n  const fetchURL = collectionSlug\n    ? `${serverURL}${apiRoute}/${collectionSlug}/versions`\n    : globalSlug\n      ? `${serverURL}${apiRoute}/globals/${globalSlug}/versions`\n      : ''\n\n  const publishedNewerThanDraft = latestPublishedVersion?.updatedAt > latestDraftVersion?.updatedAt\n\n  if (publishedNewerThanDraft) {\n    latestDraftVersion = {\n      id: '',\n      updatedAt: '',\n    }\n  }\n\n  const columns = buildVersionColumns({\n    collectionConfig,\n    config,\n    docID: id,\n    docs: versionsData?.docs,\n    globalConfig,\n    i18n,\n    latestDraftVersion: latestDraftVersion?.id,\n    latestPublishedVersion: latestPublishedVersion?.id,\n  })\n\n  const pluralLabel = collectionConfig?.labels?.plural\n    ? typeof collectionConfig.labels.plural === 'function'\n      ? collectionConfig.labels.plural({ i18n, t })\n      : collectionConfig.labels.plural\n    : globalConfig?.label\n\n  return (\n    <React.Fragment>\n      <SetDocumentStepNav\n        collectionSlug={collectionConfig?.slug}\n        globalSlug={globalConfig?.slug}\n        id={id}\n        pluralLabel={pluralLabel}\n        useAsTitle={collectionConfig?.admin?.useAsTitle || globalConfig?.slug}\n        view={i18n.t('version:versions')}\n      />\n      <main className={baseClass}>\n        <Gutter className={`${baseClass}__wrap`}>\n          <ListQueryProvider\n            data={versionsData}\n            defaultLimit={limitToUse}\n            defaultSort={sort as string}\n            modifySearchParams\n            orderableFieldName={collectionConfig?.orderable === true ? '_order' : undefined}\n          >\n            <VersionsViewClient\n              baseClass={baseClass}\n              columns={columns}\n              fetchURL={fetchURL}\n              paginationLimits={collectionConfig?.admin?.pagination?.limits}\n            />\n          </ListQueryProvider>\n        </Gutter>\n      </main>\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}