{"version":3,"file":"index.js","names":["c","_c","Pill","useConfig","useTranslation","React","Fragment","renderPill","data","latestVersion","currentLabel","previousLabel","pillStyle","_jsxs","id","_jsx","AutosaveCell","t0","$","latestDraftVersion","latestPublishedVersion","rowData","t1","t2","undefined","autosave","publishedLocale","version","i18n","t","config","t3","localization","status","_status","t4","language","publishedLocalePill","versionInfo","draft","published","locales","localeCode","Array","isArray","t5","loc","code","locale","find","formattedLabel","label","children"],"sources":["../../../../../src/views/Versions/cells/AutosaveCell/index.tsx"],"sourcesContent":["'use client'\nimport { Pill, useConfig, useTranslation } from '@payloadcms/ui'\nimport React, { Fragment } from 'react'\n\ntype AutosaveCellProps = {\n  latestDraftVersion?: string\n  latestPublishedVersion?: string\n  rowData?: {\n    autosave?: boolean\n    publishedLocale?: string\n    version: {\n      _status?: string\n    }\n  }\n}\n\nexport const renderPill = (data, latestVersion, currentLabel, previousLabel, pillStyle) => {\n  return (\n    <React.Fragment>\n      {data?.id === latestVersion ? (\n        <Pill pillStyle={pillStyle}>{currentLabel}</Pill>\n      ) : (\n        <Pill>{previousLabel}</Pill>\n      )}\n      &nbsp;&nbsp;\n    </React.Fragment>\n  )\n}\n\nexport const AutosaveCell: React.FC<AutosaveCellProps> = ({\n  latestDraftVersion,\n  latestPublishedVersion,\n  rowData = { autosave: undefined, publishedLocale: undefined, version: undefined },\n}) => {\n  const { i18n, t } = useTranslation()\n\n  const {\n    config: { localization },\n  } = useConfig()\n\n  const publishedLocale = rowData?.publishedLocale || undefined\n  const status = rowData?.version._status\n  let publishedLocalePill = null\n\n  const versionInfo = {\n    draft: {\n      currentLabel: t('version:currentDraft'),\n      latestVersion: latestDraftVersion,\n      pillStyle: undefined,\n      previousLabel: t('version:draft'),\n    },\n    published: {\n      currentLabel: t('version:currentPublishedVersion'),\n      latestVersion: latestPublishedVersion,\n      pillStyle: 'success',\n      previousLabel: t('version:previouslyPublished'),\n    },\n  }\n\n  const { currentLabel, latestVersion, pillStyle, previousLabel } = versionInfo[status] || {}\n\n  if (localization && localization?.locales && publishedLocale) {\n    const localeCode = Array.isArray(publishedLocale) ? publishedLocale[0] : publishedLocale\n\n    const locale = localization.locales.find((loc) => loc.code === localeCode)\n    const formattedLabel = locale?.label?.[i18n?.language] || locale?.label\n\n    if (formattedLabel) {\n      publishedLocalePill = <Pill>{formattedLabel}</Pill>\n    }\n  }\n\n  return (\n    <Fragment>\n      {rowData?.autosave && <Pill>{t('version:autosave')}</Pill>}\n      {status && renderPill(rowData, latestVersion, currentLabel, previousLabel, pillStyle)}\n      {publishedLocalePill}\n    </Fragment>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,SAASC,IAAI,EAAEC,SAAS,EAAEC,cAAc,QAAQ;AAChD,OAAOC,KAAA,IAASC,QAAQ,QAAQ;AAchC,OAAO,MAAMC,UAAA,GAAaA,CAACC,IAAA,EAAMC,aAAA,EAAeC,YAAA,EAAcC,aAAA,EAAeC,SAAA;EAC3E,oBACEC,KAAA,CAACR,KAAA,CAAMC,QAAQ;eACZE,IAAA,EAAMM,EAAA,KAAOL,aAAA,gBACZM,IAAA,CAACb,IAAA;MAAKU,SAAA,EAAWA,SAAA;gBAAYF;sBAE7BK,IAAA,CAACb,IAAA;gBAAMS;QACP;;AAIR;AAEA,OAAO,MAAMK,YAAA,GAA4CC,EAAA;EAAA,MAAAC,CAAA,GAAAjB,EAAA;EAAC;IAAAkB,kBAAA;IAAAC,sBAAA;IAAAC,OAAA,EAAAC;EAAA,IAAAL,EAIzD;EAAA,IAAAM,EAAA;EAAA,IAAAL,CAAA,QAAAI,EAAA;IADCC,EAAA,GAAAD,EAAiF,KAAAE,SAAA;MAAAC,QAAA,EAAAD,SAAA;MAAAE,eAAA,EAAAF,SAAA;MAAAG,OAAA,EAAAH;IAAA,IAAjFF,EAAiF;IAAAJ,CAAA,MAAAI,EAAA;IAAAJ,CAAA,MAAAK,EAAA;EAAA;IAAAA,EAAA,GAAAL,CAAA;EAAA;EAAjF,MAAAG,OAAA,GAAAE,EAAiF;EAEjF;IAAAK,IAAA;IAAAC;EAAA,IAAoBzB,cAAA;EAEpB;IAAA0B,MAAA,EAAAC;EAAA,IAEI5B,SAAA;EADM;IAAA6B;EAAA,IAAAD,EAAgB;EAG1B,MAAAL,eAAA,GAAwBL,OAAA,EAAAK,eAAA,IAAAF,SAA4B;EACpD,MAAAS,MAAA,GAAeZ,OAAA,EAAAM,OAAA,CAAAO,OAAA;EAAiB,IAAAC,EAAA;EAAA,IAAAjB,CAAA,QAAAU,IAAA,EAAAQ,QAAA,IAAAlB,CAAA,QAAAC,kBAAA,IAAAD,CAAA,QAAAE,sBAAA,IAAAF,CAAA,QAAAc,YAAA,IAAAd,CAAA,QAAAQ,eAAA,IAAAR,CAAA,QAAAG,OAAA,IAAAH,CAAA,QAAAe,MAAA,IAAAf,CAAA,QAAAW,CAAA;IAChC,IAAAQ,mBAAA;IAEA,MAAAC,WAAA;MAAAC,KAAA;QAAA7B,YAAA,EAEkBmB,CAAA,CAAE;QAAApB,aAAA,EACDU,kBAAA;QAAAP,SAAA,EAAAY,SAAA;QAAAb,aAAA,EAEAkB,CAAA,CAAE;MAAA;MAAAW,SAAA;QAAA9B,YAAA,EAGHmB,CAAA,CAAE;QAAApB,aAAA,EACDW,sBAAA;QAAAR,SAAA,EACJ;QAAAD,aAAA,EACIkB,CAAA,CAAE;MAAA;IAAA;IAIrB;MAAAnB,YAAA;MAAAD,aAAA;MAAAG,SAAA;MAAAD;IAAA,IAAkE2B,WAAW,CAACL,MAAA,OAAY;IAAA,IAEtFD,YAAA,IAAgBA,YAAA,EAAAS,OAAc,IAAWf,eAAA;MAC3C,MAAAgB,UAAA,GAAmBC,KAAA,CAAAC,OAAA,CAAclB,eAAA,IAAmBA,eAAe,MAAMA,eAAA;MAAA,IAAAmB,EAAA;MAAA,IAAA3B,CAAA,SAAAwB,UAAA;QAEhCG,EAAA,GAAAC,GAAA,IAASA,GAAA,CAAAC,IAAA,KAAaL,UAAA;QAAAxB,CAAA,OAAAwB,UAAA;QAAAxB,CAAA,OAAA2B,EAAA;MAAA;QAAAA,EAAA,GAAA3B,CAAA;MAAA;MAA/D,MAAA8B,MAAA,GAAehB,YAAA,CAAAS,OAAA,CAAAQ,IAAA,CAA0BJ,EAAsB;MAC/D,MAAAK,cAAA,GAAuBF,MAAA,EAAAG,KAAA,GAAgBvB,IAAA,EAAAQ,QAAA,KAAmBY,MAAA,EAAAG,KAAQ;MAAA,IAE9DD,cAAA;QACFb,mBAAA,CAAAA,CAAA,CAAsBA,UAAA,CAAAA;UAAAA,SAAA,CAAOa;QAAA,C;MAA7B;IAAA;IAAA,IAAAL,EAAA;IAAA,IAAA3B,CAAA,SAAAG,OAAA,EAAAI,QAAA,IAAAP,CAAA,SAAAW,CAAA;MAMCgB,EAAA,GAAAxB,OAAA,EAAAI,QAAA,IAAqBV,IAAA,CAAAb,IAAA;QAAAkD,QAAA,EAAOvB,CAAA,CAAE;MAAA,C;;;;;;;IADjCM,EAAA,GAAAtB,KAAA,CAAAP,QAAA;MAAA8C,QAAA,GACGP,E,EACAZ,MAAA,IAAU1B,UAAA,CAAWc,OAAA,EAASZ,aAAA,EAAeC,YAAA,EAAcC,aAAA,EAAeC,SAAA,GAC1EyB,mBAAA;IAAA,C;;;;;;;;;;;;;SAHHF,E;CAMJ","ignoreList":[]}