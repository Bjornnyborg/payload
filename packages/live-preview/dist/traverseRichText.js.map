{"version":3,"sources":["../src/traverseRichText.ts"],"sourcesContent":["import type { DocumentEvent } from 'payload'\n\nimport type { PopulationsByCollection } from './types.js'\n\nexport const traverseRichText = ({\n  externallyUpdatedRelationship,\n  incomingData,\n  populationsByCollection,\n  result,\n}: {\n  externallyUpdatedRelationship?: DocumentEvent\n  incomingData: any\n  populationsByCollection: PopulationsByCollection\n  result: any\n}): any => {\n  if (Array.isArray(incomingData)) {\n    if (!result) {\n      result = []\n    }\n\n    result = incomingData.map((item, index) => {\n      if (!result[index]) {\n        result[index] = item\n      }\n\n      return traverseRichText({\n        externallyUpdatedRelationship,\n        incomingData: item,\n        populationsByCollection,\n        result: result[index],\n      })\n    })\n  } else if (incomingData && typeof incomingData === 'object') {\n    if (!result) {\n      result = {}\n    }\n\n    // Remove keys from `result` that do not appear in `incomingData`\n    // There's likely another way to do this,\n    // But recursion and references make this very difficult\n    Object.keys(result).forEach((key) => {\n      if (!(key in incomingData)) {\n        delete result[key]\n      }\n    })\n\n    // Iterate over the keys of `incomingData` and populate `result`\n    Object.keys(incomingData).forEach((key) => {\n      if (!result[key]) {\n        // Instantiate the key in `result` if it doesn't exist\n        // Ensure its type matches the type of the `incomingData`\n        // We don't have a schema to check against here\n        result[key] =\n          incomingData[key] && typeof incomingData[key] === 'object'\n            ? Array.isArray(incomingData[key])\n              ? []\n              : {}\n            : undefined\n      }\n\n      const isRelationship = key === 'value' && 'relationTo' in incomingData\n\n      if (isRelationship) {\n        // or if there are no keys besides id\n        const needsPopulation =\n          !result.value ||\n          typeof result.value !== 'object' ||\n          (typeof result.value === 'object' &&\n            Object.keys(result.value).length === 1 &&\n            'id' in result.value)\n\n        const hasChanged =\n          result &&\n          typeof result === 'object' &&\n          result.value.id === externallyUpdatedRelationship?.id\n\n        if (needsPopulation || hasChanged) {\n          if (!populationsByCollection[incomingData.relationTo]) {\n            populationsByCollection[incomingData.relationTo] = []\n          }\n\n          populationsByCollection[incomingData.relationTo]?.push({\n            id:\n              incomingData[key] && typeof incomingData[key] === 'object'\n                ? incomingData[key].id\n                : incomingData[key],\n            accessor: 'value',\n            ref: result,\n          })\n        }\n      } else {\n        result[key] = traverseRichText({\n          externallyUpdatedRelationship,\n          incomingData: incomingData[key],\n          populationsByCollection,\n          result: result[key],\n        })\n      }\n    })\n  } else {\n    result = incomingData\n  }\n\n  return result\n}\n"],"names":["traverseRichText","externallyUpdatedRelationship","incomingData","populationsByCollection","result","Array","isArray","map","item","index","Object","keys","forEach","key","undefined","isRelationship","needsPopulation","value","length","hasChanged","id","relationTo","push","accessor","ref"],"mappings":"AAIA,OAAO,MAAMA,mBAAmB,CAAC,EAC/BC,6BAA6B,EAC7BC,YAAY,EACZC,uBAAuB,EACvBC,MAAM,EAMP;IACC,IAAIC,MAAMC,OAAO,CAACJ,eAAe;QAC/B,IAAI,CAACE,QAAQ;YACXA,SAAS,EAAE;QACb;QAEAA,SAASF,aAAaK,GAAG,CAAC,CAACC,MAAMC;YAC/B,IAAI,CAACL,MAAM,CAACK,MAAM,EAAE;gBAClBL,MAAM,CAACK,MAAM,GAAGD;YAClB;YAEA,OAAOR,iBAAiB;gBACtBC;gBACAC,cAAcM;gBACdL;gBACAC,QAAQA,MAAM,CAACK,MAAM;YACvB;QACF;IACF,OAAO,IAAIP,gBAAgB,OAAOA,iBAAiB,UAAU;QAC3D,IAAI,CAACE,QAAQ;YACXA,SAAS,CAAC;QACZ;QAEA,iEAAiE;QACjE,yCAAyC;QACzC,wDAAwD;QACxDM,OAAOC,IAAI,CAACP,QAAQQ,OAAO,CAAC,CAACC;YAC3B,IAAI,CAAEA,CAAAA,OAAOX,YAAW,GAAI;gBAC1B,OAAOE,MAAM,CAACS,IAAI;YACpB;QACF;QAEA,gEAAgE;QAChEH,OAAOC,IAAI,CAACT,cAAcU,OAAO,CAAC,CAACC;YACjC,IAAI,CAACT,MAAM,CAACS,IAAI,EAAE;gBAChB,sDAAsD;gBACtD,yDAAyD;gBACzD,+CAA+C;gBAC/CT,MAAM,CAACS,IAAI,GACTX,YAAY,CAACW,IAAI,IAAI,OAAOX,YAAY,CAACW,IAAI,KAAK,WAC9CR,MAAMC,OAAO,CAACJ,YAAY,CAACW,IAAI,IAC7B,EAAE,GACF,CAAC,IACHC;YACR;YAEA,MAAMC,iBAAiBF,QAAQ,WAAW,gBAAgBX;YAE1D,IAAIa,gBAAgB;gBAClB,qCAAqC;gBACrC,MAAMC,kBACJ,CAACZ,OAAOa,KAAK,IACb,OAAOb,OAAOa,KAAK,KAAK,YACvB,OAAOb,OAAOa,KAAK,KAAK,YACvBP,OAAOC,IAAI,CAACP,OAAOa,KAAK,EAAEC,MAAM,KAAK,KACrC,QAAQd,OAAOa,KAAK;gBAExB,MAAME,aACJf,UACA,OAAOA,WAAW,YAClBA,OAAOa,KAAK,CAACG,EAAE,KAAKnB,+BAA+BmB;gBAErD,IAAIJ,mBAAmBG,YAAY;oBACjC,IAAI,CAAChB,uBAAuB,CAACD,aAAamB,UAAU,CAAC,EAAE;wBACrDlB,uBAAuB,CAACD,aAAamB,UAAU,CAAC,GAAG,EAAE;oBACvD;oBAEAlB,uBAAuB,CAACD,aAAamB,UAAU,CAAC,EAAEC,KAAK;wBACrDF,IACElB,YAAY,CAACW,IAAI,IAAI,OAAOX,YAAY,CAACW,IAAI,KAAK,WAC9CX,YAAY,CAACW,IAAI,CAACO,EAAE,GACpBlB,YAAY,CAACW,IAAI;wBACvBU,UAAU;wBACVC,KAAKpB;oBACP;gBACF;YACF,OAAO;gBACLA,MAAM,CAACS,IAAI,GAAGb,iBAAiB;oBAC7BC;oBACAC,cAAcA,YAAY,CAACW,IAAI;oBAC/BV;oBACAC,QAAQA,MAAM,CAACS,IAAI;gBACrB;YACF;QACF;IACF,OAAO;QACLT,SAASF;IACX;IAEA,OAAOE;AACT,EAAC"}